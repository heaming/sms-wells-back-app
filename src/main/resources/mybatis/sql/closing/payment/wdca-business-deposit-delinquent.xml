<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.closing.payment.mapper.WdcaBusinessDepositDelinquentMapper">
    <select id="selectBusinessDepositDelinquentPages" resultType="com.kyowon.sms.wells.web.closing.payment.dto.WdcaBusinessDepositDelinquentDto$SearchRes">
        SELECT E.DGR2_LEVL_OG_CD		/* 접수당시 지역단 코드 : 지역단 코드 노출 */
             , E.DGR2_LEVL_DG_PRTNR_NM /* 접수당시 지역단장 : 지역단장명 노출 */
             , E.DGR3_LEVL_OG_CD		/* 접수당시 지점코드 : 지점코드 노출 */
             , E.DGR3_LEVL_DG_PRTNR_NM	/* 접수당시 지점장 : 지점장명 노출 */
             , E.DGR3_LEVL_DG_PRTNR_NO	/* 접수당시 번호 : 지점장 사번 노출 */
             , C.PRTNR_KNM				/* 접수당시 판매자명 : 판매자명 노출 */
             , C.PRTNR_NO				/* 접수당시 번호 : 판매자 사번 노출 */
             , C.CLTN_DT					/* 접수당시 해약일자 : 해약 년/월/일 노출 */
             , E2.DGR3_LEVL_OG_CD		AS NOW_DGR3_LEVL_OG_CD	/* 현재소속 지점코드 : 지점코드 노출 */
             , E2.DGR3_LEVL_DG_PRTNR_NM	AS NOW_DGR3_LEVL_DG_PRTNR_NM	/* 현재소속 지점장 : 지점장명 노출 */
             , E2.DGR3_LEVL_DG_PRTNR_NO	AS NOW_DGR3_LEVL_DG_PRTNR_NO	/* 현재소속 번호 : 지점장 사번 노출 */
             , C2.PRTNR_KNM				AS NOW_PRTNR_KNM	/* 현재소속 판매자명 : 판매자명 노출 */
             , C2.PRTNR_NO				AS NOW_PRTNR_NO	/* 현재소속 번호 : 판매자 사번 노출 */
             , C2.CLTN_DT				AS NOW_CLTN_DT	/* 현재소속 해약일자 : 해약 년/월/일 노출 */
             , (SELECT F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', A.SELL_TP_DTL_CD) FROM DUAL)		AS SELL_TP_NM /* 업무구분 : 렌탈, 멤버십, 정기배송, 금융리스, 홈케어, 일시불 중 해당데이터 노출 */
             , A.CNTR_NO || '-' || A.CNTR_SN 									AS CNTR_DTL_NO/* 계약상세번호 : 계약상세번호 노출 */
             , CST.CST_NO /* 고객번호 : 고객번호 노출 */
             , (SELECT CST_KNM FROM TB_CUBS_CST_BAS WHERE CST_NO = CST.CST_NO) 	AS CST_KNM/* 고객명 : 고객명 노출 */
             , (SELECT PD_NM FROM TB_PDBS_PD_BAS WHERE PD_CD = A.BASE_PD_CD) 	AS PD_NM/* 제품명 : 제품명 노출 */
             , SUBSTR(B.CNTR_CNFM_DTM, 1, 8)			AS CNTR_CNFM_DTM/* 계약일자 : 계약 년/월/일 노출 */
             , SUBSTR(G.IST_DTM, 1, 8) 	AS IST_DTM/* 설치일자 : 설치 년/월/일 노출 */
             , A.FNL_AMT					AS RENTAL_AMT /* 월 렌탈료 : 월 렌탈금액 노출 */
             , A.STPL_PTRM				AS ISTM_MCN/* 의무약정 : 의무약정 개월수 노출 */
             /* 2022.12 조회 시 : 8~10월 설치 주문 조회 (그리드는 9,10,11월 청구/입금실적) */
             , CASE WHEN A.SELL_TP_DTL_CD IN ('21', '23') THEN NVL(G4.EOT_UC_AMT, 0) ELSE NVL(G4.EOT_BIL_UC_AMT, 0) END AS BILLING3	/* 3개월전 청구금액 */
             , CASE WHEN A.SELL_TP_DTL_CD IN ('21', '23') THEN NVL(G3.EOT_UC_AMT, 0) ELSE NVL(G3.EOT_BIL_UC_AMT, 0) END AS BILLING2	/* 2개월전 청구금액 */
             , CASE WHEN A.SELL_TP_DTL_CD IN ('21', '23') THEN NVL(G2.EOT_UC_AMT, 0) ELSE NVL(G2.EOT_BIL_UC_AMT, 0) END AS BILLING1	/* 1개월전 청구금액 */
             , CASE WHEN A.SELL_TP_DTL_CD IN ('21', '23') THEN NVL(G2.EOT_UC_AMT + G3.EOT_UC_AMT + G4.EOT_UC_AMT, 0) ELSE NVL(G2.EOT_BIL_UC_AMT + G3.EOT_BIL_UC_AMT + G4.EOT_BIL_UC_AMT, 0) END AS BILLING_SUM /* 청구합계 : 청구 합계금액 노출 */
             /* 입금현황(기준년월에 따라 그리드 월데이터가 변경됨) */
             , NVL(G3.THM_ATAM_DP_AMT, 0) AS DEPOSIT3	/* 3개월전 입금액 */
             , NVL(G2.THM_ATAM_DP_AMT, 0) AS DEPOSIT2	/* 2개월전 입금액 */
             , NVL(G1.THM_ATAM_DP_AMT, 0) AS DEPOSIT1	/* 1개월전 입금액 */
             , NVL(G1.THM_ATAM_DP_AMT + G2.THM_ATAM_DP_AMT + G3.THM_ATAM_DP_AMT, 0) AS DEPOSIT_SUM/* 입금합계 : 입금 합계금액 노출 */
             /* 연체현황(기준년월에 따라 그리드 월데이터가 변경됨) */
             , NVL(D3.EOT_DLQ_AMT + D3.BTD_DLQ_ADD_AMT - D3.THM_DLQ_ADD_DP_SUM_AMT - D3.THM_CTR_DLQ_ADD_AMT + D3.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F3.EOT_BOR_AMT,0) 	AS DELINQUENT3/* 3개월전 연체금액 */
             , NVL(D2.EOT_DLQ_AMT + D2.BTD_DLQ_ADD_AMT - D2.THM_DLQ_ADD_DP_SUM_AMT - D2.THM_CTR_DLQ_ADD_AMT + D2.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F2.EOT_BOR_AMT,0) 	AS DELINQUENT2/* 2개월전 연체금액 */
             , NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) 			AS DELINQUENT1/* 1개월전 연체금액 */
             , NVL(G.THM_ATAM_DP_AMT, 0) AS THIS_MONTH /* 당월입금 : 당월입금금액 노출 */
             , CASE WHEN (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) > NVL(G.THM_ATAM_DP_AMT, 0) THEN 'Y' ELSE 'N' END AS DELINQUENT_YN /* 연체여부 : Y/N 중 해당데이터 노출 */
          FROM TB_SSCT_CNTR_DTL A 			/*계약상세*/
         INNER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G	/*WELLS매출월마감내역*/
            ON G.CNTR_NO = A.CNTR_NO
           AND G.CNTR_SN = A.CNTR_SN
           AND G.SL_CL_YM = #{baseYm}
           AND SUBSTR(G.IST_DTM, 1, 6) BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm},'YYYYMM'),-4),'YYYYMM') AND TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm},'YYYYMM'),-2),'YYYYMM')  /*설치일자 4개월전~2개월전*/
           AND G.DTA_DL_YN = 'N'
         INNER JOIN  TB_SSCT_CNTR_BAS B		/*계약기본*/
            ON B.CNTR_NO = G.CNTR_NO
           AND B.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_SSCT_CNTR_CST_REL CST	/*계약고객관계*/
            ON CST.DTL_CNTR_NO = G.CNTR_NO
           AND CST.DTL_CNTR_SN = G.CNTR_SN
           AND CST.DTA_DL_YN = 'N'
          /*--설치시점 판매자정보--*/
          LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C	/*월파트너내역*/
            ON C.PRTNR_NO = B.SELL_PRTNR_NO
           AND C.BASE_YM = SUBSTR(G.IST_DTM, 1, 6)
           AND C.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E		/*월조직내역*/
            ON E.BASE_YM = SUBSTR(G.IST_DTM, 1, 6)
           AND E.OG_TP_CD =   C.OG_TP_CD
           AND E.OG_ID = C.OG_ID
           AND E.DTA_DL_YN = 'N'
          /*--현시점 판매자정보--*/
          LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C2	/*월파트너내역*/
            ON C2.PRTNR_NO = B.SELL_PRTNR_NO
           AND C2.BASE_YM = TO_CHAR(SYSDATE, 'YYYYMM')
           AND C2.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E2		/*월조직내역*/
            ON E2.BASE_YM = TO_CHAR(SYSDATE, 'YYYYMM')
           AND E2.OG_TP_CD =   C2.OG_TP_CD
           AND E2.OG_ID = C2.OG_ID
           AND E2.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G1	/*WELLS매출월마감내역-1개월전*/
            ON G1.CNTR_NO = G.CNTR_NO
           AND G1.CNTR_SN = G.CNTR_SN
           AND G1.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -1), 'YYYYMM')
           AND G1.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2	/*WELLS매출월마감내역-2개월전*/
            ON G2.CNTR_NO = G.CNTR_NO
           AND G2.CNTR_SN = G.CNTR_SN
           AND G2.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -2), 'YYYYMM')
           AND G2.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역-3개월전*/
            ON G3.CNTR_NO = G.CNTR_NO
           AND G3.CNTR_SN = G.CNTR_SN
           AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -3), 'YYYYMM')
           AND G3.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G4	/*WELLS매출월마감내역-4개월전*/
            ON G4.CNTR_NO = G.CNTR_NO
           AND G4.CNTR_SN = G.CNTR_SN
           AND G4.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -4), 'YYYYMM')
           AND G4.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_DLQ_BAS D	/*연체기본-1개월전*/
            ON D.CNTR_NO = G.CNTR_NO
           AND D.CNTR_SN = G.CNTR_SN
           AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -1), 'YYYYMM')
           AND D.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2	/*연체기본-2개월전*/
            ON D2.CNTR_NO = G.CNTR_NO
           AND D2.CNTR_SN = G.CNTR_SN
           AND D2.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -2), 'YYYYMM')
           AND D2.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_DLQ_BAS D3	/*연체기본-3개월전*/
            ON D3.CNTR_NO = G.CNTR_NO
           AND D3.CNTR_SN = G.CNTR_SN
           AND D3.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -3), 'YYYYMM')
           AND D3.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F		/*위약금액기본-1개월전*/
            ON F.CNTR_NO = G.CNTR_NO
           AND F.CNTR_SN = G.CNTR_SN
           AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -1), 'YYYYMM')
           AND F.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F2	/*위약금액기본-2개월전*/
            ON F2.CNTR_NO = G.CNTR_NO
           AND F2.CNTR_SN = G.CNTR_SN
           AND F2.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -2), 'YYYYMM')
           AND F2.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F3	/*위약금액기본-3개월전*/
            ON F3.CNTR_NO = G.CNTR_NO
           AND F3.CNTR_SN = G.CNTR_SN
           AND F3.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -3), 'YYYYMM')
           AND F3.DTA_DL_YN = 'N'
         WHERE A.SELL_TP_CD = '2'
           AND A.DTA_DL_YN = 'N'
           AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd} /*총괄단*/
           <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
           AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd} /*지역단*/
           </if>
           <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
           AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd} /*지점*/
          </if>
    </select>
</mapper>
