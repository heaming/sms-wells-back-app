<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.closing.payment.mapper.WdcaDepositDelinquentDetailMapper">
    <select id="selectDepositDelinquentDetails" resultType="com.kyowon.sms.wells.web.closing.payment.dto.WdcaDepositDelinquentDetailDto$SearchRes">
        /* dlqDv(연체구분) ALL:전체, 1:정상, 2:연체 */
        /* inqrDv 1:총괄단, 2:지역단, 3:지점 */
        <if test='@MybatisUtils@equals(dlqDv, "ALL")'>
            <if test='@MybatisUtils@equals(inqrDv, "1")'>
                --1) 총괄단 전체
                SELECT T.DGR1_LEVL_OG_CD AS OG_CD
                     , T.DGR1_LEVL_OG_NM AS OG_NM
                     , '' AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , '' AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , '' AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , '' AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , '' AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , '' AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR1_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR1_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N       --당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , SUM(UCAM_TAM - DLQ_AMT) AS NOM_UC_AMT
                     , SUM(NOM_ACC_N) AS NOM_ACC_N
                     , SUM(UCAM_TAM - DLQ_DP_AMT) AS NOM_DP_AMT
                     , FLOOR(CASE WHEN NVL(SUM(UCAM_TAM - DLQ_AMT), 0) = 0 THEN 0 ELSE SUM(DP - DLQ_DP_AMT) / SUM(UCAM_TAM - DLQ_AMT) END * 1000) / 10 AS NOM_DP_RT
                     , SUM(DLQ_AMT) AS DLQ_AMT
                     , SUM(CASE WHEN DLQ_AMT > 0 THEN 1 ELSE 0 END) AS DLQ_ACC_N	/*연체계정수*/
                     , SUM(DLQ_DP_AMT) AS DLQ_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR((SUM(DLQ_AMT) - SUM(DLQ_DP_AMT)) / SUM(UCAM_TAM) * 1000) / 10 END AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                            SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                          WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                          ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                   , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                          WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                          ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                   , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '1339683'
                                   WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_DG_PRTNR_NO
                                          ELSE '' END AS DGR1_LEVL_DG_PRTNR_NO
                                   , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀'
                                          WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_DG_PRTNR_NM
                                          ELSE '' END AS DGR1_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N	/*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                   , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR1_LEVL_DG_PRTNR_NO, T.DGR1_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD
            </if>
            <if test="@MybatisUtils@equals(inqrDv, '2')">
                --1) 지역단 전체
                SELECT T.DGR2_LEVL_OG_CD AS OG_CD
                     , T.DGR2_LEVL_OG_NM AS OG_NM
                     , T.DGR1_LEVL_OG_CD AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , T.DGR1_LEVL_OG_NM AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , T.DGR2_LEVL_OG_CD AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , T.DGR2_LEVL_OG_NM AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , '' AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , '' AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR2_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR2_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , SUM(UCAM_TAM - DLQ_AMT) AS NOM_UC_AMT
                     , SUM(NOM_ACC_N) AS NOM_ACC_N
                     , SUM(UCAM_TAM - DLQ_DP_AMT) AS NOM_DP_AMT
                     , FLOOR(CASE WHEN NVL(SUM(UCAM_TAM - DLQ_AMT), 0) = 0 THEN 0 ELSE SUM(DP - DLQ_DP_AMT) / SUM(UCAM_TAM - DLQ_AMT) END * 1000) / 10 AS NOM_DP_RT
                     , SUM(DLQ_AMT) AS DLQ_AMT
                     , SUM(CASE WHEN DLQ_AMT > 0 THEN 1 ELSE 0 END) AS DLQ_ACC_N	/*연체계정수*/
                     , SUM(DLQ_DP_AMT) AS DLQ_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR((SUM(DLQ_AMT) - SUM(DLQ_DP_AMT)) / SUM(UCAM_TAM) * 1000) / 10 END AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_DG_PRTNR_NO
                                        WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR2_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z'  AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_DG_PRTNR_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR2_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR2_LEVL_OG_CD, T.DGR2_LEVL_OG_NM, T.DGR2_LEVL_DG_PRTNR_NO, T.DGR2_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD, T.DGR2_LEVL_OG_CD
            </if>
            <if test="@MybatisUtils@equals(inqrDv, '3')">
                --1) 지점 전체
                SELECT T.DGR3_LEVL_OG_CD AS OG_CD
                     , T.DGR3_LEVL_OG_NM AS OG_NM
                     , T.DGR1_LEVL_OG_CD AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , T.DGR1_LEVL_OG_NM AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , T.DGR2_LEVL_OG_CD AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , T.DGR2_LEVL_OG_NM AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , T.DGR3_LEVL_OG_CD AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , T.DGR3_LEVL_OG_NM AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR3_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR3_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , SUM(UCAM_TAM - DLQ_AMT) AS NOM_UC_AMT
                     , SUM(NOM_ACC_N) AS NOM_ACC_N
                     , SUM(UCAM_TAM - DLQ_DP_AMT) AS NOM_DP_AMT
                     , FLOOR(CASE WHEN NVL(SUM(UCAM_TAM - DLQ_AMT), 0) = 0 THEN 0 ELSE SUM(DP - DLQ_DP_AMT) / SUM(UCAM_TAM - DLQ_AMT) END * 1000) / 10 AS NOM_DP_RT
                     , SUM(DLQ_AMT) AS DLQ_AMT
                     , SUM(CASE WHEN DLQ_AMT > 0 THEN 1 ELSE 0 END) AS DLQ_ACC_N	/*연체계정수*/
                     , SUM(DLQ_DP_AMT) AS DLQ_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR((SUM(DLQ_AMT) - SUM(DLQ_DP_AMT)) / SUM(UCAM_TAM) * 1000) / 10 END AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR3_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR3_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_DG_PRTNR_NO
                                        WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR3_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z'  AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_DG_PRTNR_NM
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR3_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                   , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR2_LEVL_OG_CD, T.DGR2_LEVL_OG_NM, T.DGR3_LEVL_OG_CD, T.DGR3_LEVL_OG_NM, T.DGR3_LEVL_DG_PRTNR_NO, T.DGR3_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD, T.DGR2_LEVL_OG_CD, T.DGR3_LEVL_OG_CD
            </if>
        </if>
        <if test='@MybatisUtils@equals(dlqDv, "1")'>
             <if test='@MybatisUtils@equals(inqrDv, "1")'>
                 --3) 총괄단 정상
                 SELECT T.DGR1_LEVL_OG_CD AS OG_CD
                     , T.DGR1_LEVL_OG_NM AS OG_NM
                     , '' AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , '' AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , '' AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , '' AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , '' AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , '' AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR1_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR1_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , SUM(UCAM_TAM - DLQ_AMT) AS NOM_UC_AMT
                     , SUM(NOM_ACC_N) AS NOM_ACC_N
                     , SUM(UCAM_TAM - DLQ_DP_AMT) AS NOM_DP_AMT
                     , FLOOR(CASE WHEN NVL(SUM(UCAM_TAM - DLQ_AMT), 0) = 0 THEN 0 ELSE SUM(DP - DLQ_DP_AMT) / SUM(UCAM_TAM - DLQ_AMT) END * 1000) / 10 AS NOM_DP_RT
                     , 0 AS DLQ_AMT
                     , 0 AS DLQ_ACC_N
                     , 0 AS DLQ_DP_AMT
                     , 0 AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '1339683'
                                        WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR1_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR1_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR1_LEVL_DG_PRTNR_NO, T.DGR1_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD
             </if>
             <if test='@MybatisUtils@equals(inqrDv, "2")'>
                 --3) 지역단 정상
                 SELECT T.DGR2_LEVL_OG_CD AS OG_CD
                     , T.DGR2_LEVL_OG_NM AS OG_NM
                     , T.DGR1_LEVL_OG_CD AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , T.DGR1_LEVL_OG_NM AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , T.DGR2_LEVL_OG_CD AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , T.DGR2_LEVL_OG_NM AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , '' AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , '' AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR2_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR2_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , SUM(UCAM_TAM - DLQ_AMT) AS NOM_UC_AMT
                     , SUM(NOM_ACC_N) AS NOM_ACC_N
                     , SUM(UCAM_TAM - DLQ_DP_AMT) AS NOM_DP_AMT
                     , FLOOR(CASE WHEN NVL(SUM(UCAM_TAM - DLQ_AMT), 0) = 0 THEN 0 ELSE SUM(DP - DLQ_DP_AMT) / SUM(UCAM_TAM - DLQ_AMT) END * 1000) / 10 AS NOM_DP_RT
                     , 0 AS DLQ_AMT
                     , 0 AS DLQ_ACC_N
                     , 0 AS DLQ_DP_AMT
                     , 0 AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_DG_PRTNR_NO
                                        WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR2_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z'  AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_DG_PRTNR_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR2_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR2_LEVL_OG_CD, T.DGR2_LEVL_OG_NM, T.DGR2_LEVL_DG_PRTNR_NO, T.DGR2_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD, T.DGR2_LEVL_OG_CD
             </if>
             <if test='@MybatisUtils@equals(inqrDv, "3")'>
                 --3) 지점 정상
                 SELECT T.DGR3_LEVL_OG_CD AS OG_CD
                     , T.DGR3_LEVL_OG_NM AS OG_NM
                     , T.DGR1_LEVL_OG_CD AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , T.DGR1_LEVL_OG_NM AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , T.DGR2_LEVL_OG_CD AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , T.DGR2_LEVL_OG_NM AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , T.DGR3_LEVL_OG_CD AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , T.DGR3_LEVL_OG_NM AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR3_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR3_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , SUM(UCAM_TAM - DLQ_AMT) AS NOM_UC_AMT
                     , SUM(NOM_ACC_N) AS NOM_ACC_N
                     , SUM(UCAM_TAM - DLQ_DP_AMT) AS NOM_DP_AMT
                     , FLOOR(CASE WHEN NVL(SUM(UCAM_TAM - DLQ_AMT), 0) = 0 THEN 0 ELSE SUM(DP - DLQ_DP_AMT) / SUM(UCAM_TAM - DLQ_AMT) END * 1000) / 10 AS NOM_DP_RT
                     , 0 AS DLQ_AMT
                     , 0 AS DLQ_ACC_N
                     , 0 AS DLQ_DP_AMT
                     , 0 AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_CD
                                            ELSE '' END AS DGR2_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_NM
                                            ELSE '' END AS DGR2_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_OG_CD
                                            ELSE '' END AS DGR3_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_OG_NM
                                            ELSE '' END AS DGR3_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_DG_PRTNR_NO
                                        WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR3_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z'  AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_DG_PRTNR_NM
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR3_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR2_LEVL_OG_CD, T.DGR2_LEVL_OG_NM, T.DGR3_LEVL_OG_CD, T.DGR3_LEVL_OG_NM, T.DGR3_LEVL_DG_PRTNR_NO, T.DGR3_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD, T.DGR2_LEVL_OG_CD, T.DGR3_LEVL_OG_CD
             </if>
        </if>
        <if test='@MybatisUtils@equals(dlqDv, "2")'>
             <if test='@MybatisUtils@equals(inqrDv, "1")'>
                 --2) 총괄단 연체
                 SELECT T.DGR1_LEVL_OG_CD AS OG_CD
                     , T.DGR1_LEVL_OG_NM AS OG_NM
                     , '' AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , '' AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , '' AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , '' AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , '' AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , '' AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR1_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR1_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , 0 AS NOM_UC_AMT
                     , 0 AS NOM_ACC_N
                     , 0 AS NOM_DP_AMT
                     , 0 AS NOM_DP_RT
                     , SUM(DLQ_AMT) AS DLQ_AMT
                     , SUM(CASE WHEN DLQ_AMT > 0 THEN 1 ELSE 0 END) AS DLQ_ACC_N	/*연체계정수*/
                     , SUM(DLQ_DP_AMT) AS DLQ_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR((SUM(DLQ_AMT) - SUM(DLQ_DP_AMT)) / SUM(UCAM_TAM) * 1000) / 10 END AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '1339683'
                                        WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR1_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR1_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(dlqMcnt) and dlqMcnt.size() > 0">
                                   AND
                                       <foreach collection="dlqMcnt" item="dlqMcnt" open="(" close=")" separator="OR">
                                           <if test='!@MybatisUtils@equals(dlqMcnt, "7")'>
                                           /*0~6까지는 아래 쿼리*/
                                           NVL(D.DLQ_MCN, 0) = #{dlqMcnt}
                                           </if>
                                           <if test='@MybatisUtils@equals(dlqMcnt, "7")'>
                                           /*7이면 아래 쿼리로 변경*/
                                           NVL(D.DLQ_MCN, 0) > #{dlqMcnt}
                                           </if>
                                       </foreach>
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR1_LEVL_DG_PRTNR_NO, T.DGR1_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD
             </if>
             <if test='@MybatisUtils@equals(inqrDv, "2")'>
                 --2) 지역단 연체
                 SELECT T.DGR2_LEVL_OG_CD AS OG_CD
                     , T.DGR2_LEVL_OG_NM AS OG_NM
                     , T.DGR1_LEVL_OG_CD AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , T.DGR1_LEVL_OG_NM AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , T.DGR2_LEVL_OG_CD AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , T.DGR2_LEVL_OG_NM AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , '' AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , '' AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR2_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR2_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , 0 AS NOM_UC_AMT
                     , 0 AS NOM_ACC_N
                     , 0 AS NOM_DP_AMT
                     , 0 AS NOM_DP_RT
                     , SUM(DLQ_AMT) AS DLQ_AMT
                     , SUM(CASE WHEN DLQ_AMT > 0 THEN 1 ELSE 0 END) AS DLQ_ACC_N	/*연체계정수*/
                     , SUM(DLQ_DP_AMT) AS DLQ_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR((SUM(DLQ_AMT) - SUM(DLQ_DP_AMT)) / SUM(UCAM_TAM) * 1000) / 10 END AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR2_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_DG_PRTNR_NO
                                        WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR2_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z'  AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_DG_PRTNR_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR2_LEVL_DG_PRTNR_NM
                                   , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(dlqMcnt) and dlqMcnt.size() > 0">
                                   AND
                                       <foreach collection="dlqMcnt" item="dlqMcnt" open="(" close=")" separator="OR">
                                           <if test='!@MybatisUtils@equals(dlqMcnt, "7")'>
                                           /*0~6까지는 아래 쿼리*/
                                           NVL(D.DLQ_MCN, 0) = #{dlqMcnt}
                                           </if>
                                           <if test='@MybatisUtils@equals(dlqMcnt, "7")'>
                                           /*7이면 아래 쿼리로 변경*/
                                           NVL(D.DLQ_MCN, 0) > #{dlqMcnt}
                                           </if>
                                       </foreach>
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR2_LEVL_OG_CD, T.DGR2_LEVL_OG_NM, T.DGR2_LEVL_DG_PRTNR_NO, T.DGR2_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD, T.DGR2_LEVL_OG_CD
             </if>
             <if test='@MybatisUtils@equals(inqrDv, "3")'>
                 --2) 지점 연체
                 SELECT T.DGR3_LEVL_OG_CD AS OG_CD
                     , T.DGR3_LEVL_OG_NM AS OG_NM
                     , T.DGR1_LEVL_OG_CD AS DGR1_LEVL_OG_CD/*1차레벨조직코드*/
                     , T.DGR1_LEVL_OG_NM AS DGR1_LEVL_OG_NM/*1차레벨조직명*/
                     , T.DGR2_LEVL_OG_CD AS DGR2_LEVL_OG_CD/*2차레벨조직코드*/
                     , T.DGR2_LEVL_OG_NM AS DGR2_LEVL_OG_NM/*2차레벨조직명*/
                     , T.DGR3_LEVL_OG_CD AS DGR3_LEVL_OG_CD/*3차레벨조직코드*/
                     , T.DGR3_LEVL_OG_NM AS DGR3_LEVL_OG_NM/*3차레벨조직명*/
                     , T.DGR3_LEVL_DG_PRTNR_NO AS PRTNR_NO
                     , T.DGR3_LEVL_DG_PRTNR_NM AS PRTNR_KNM
                     , T.SELL_TP_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', T.SELL_TP_CD) AS SELL_TP_NM
                     , T.SELL_TP_DTL_CD
                     , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', T.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM
                     , SUM(TOT_ACC_N) AS TOT_ACC_N
                     , SUM(UCAM_TAM) AS UCAM_TAM
                     , SUM(THM_NW_ACC_N) AS THM_NW_ACC_N--당월신규_계정수
                     , SUM(CASE WHEN T.THM_NW_ACC_N = 1 THEN T.THM_NW_DP_AMT ELSE 0 END) AS THM_NW_DP_AMT /*당월신규입금금액*/
                     , 0 AS NOM_UC_AMT
                     , 0 AS NOM_ACC_N
                     , 0 AS NOM_DP_AMT
                     , 0 AS NOM_DP_RT
                     , SUM(DLQ_AMT) AS DLQ_AMT
                     , SUM(CASE WHEN DLQ_AMT > 0 THEN 1 ELSE 0 END) AS DLQ_ACC_N	/*연체계정수*/
                     , SUM(DLQ_DP_AMT) AS DLQ_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR((SUM(DLQ_AMT) - SUM(DLQ_DP_AMT)) / SUM(UCAM_TAM) * 1000) / 10 END AS UC_CPR_DLQ_RT
                     , SUM(DP) AS TOT_DP_AMT
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DP_RT
                     , SUM(T.SL_AGG_AMT) AS BIL_AGG
                     , SUM(DP) AS DP_AGG
                     , CASE WHEN NVL(SUM(UCAM_TAM), 0) = 0 THEN 0 ELSE FLOOR(SUM(UCAM_TAM - DP) / SUM(UCAM_TAM) * 1000) / 10 END AS DLQ_RT_SUM
                  FROM (
                                SELECT CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN 'Z000000'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_CD
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' THEN '채널팀 총괄단'
                                            WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 1) = '0' THEN E.DGR1_LEVL_OG_NM
                                            ELSE '기타(본사)' END AS DGR1_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_CD
                                            ELSE '' END AS DGR2_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR1_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR2_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR2_LEVL_OG_CD, 4, 4) = '0000' THEN E.DGR2_LEVL_OG_NM
                                            ELSE '' END AS DGR2_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_OG_CD
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_OG_CD
                                            ELSE '' END AS DGR3_LEVL_OG_CD
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_OG_NM
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_OG_NM
                                            ELSE '' END AS DGR3_LEVL_OG_NM
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z' AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_DG_PRTNR_NO
                                        WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_DG_PRTNR_NO
                                            ELSE '' END AS DGR3_LEVL_DG_PRTNR_NO
                                     , CASE WHEN LENGTH(E.DGR1_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR1_LEVL_OG_CD, 1, 1) = 'Z'  AND SUBSTR(E.DGR1_LEVL_OG_CD, 2, 6) <![CDATA[<>]]> '000000' THEN E.DGR2_LEVL_DG_PRTNR_NM
                                            WHEN LENGTH(E.DGR3_LEVL_OG_CD) = 7 AND SUBSTR(E.DGR3_LEVL_OG_CD, 7, 1) = '0' THEN E.DGR3_LEVL_DG_PRTNR_NM
                                            ELSE '' END AS DGR3_LEVL_DG_PRTNR_NM
                                     , A.SELL_TP_CD
                                   , A.SELL_TP_DTL_CD
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 1 ELSE 0 END)
                                          ELSE (CASE WHEN G2.CAN_DT IS NULL THEN 1 ELSE 0 END) END AS TOT_ACC_N	/*총계정수*/
                                   , CASE WHEN SUBSTR(B.CNTR_RCP_FSH_DTM, 1, 6) = #{perfYm} OR SUBSTR(A.CNTR_PD_STRTDT, 1, 6) = #{perfYm} THEN 1 ELSE 0 END AS THM_NW_ACC_N /*당월계정수*/
                                   , CASE WHEN A.SELL_TP_CD = '6' OR A.SELL_TP_DTL_CD IN ('22', '24', '25', '26') THEN NVL(G3.THM_BIL_DP_AMT - G3.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G3.THM_ATAM_DP_AMT, 0)
                                          ELSE NVL(G3.THM_ISTM_TOT_DP_AMT, 0)
                                          END AS THM_NW_DP_AMT  /*당월신규입금금액*/
                                   , CASE WHEN A.SELL_TP_CD = '2' THEN NVL(G.EOT_BIL_UC_AMT,0) + NVL(D.EOT_DLQ_ADD_AMT,0)
                                          WHEN A.SELL_TP_CD = '6' THEN NVL(G2.EOT_BIL_UC_AMT,0)
                                          WHEN A.SELL_TP_CD = '3' THEN (CASE WHEN A.SELL_TP_DTL_CD = '33' THEN NVL(G.EOT_UC_AMT,0) ELSE NVL(G.EOT_BIL_UC_AMT,0) + NVL(G2.THM_SL_SUM_AMT,0) END)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE 0 END AS UCAM_TAM	/*미수*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN NVL(G.EOT_UC_AMT,0)
                                          ELSE NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)
                                          END AS DLQ_AMT	/*연체금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('2', '6') THEN NVL(G2.THM_BIL_DP_AMT - G2.SV_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '3' THEN NVL(G2.THM_ATAM_DP_AMT, 0)
                                          WHEN A.SELL_TP_CD = '1' THEN NVL(G2.THM_INTAM_DP_AMT, 0)
                                          ELSE 0 END AS DP	/*입금*/
                                   , CASE WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN NVL(D.EOT_DLQ_AMT,0) = 0 THEN 0 ELSE LEAST(NVL(D.EOT_DLQ_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          ELSE (CASE WHEN NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 0
                                                        ELSE LEAST(NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0), GREATEST(NVL(D2.THM_DLQ_DP_SUM_AMT, 0), 0)) END)
                                          END AS DLQ_DP_AMT	/*연체입금금액*/
                                   , CASE WHEN A.SELL_TP_CD IN ('3', '6') THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          WHEN A.SELL_TP_CD = '1' THEN (CASE WHEN G2.CAN_DT IS NULL AND NVL(D.EOT_DLQ_AMT,0) = 0 THEN 1 ELSE 0 END)
                                          ELSE (  (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL AND (NVL(D.EOT_DLQ_AMT + D.BTD_DLQ_ADD_AMT - D.THM_DLQ_ADD_DP_SUM_AMT - D.THM_CTR_DLQ_ADD_AMT + D.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(F.EOT_BOR_AMT,0)) = 0 THEN 1 ELSE 0 END)
                                                 - (CASE WHEN A.CNTR_PTRM > G.RENTAL_TN AND G.CAN_DT IS NULL AND G.REQD_DTM IS NULL AND G.SL_RCOG_DT IS NOT NULL THEN 0 ELSE 1 END))
                                          END AS NOM_ACC_N	/*정상계정수*/
                                , NVL(G.SL_AGG_AMT + G.PVDA_AGG_AMT - G.EOT_PCAM_BLAM - G.EOT_PCAM_INT_BLAM, 0) AS SL_AGG_AMT
                             FROM TB_SSCT_CNTR_DTL A /*계약상세*/
                                , TB_CBCL_WELLS_SL_MM_CL_IZ G/*WELLS매출월마감내역*/
                            INNER JOIN  TB_SSCT_CNTR_BAS B/*계약기본*/
                                  ON B.CNTR_NO = G.CNTR_NO
                                LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ C/*월파트너내역*/
                                  ON C.PRTNR_NO = B.SELL_PRTNR_NO
                                 AND C.PSTN_DV_CD IN ('7', '10', '15')
                                 AND C.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_OGBS_MM_OG_IZ E/*월조직내역*/
                                  ON E.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                 AND E.OG_TP_CD = C.OG_TP_CD
                                 AND E.OG_ID = C.OG_ID
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G2/*WELLS매출월마감내역*/
                                  ON G2.CNTR_NO = G.CNTR_NO
                                 AND G2.CNTR_SN = G.CNTR_SN
                                 AND G2.SL_CL_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ G3	/*WELLS매출월마감내역 - 당월발생입금기준*/
                                  ON G3.CNTR_NO = G.CNTR_NO
                                 AND G3.CNTR_SN = G.CNTR_SN
                                 AND G3.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), 1), 'YYYYMM')
                                 AND G3.DTA_DL_YN = 'N'
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D/*연체기본-전월연체발생*/
                                  ON D.CNTR_NO = G.CNTR_NO
                                 AND D.CNTR_SN = G.CNTR_SN
                                 AND D.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                LEFT OUTER JOIN TB_CBCL_DLQ_BAS D2/*연체기본-당월입금*/
                                  ON D2.CNTR_NO = D.CNTR_NO
                                 AND D2.CNTR_SN = D.CNTR_SN
                                 AND D2.PERF_YM = #{perfYm}
                                LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS F/*위약금액기본*/
                                  ON F.CNTR_NO = G.CNTR_NO
                                 AND F.CNTR_SN = G.CNTR_SN
                                 AND F.PERF_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                WHERE A.CNTR_NO = G.CNTR_NO
                                  AND A.CNTR_SN = G.CNTR_SN
                                  AND G.SL_CL_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}||'01', 'YYYYMMDD'), -1), 'YYYYMM')
                                   <if test="@MybatisUtils@isNotEmpty(cntrNo)">
                                   AND A.CNTR_NO = #{cntrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrSn)">
                                   AND A.CNTR_SN = #{cntrSn}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
                                   /*화면-판매유형 선택 시(전체 제외)-시작*/
                                   AND A.SELL_TP_CD = #{sellTpCd}
                                   /*화면-판매유형 선택 시(전체 제외)-종료*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
                                   AND A.SELL_TP_DTL_CD = #{sellTpDtlCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
                                   AND B.COPN_DV_CD = #{copnDvCd} /*개인법인구분*/
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
                                   AND B.SELL_OG_TP_CD = #{ogTp}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
                                   AND E.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
                                   AND E.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
                                   </if>
                                   <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
                                   AND E.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                                   AND C.PRTNR_NO = #{prtnrNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
                                   AND B.CNTR_CST_NO = #{cntrCstNo}
                                   </if>
                                   <if test="@MybatisUtils@isNotEmpty(dlqMcnt) and dlqMcnt.size() > 0">
                                   AND
                                       <foreach collection="dlqMcnt" item="dlqMcnt" open="(" close=")" separator="OR">
                                           <if test='!@MybatisUtils@equals(dlqMcnt, "7")'>
                                           /*0~6까지는 아래 쿼리*/
                                           NVL(D.DLQ_MCN, 0) = #{dlqMcnt}
                                           </if>
                                           <if test='@MybatisUtils@equals(dlqMcnt, "7")'>
                                           /*7이면 아래 쿼리로 변경*/
                                           NVL(D.DLQ_MCN, 0) > #{dlqMcnt}
                                           </if>
                                       </foreach>
                                   </if>
                    ) T
                    WHERE 1=1
                    GROUP BY T.DGR1_LEVL_OG_CD, T.DGR1_LEVL_OG_NM, T.DGR2_LEVL_OG_CD, T.DGR2_LEVL_OG_NM, T.DGR3_LEVL_OG_CD, T.DGR3_LEVL_OG_NM, T.DGR3_LEVL_DG_PRTNR_NO, T.DGR3_LEVL_DG_PRTNR_NM, T.SELL_TP_CD, T.SELL_TP_DTL_CD
                    ORDER BY T.DGR1_LEVL_OG_CD, T.DGR2_LEVL_OG_CD, T.DGR3_LEVL_OG_CD
             </if>
        </if>
    </select>

    <select id="selectDepositDelinquentContractPages" resultType="com.kyowon.sms.wells.web.closing.payment.dto.WdcaDepositDelinquentDetailDto$SearchContractRes">
        SELECT A1.SELL_TP_CD                                                         AS SELL_TP_CD       /*판매유형코드*/
             , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_CD', A1.SELL_TP_CD)         AS SELL_TP_NM     /*판매유형코드명*/
             , A1.SELL_TP_DTL_CD                                                     AS SELL_TP_DTL_CD   /*판매유형상세코드*/
             , F_CMZ_CD_NM(#{session.tenantId}, 'SELL_TP_DTL_CD', A1.SELL_TP_DTL_CD) AS SELL_TP_DTL_NM /*판매유형상세코드명*/
             , A1.CNTR_NO || '-' || A1.CNTR_SN                                       AS CNTR_DTL_NO       /*계약번호+계약일련번호*/
             , A2.CNTR_CST_NO                                                        AS CNTR_CST_NO       /*계약고객번호*/
             , A3.CST_KNM                                                            AS CST_KNM             /*고객한글명*/
             , A1.CNTR_PD_STRTDT                                                     AS SL_CL_DT           /*매출마감일자*/
             , A1.BASE_PD_CD                                                         AS BASE_PD_CD           /*기준상품코드*/
             , A4.PD_NM                                                              AS PD_NM             /*상품명*/
             , NVL(A9.DLQ_MCN, 0)                                                    AS DLQ_MCN           /*연체개월수*/
             , NVL(A9.EOT_DLQ_AMT + A9.BTD_DLQ_ADD_AMT - A9.THM_DLQ_ADD_DP_SUM_AMT - A9.THM_CTR_DLQ_ADD_AMT + A9.THM_DLQ_ADD_RFND_SUM_AMT, 0) + NVL(A12.EOT_BOR_AMT,0)  EOT_DLQ_AMT           /*기말연체금액*/
             , A6.BND_ALRPY_AGG_AMT                                                  AS BILLING_AMOUNT         /*매출누계금액*/
             , A6.RVE_AMT                                                            AS DEPOSIT_AMOUNT      /*입금금액*/
             , A6.UC_AMT                                                             AS UNCOLLECTED_AMOUNT  /*미수금액*/
             , F_CMZ_CD_NM(#{session.tenantId}, 'DP_TP_CD', A5.DP_TP_CD)             AS DP_TP_CD           /*입금유형코드*/
             , A5.MPY_BSDT                                                           AS MPY_BSDT         /*납부기준일자*/
             , ''                                                                    AS APPROVE_CODE           /*입/출금에 문의*/
             , ''                                                                    AS NON_PAYMENT_REASON         /*입/출금에 문의*/
             , A6.BND_ALRPY_AGG_AMT                                                  AS SL_AGG_AMT           /*매출누계금액*/
             , A6.DP_ACU_AMT                                                         AS DEPOSIT_AGGREGATE    /*입금누계액*/
             , A7.PRTNR_KNM                                                          AS PRTNR_KNM           /*파트너한글명*/
             , A7.PRTNR_NO                                                           AS PRTNR_NO         /*파트너번호*/
             , A7.FST_CNTR_DT                                                        AS FST_CNTR_DT   /*최초계약일자*/
             , F_CMZ_CD_NM(#{session.tenantId}, 'OJ_PSTN_CD', A7.PSTN_DV_CD)         AS PSTN_DV_CD         /*직급구분코드*/
             , F_CMZ_CD_NM(#{session.tenantId}, 'SAP_RSB_DV_CD', A7.RSB_DV_CD)       AS RSB_DV_CD         /*직책구분코드*/
             , A8.DGR3_LEVL_OG_CD                                                    AS DGR3_LEVL_OG_CD               /*3차레벨조직코드*/
             , A8.DGR3_LEVL_DG_PRTNR_NM                                              AS DGR3_LEVL_DG_PRTNR_NM           /*3차레벨대표파트너명*/
             , A8.BLD_NM                                                             AS BLD_NM             /*빌딩명*/
             , A8.DGR1_LEVL_OG_CD                                                    AS DGR1_LEVL_OG_CD             /*1차레벨조직코드*/
             , A8.DGR2_LEVL_OG_CD                                                    AS DGR2_LEVL_OG_CD             /*2차레벨조직코드*/
             , CASE /*구매자가 직원인지를 판단-당시 구매자의 재직여부를 출력*/
                    WHEN A8.DGR1_LEVL_DG_PRTNR_NO = A3.PRTNR_NO AND A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NULL THEN '내부(총괄)-재직'
                    WHEN A8.DGR1_LEVL_DG_PRTNR_NO = A3.PRTNR_NO AND A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NOT NULL THEN '내부(총괄)-퇴사'
                    WHEN A8.DGR2_LEVL_DG_PRTNR_NO = A3.PRTNR_NO AND A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NULL THEN '내부(지역)-재직'
                    WHEN A8.DGR2_LEVL_DG_PRTNR_NO = A3.PRTNR_NO AND A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NOT NULL THEN '내부(지역)-퇴사'
                    WHEN A8.DGR3_LEVL_DG_PRTNR_NO = A3.PRTNR_NO AND A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NULL THEN '내부(지점)-재직'
                    WHEN A8.DGR3_LEVL_DG_PRTNR_NO = A3.PRTNR_NO AND A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NOT NULL THEN '내부(지점)-퇴사'
                    WHEN A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NULL THEN '내부-재직'
                    WHEN A7.PRTNR_NO = A3.PRTNR_NO AND A7.CLTN_DT IS NOT NULL THEN '내부-퇴사'
                    ELSE '' END                                                      AS INSIDE_PURCHASE         /*내부구매*/
             , A10.CLCTAM_PRTNR_NO                                                   AS CLCTAM_PRTNR_NO         /*집금파트너번호*/
             , A11.PRTNR_KNM                                                         AS CLCTAM_PRTNR_KNM         /*파트너한글명*/
             , A11.CRP_MPNO                                                          AS CRP_MPNO /*법인휴대전화번호*/
             , CASE WHEN A1.SELL_TP_CD = '1' THEN A1.MM_ISTM_AMT ELSE A1.FNL_AMT END AS MM_ISTM_AMT           /*월할부금액*/
          FROM TB_SSCT_CNTR_DTL A1 /*계약상세*/
         INNER JOIN TB_SSCT_CNTR_BAS A2 /*계약기본*/
            ON A2.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A2.CNTR_NO = A1.CNTR_NO
         INNER JOIN TB_CUBS_CST_BAS A3 /*고객기본*/
            ON A3.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A3.CST_NO    = A2.CNTR_CST_NO
         INNER JOIN TB_PDBS_PD_BAS A4 /*상품기본*/
            ON A4.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A4.PD_CD     = A1.BASE_PD_CD
         INNER JOIN TB_SSCT_CNTR_STLM_BAS A5 /*계약결제기본*/
            ON A5.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A5.CNTR_NO   = A1.CNTR_NO
           AND A5.CNTR_STLM_ID = (SELECT MAX(B1.CNTR_STLM_ID)
                                         FROM TB_SSCT_CNTR_STLM_BAS B1
                                                 ,TB_SSCT_CNTR_STLM_REL B2
                                      WHERE B1.CNTR_NO = A1.CNTR_NO
                                         AND B2.DTL_CNTR_NO = A1.CNTR_NO
                                         AND B2.DTL_CNTR_SN = A1.CNTR_SN
                                         AND B1.CNTR_STLM_ID = B2.CNTR_STLM_ID
                                         AND TO_CHAR(#{perfYm}) BETWEEN SUBSTR(B2.VL_STRT_DTM, 1, 6) AND SUBSTR(B2.VL_END_DTM, 1, 6)
                                         AND B1.DTA_DL_YN = 'N'
                                         AND B2.DTA_DL_YN = 'N')
         INNER JOIN TB_CBCL_SL_BND_ALRPY_BAS A6 /*WELLS매출월마감내역*/
            ON A6.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A6.CNTR_NO = A1.CNTR_NO
           AND A6.CNTR_SN = A1.CNTR_SN
           AND A6.BASE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(#{perfYm}, 'YYYYMM'), -1), 'YYYYMM')
          LEFT OUTER JOIN TB_OGBS_MM_PRTNR_IZ A7 /*월파트너내역*/
            ON A7.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A7.BASE_YM   = #{perfYm}
           AND A7.OG_TP_CD = A2.SELL_OG_TP_CD
           AND A7.PRTNR_NO = A2.SELL_PRTNR_NO
         LEFT OUTER JOIN TB_OGBS_MM_OG_IZ A8 /*월조직내역*/
            ON A8.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A8.OG_ID = A7.OG_ID
           AND A8.BASE_YM = #{perfYm}
          LEFT OUTER JOIN TB_CBCL_DLQ_BAS_HIST A9 /*연체기본이력*/
            ON A9.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A9.PERF_YM = #{perfYm}
           AND A9.CNTR_NO = A1.CNTR_NO
           AND A9.CNTR_SN = A1.CNTR_SN
           AND A9.DLQ_SN = 1 /*해당월의 연체책정된 값 출력*/
          LEFT OUTER JOIN TB_CBBO_BND_CNTR_BAS A10 /*채권계약기본*/
            ON A10.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A10.BASE_YM = #{perfYm}
           AND A10.CNTR_NO = A1.CNTR_NO
           AND A10.CNTR_SN = A1.CNTR_SN
          LEFT OUTER JOIN TB_CBBO_CLCTAM_PRTNR_DTL A11/*집금파트너상세*/
            ON A11.PRTNR_NO = A10.CLCTAM_PRTNR_NO
          LEFT OUTER JOIN TB_CBCL_WELLS_BOR_AMT_BAS A12 /*위약금액기본*/
            ON A12.DTA_DL_YN = 'N' /*데이터삭제여부*/
           AND A12.PERF_YM = #{perfYm}
           AND A12.CNTR_NO = A1.CNTR_NO
           AND A12.CNTR_SN = A1.CNTR_SN
         WHERE 1=1
           AND A1.DTA_DL_YN  = 'N' /*데이터삭제여부*/
           <if test="@MybatisUtils@isNotEmpty(sellTpCd) and !@MybatisUtils@equals(sellTpCd, 'ALL')">
           /*화면-판매유형 선택 시(전체 제외)-시작*/
           AND A1.SELL_TP_CD = #{sellTpCd}
           /*화면-판매유형 선택 시(전체 제외)-종료*/
           </if>
           <if test="@MybatisUtils@isNotEmpty(sellTpDtlCd) and !@MybatisUtils@equals(sellTpDtlCd, 'ALL')">
           AND A1.SELL_TP_DTL_CD = #{sellTpDtlCd}
           </if>
           <if test="@MybatisUtils@isNotEmpty(cntrNo) and @MybatisUtils@isNotEmpty(cntrSn)">
           /*화면-계약상세번호 입력 시-시작*/
           AND A1.CNTR_NO = #{cntrNo}
           AND A1.CNTR_SN = #{cntrSn}
           /*화면-계약상세번호 입력 시-종료*/
           </if>
           <if test="@MybatisUtils@isNotEmpty(copnDvCd) and !@MybatisUtils@equals(copnDvCd, 'ALL')">
           /*화면-개인/법인구분 선택 시(전체 제외)-시작*/
           AND A2.COPN_DV_CD = #{copnDvCd}
           /*화면-개인/법인구분 선택 시(전체 제외)-종료*/
           </if>
           <if test="@MybatisUtils@isNotEmpty(cntrCstNo)">
           /*화면-고객번호 입력 시 - 시작*/
           AND A2.CNTR_CST_NO = #{cntrCstNo}
           /*화면-고객번호 입력 시 - 종료*/
           </if>
           <if test="@MybatisUtils@isNotEmpty(dlqDv) and !@MybatisUtils@equals(dlqDv, 'ALL')">
           /*화면-연체구분 선택 시 (전체 제외)-시작*/
               <if test='@MybatisUtils@equals(dlqDv, "1")'>
               /*화면-연체구분 정상 선택 시 - 시작*/
               AND NVL(A9.EOT_DLQ_AMT, 0) = 0
               /*화면-연체구분 정상 선택 시 - 종료*/
               </if>
               <if test='@MybatisUtils@equals(dlqDv, "2")'>
               /*화면-연체구분 연체 선택 시 연체 개월을 선택할 수 있음- 시작*/
               AND NVL(A9.EOT_DLQ_AMT, 0) > 0
               <if test="@MybatisUtils@isNotEmpty(dlqMcnt) and dlqMcnt.size() > 0">
               AND
               <foreach collection="dlqMcnt" item="dlqMcnt" open="(" close=")" separator="OR">
                   <if test='!@MybatisUtils@equals(dlqMcnt, "7")'>
                   /*0~6까지는 아래 쿼리*/
                   NVL(A9.DLQ_MCN, 0) = #{dlqMcnt}
                   </if>
                   <if test='@MybatisUtils@equals(dlqMcnt, "7")'>
                   /*7이면 아래 쿼리로 변경*/
                   NVL(A9.DLQ_MCN, 0)  >= #{dlqMcnt}
                   </if>
                </foreach>
               </if>
               /*화면-연체구분 연체 선택 시 연체 개월을 선택할 수 있음- 종료*/
               </if>
           /*화면-연체구분 선택 시 (전체 제외)-종료*/
           </if>
           <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
           /*화면-번호 입력 시-시작*/
           AND A7.PRTNR_NO = #{prtnrNo}
           /*화면-번호 입력 시-종료*/
           </if>
           <if test='@MybatisUtils@isNotEmpty(dgr1LevlOgCd)'>
           /*화면-조직레벨 선택 시-시작*/
           /*총괄단 선택 시*/
           AND A8.DGR1_LEVL_OG_ID = #{dgr1LevlOgCd}
           </if>
           <if test='@MybatisUtils@isNotEmpty(dgr2LevlOgCd)'>
           /*지역단 선택 시*/
           AND A8.DGR2_LEVL_OG_ID = #{dgr2LevlOgCd}
           </if>
           <if test='@MybatisUtils@isNotEmpty(dgr3LevlOgCd)'>
           /*지점 선택 시*/
           AND A8.DGR3_LEVL_OG_ID = #{dgr3LevlOgCd}
           /*화면-조직레벨 선택 시-종료*/
           </if>
           <if test="@MybatisUtils@isNotEmpty(ogTp) and !@MybatisUtils@equals(ogTp, 'ALL')">
           /*화면-조직유형 선택 시-시작*/
           AND A2.SELL_OG_TP_CD = #{ogTp}
           /*화면-조직유형 선택 시-종료*/
           </if>
    </select>
</mapper>
