<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.withdrawal.idvrve.mapper.WwdbGiroOcrForwardingMgtMapper">
    <select id="selectGiroOcrForwardingObjects" resultType="com.kyowon.sms.wells.web.withdrawal.idvrve.dto.WwdbGiroOcrForwardingMgtDto$SearchObjectRes">
        SELECT CNTR_NO /*계약번호*/
             , CNTR_SN /*계약일련번호*/
             , CNTR_NO || CNTR_SN AS CNTR /*계약상세번호*/
             , CST_KNM AS CST_FNM
             , SL_DT /*매출일자*/
             , RENTAL_TN/*현재차월*/
             , RECAP_DUTY_PTRM_N /*약정개월*/
             , START_SL_DT AS STRT_GIRO_TN/*시작*/
             , CASE WHEN END_SL_DT <![CDATA[<]]> 23 THEN 11
                    WHEN END_SL_DT BETWEEN 23 AND  34 THEN 23
                    WHEN END_SL_DT BETWEEN 35 AND  46 THEN 35
                    WHEN END_SL_DT BETWEEN 47 AND  59 THEN 47
                    ELSE 60 END AS END_GIRO_TN/*종료*/
             , RENTAL_PTRM AS ISTM_MCN/*렌탈기간*/
             , THM0_AMT /*0차월*/
             , RENTAL_AMT AS ISTM_AMT /*렌탈료*/
             , RENTAL_DSC_AMT AS ISTM_DSC_AMT/*렌탈할인*/
             , PY_AMT /*청규렌탈료*/
             , PY_AMT AS STPL_NMN_AMT /*약정차월*/
             , CASE WHEN RENTAL_TN + 12 <![CDATA[<]]> ISTM_MCN THEN 0
                    WHEN RENTAL_TN <![CDATA[<=]]> RENTAL_PTRM AND LCSLED = LST_DD OR LCSLED >= 30 THEN RENTAL_AMT - RENTAL_DSC_AMT /* - 재약정할인*/  /*만료차월*/
                    WHEN RENTAL_TN <![CDATA[<=]]> RENTAL_PTRM THEN FLOOR((RENTAL_AMT - RENTAL_DSC_AMT) / 30 * LCSLED / 10) * 10
                    ELSE 0
                     END AS EXN_NMN_AMT
             , LTPAY_YN  /*후납여부*/
             , '2' AS GIRO_BIZ_DV_CD
             , '2' AS GIRO_BIZ_TP_CD
          FROM ( SELECT T1.CNTR_NO /*계약번호*/
                      , T1.CNTR_SN /*계약일련번호*/
                      , T1.CNTR_NO || T1.CNTR_SN AS CNTR /*계약상세번호*/
                      , T4.CST_KNM
                      , T1.SL_CL_DT AS SL_DT /*매출일자*/
                      , T1.RENTAL_TN/*현재차월*/
                      , T5.STPL_PTRM AS RECAP_DUTY_PTRM_N /*약정개월*/
                      , CASE WHEN T1.RENTAL_TN = 1
                             THEN 0
                             ELSE T1.RENTAL_TN
                              END AS START_SL_DT /*시작*/
                      , CASE WHEN T1.RENTAL_TN = 1
                             THEN 11
                             WHEN T1.RENTAL_TN + 12 >= T1.ISTM_MCN
                             THEN T1.ISTM_MCN
                             ELSE T1.RENTAL_TN + 11
                              END AS END_SL_DT/*종료*/
                      , T1.RENTAL_PTRM /*렌탈기간*/
                      , CASE WHEN T3.CNTR_NO IS NULL THEN 0
                             ELSE T3.THM_SL_SUM_AMT
                              END AS THM0_AMT /*0차월*/
                      , T1.RENTAL_AMT /*렌탈료*/
                      , T1.RENTAL_DSC_AMT/*렌탈할인*/
                      , CASE WHEN T1.RENTAL_TN <![CDATA[<=]]> T1.RENTAL_PTRM
                             THEN T1.RENTAL_AMT - T1.RENTAL_DSC_AMT /* - 재약정할인*/
                             ELSE 0
                              END AS PY_AMT /*청규렌탈료*/
                      , 'N' AS LTPAY_YN/*후납여부*/
                      , TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(T1.SL_CL_DT,0,6)||'01'), T2.FRISU_BFSVC_PTRM_N)),'DD') AS LST_DD
                      , T1.ISTM_MCN
                      , SUBSTR(T1.SL_CL_DT , -2) AS LCSLED
                   FROM TB_CBCL_WELLS_SL_MM_CL_IZ T1 /*월마감테이블*/
                   JOIN TB_SSCT_CNTR_WELLS_DTL T2 /*계약WELLS상세*/
                     ON T2.CNTR_NO = T1.CNTR_NO
                    AND T2.CNTR_SN = T1.CNTR_SN
                    AND T2.DTA_DL_YN = 'N'
                   LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ T3 /*월마감테이블*/
                     ON T3.SL_CL_YM = SUBSTR(T1.SL_CL_DT,0,6)  /*매출마감년월    매출일자*/
                    AND T3.CNTR_NO = T1.CNTR_NO
                    AND T3.CNTR_SN = T1.CNTR_SN
                    AND T3.DTA_DL_YN = 'N'
                   JOIN TB_SSCT_CNTR_DTL T5
                     ON T5.CNTR_NO = T1.CNTR_NO
                    AND T5.CNTR_SN = T1.CNTR_SN
                    AND T5.DTA_DL_YN = 'N'
                   JOIN TB_SSCT_CNTR_BAS T6
                     ON T6.CNTR_NO = T5.CNTR_NO
                    AND T6.DTA_DL_YN = 'N'
                   LEFT OUTER JOIN TB_CUBS_CST_BAS T4
                     ON T4.CST_NO = T6.CNTR_CST_NO
                    AND T4.DTA_DL_YN = 'N'
                  <if test='@MybatisUtils@equals(cntr, "no")'>
                   JOIN TB_SSCT_CNTR_STLM_REL SCSR
                     ON T5.CNTR_NO = SCSR.DTL_CNTR_NO
                    AND SCSR.DP_TP_CD = '0401'
                  </if>
                  WHERE 1 = 1
                    AND T1.SL_CL_YM = TO_CHAR(SYSDATE,'YYYYMM')
        <choose>
            <when test="@MybatisUtils@equals(cntr, 'no')">
                AND T1.DTA_DL_YN = 'N'
                AND (T1.RENTAL_TN = 1 OR MOD(T1.RENTAL_TN,12)=0)
                AND T1.RENTAL_TN > 0
                AND T1.RENTAL_TN <![CDATA[<]]> T1.ISTM_MCN
                AND T1.PRM_MCN = 0
                AND (T1.SL_STP_YN = 'N' OR T1.SL_STP_YN IS NULL)
                AND T1.SL_CL_DT IS NOT NULL
                AND T1.CAN_DT IS NULL
            </when>
            <otherwise>
            AND T1.CNTR_NO = #{cntrNo}/*계약일련번호*/
            AND T1.CNTR_SN = #{cntrSn}
            </otherwise>
        </choose>
        <!--            <choose>-->
        <!--                <when test="@MybatisUtils@equals(cntr, 'null')">-->
        <!--                       AND T1.SL_CL_YM = TO_CHAR(SYSDATE,'YYYYMM') -->
        <!--                </when>-->
        <!--                <otherwise>-->
        <!--                </otherwise>-->
        <!--            </choose>           -->

        AND T1.DTA_DL_YN = 'N'
        )
    </select>

    <select id="selectGiroOcrForwardings" resultType="com.kyowon.sms.wells.web.withdrawal.idvrve.dto.WwdbGiroOcrForwardingMgtDto$SearchRes">
        SELECT
               T1.WK_DT --작업일자
             , T1.WK_SN --작업일련번호
             , T1.GIRO_BIZ_DV_CD --지로업무구분코드
             , T1.GIRO_BIZ_TP_CD --지로업무유형코드
             , T1.CNTR_NO ||T1.CNTR_SN AS CNTR --계약번호
             , T1.CNTR_NO --계약번호
             , T1.CNTR_SN --계약일련번호
             , T1.CST_FNM -- 고객성명
             , T1.SL_DT --매출일자
             , NVL(T2.RENTAL_TN,T3.RENTAL_TN) AS RENTAL_TN --  1.현재차월
             , T4.STPL_PTRM AS RECAP_DUTY_PTRM_N --약정개월
             , T1.STRT_GIRO_TN --시작지로회차
             , T1.END_GIRO_TN --종료지로회차
             , T1.THM0_AMT --0차월금액
             , T1.ISTM_MCN --할부개월수
             , T1.ISTM_AMT --할부금액
             , T1.ISTM_DSC_AMT --할부할인금액
             , T1.PY_AMT --납입금액
             , T1.STPL_NMN_AMT --약정차월금액
             , T1.EXN_NMN_AMT --만료차월금액
             , T1.LTPAY_YN --후납여부
             , T1.GIRO_RGLR_DV_CD --정기구분
          FROM TB_RVDW_GIRO_OCR_MNGT_BAS T1
          LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ T2
            ON T2.CNTR_NO = T1.CNTR_NO
           AND T2.CNTR_SN = T1.CNTR_SN
           AND T2.SL_CL_YM = TO_CHAR(SYSDATE,'YYYYMM')
           AND T2.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_CBCL_WELLS_SL_MM_CL_IZ T3
            ON T3.CNTR_NO = T1.CNTR_NO
           AND T3.CNTR_SN = T1.CNTR_SN
           AND T3.SL_CL_YM = TO_CHAR(ADD_MONTHS(SYSDATE ,-1),'YYYYMM')
           AND T3.DTA_DL_YN = 'N'
          LEFT OUTER JOIN TB_SSCT_CNTR_DTL T4
            ON T4.CNTR_NO = T1.CNTR_NO
           AND T4.CNTR_SN = T1.CNTR_SN
         WHERE 1 = 1
         <if test='@MybatisUtils@isNotEmpty(wkDt)'>
           AND T1.WK_DT = #{wkDt}
         </if>
         <if test='@MybatisUtils@isNotEmpty(giroRglrDvCd)'>
           AND T1.GIRO_RGLR_DV_CD = #{giroRglrDvCd}
         </if>
           AND T1.DTA_DL_YN = 'N'
         ORDER BY T1.WK_DT
                , T1.WK_SN
    </select>

    <insert id="insertGiroOcrForwardings">
        INSERT INTO TB_RVDW_GIRO_OCR_MNGT_BAS(
               WK_DT --작업일자
             , WK_SN  --작업일련번호
             , CNTR_NO
             , CNTR_SN
             , CST_FNM --고객명
             , SL_DT --매출일자
             , STRT_GIRO_TN --시작
             , END_GIRO_TN --종료
             , THM0_AMT --0차월
             , ISTM_MCN
             , ISTM_AMT
             , ISTM_DSC_AMT
             , PY_AMT
             , STPL_NMN_AMT
             , EXN_NMN_AMT
             , LTPAY_YN
             , GIRO_RGLR_DV_CD
             <include refid="COMMON.insertSystemField"/>
        )VALUES(
               #{wkDt} --작업일자
             , (SELECT NVL(MAX(WK_SN),0) FROM TB_RVDW_GIRO_OCR_MNGT_BAS WHERE WK_DT = #{wkDt}) + 1  --작업일련번호
             , #{cntrNo}
             , #{cntrSn}
             , #{cstFnm} --고객명
             , #{slDt} --매출일자
             , #{strtGiroTn} --시작
             , #{endGiroTn} --종료
             , #{thm0Amt} --0차월
             , #{istmMcn}
             , #{istmAmt}
             , #{istmDscAmt}
             , #{pyAmt}
             , #{stplNmnAmt}
             , #{exnNmnAmt}
             , #{ltpayYn}
             , #{giroRglrDvCd}
             <include refid="COMMON.insertSystemFieldValue" />
        )

    </insert>

    <update id="updateGiroOcrForwardings">
        UPDATE TB_RVDW_GIRO_OCR_MNGT_BAS
           SET
               STRT_GIRO_TN = #{strtGiroTn}--시작
             , END_GIRO_TN = #{endGiroTn}--종료
             , THM0_AMT = #{thm0Amt} --0차월
             , ISTM_MCN = #{istmMcn}
             , ISTM_AMT = #{istmAmt}
             , ISTM_DSC_AMT = #{istmDscAmt}
             , PY_AMT = #{pyAmt}
             , STPL_NMN_AMT = #{stplNmnAmt}
             , EXN_NMN_AMT = #{exnNmnAmt}
             , LTPAY_YN = #{ltpayYn}
             <include refid="COMMON.updateSystemField"/>
         WHERE WK_DT = #{wkDt}
           AND WK_SN = #{wkSn}
    </update>

    <update id="deleteGiroOcrForwardings">
        UPDATE TB_RVDW_GIRO_OCR_MNGT_BAS
           SET
               DTA_DL_YN = 'Y'
       <include refid="COMMON.updateSystemField"/>
         WHERE WK_DT = #{wkDt}
           AND WK_SN = #{wkSn}
    </update>

    <select id="selectGiroOcrForwardingPrints" resultType="com.kyowon.sms.wells.web.withdrawal.idvrve.dto.WwdbGiroOcrForwardingMgtDto$SearchPrintRes">
        SELECT
               GIRO_OCR_PBL_DTM
             , TO_CHAR(TO_DATE(GIRO_OCR_PBL_DTM,'YYYYMMDDHH24MISS'),'YYYYMMDD') AS GIRO_OCR_PBL_DATE
             , TO_CHAR(TO_DATE(GIRO_OCR_PBL_DTM,'YYYYMMDDHH24MISS'),'PM HH:MI:SS') AS GIRO_OCR_PBL_TIME
             , GIRO_OCR_PBL_SEQN
             , GIRO_OCR_PBL_OJ_STRTDT
             , GIRO_OCR_PBL_OJ_ENDDT
             , TO_CHAR(TO_DATE(GIRO_OCR_PBL_OJ_STRTDT,'YYYYMMDD'),'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(GIRO_OCR_PBL_OJ_ENDDT,'YYYYMMDD'),'YYYY-MM-DD') AS GIRO_OCR_PBL_OJ
             , GIRO_OCR_PBL_TOT_QTY
             , GIRO_OCR_PRNT_DT
             , DECODE(GIRO_OCR_PRNT_DT,null,'출력','재출력') AS GIRO_OCR_PRNT
             , GIRO_OCR_DL_DT
             , DTA_DL_YN
          FROM TB_RVDW_GIRO_OCR_PBL_BAS
         WHERE 1 = 1
           AND DTA_DL_YN = 'N'
           <if test='@MybatisUtils@isNotEmpty(giroOcrPblDtm)'>
           AND GIRO_OCR_PBL_DTM LIKE #{giroOcrPblDtm}||'%'
           </if>
           <if test='@MybatisUtils@equals(giroOcrPrntStatus,"01")'>
           AND GIRO_OCR_PRNT_DT IS NOT NULL
           </if>
           <if test='@MybatisUtils@equals(giroOcrPrntStatus,"02")'>
           AND GIRO_OCR_PRNT_DT IS NULL
           </if>
         ORDER BY GIRO_OCR_PBL_DTM DESC , GIRO_OCR_PBL_SEQN
    </select>

    <insert id="insertGiroOcrForwardingDetailPrints">
        INSERT INTO TB_RVDW_GIRO_OCR_PBL_DTL(
                GIRO_OCR_PBL_DTM
              , GIRO_OCR_PBL_SEQN
              , GIRO_OCR_PBL_SN
              , GIRO_BIZ_DV_CD
              , GIRO_BIZ_TP_CD
              , PY_AMT
              , GIRO_NO --지로번호
              , CNTR_NO
              , CNTR_SN
              , CST_FNM
              , ELC_MPY_NO --이건 여쭤보고 수정해야함
              , GIRO_TN  -- 수정해야함
              , GIRO_PY_YM
              , GIRO_TN_CN
              /*, ZIP
              , BAS_ADR
              , DTL_ADR*/
              , GIRO_PLRCV_ADR_ID
              , SL_DT
              <include refid="COMMON.insertSystemField"/>
        )SELECT
                   #{giroOcrPblDtm}
                 , #{giroOcrPblSeqn}
                 --(SELECT NVL(MAX(GIRO_OCR_PBL_DTM),0)+1 FROM TB_RVDW_GIRO_OCR_PBL_DTL WHERE GIRO_OCR_PBL_DTM = GIRO_OCR_PBL_DTM) AS GIRO_OCR_PBL_SEQN --순번
                 , GIRO_OCR_PBL_SN
                 , GIRO_BIZ_DV_CD
                 , GIRO_BIZ_TP_CD
                 , PY_AMT
                 , GIRO_NO
                 , T1CNTR_NO
                 , CNTR_SN
                 , CST_FNM
                 , ELC_MPY_NO
                 , GIRO_TN
                 , GIRO_PY_YM
                 , GIRO_TN_CN
                 /*, ZIP
                 , BAS_ADR
                 , DTL_ADR
                 */
                 , ADR_ID
                 , SL_DT
                 <include refid="COMMON.insertSystemFieldValue" />
              FROM (
                        SELECT
                             --  TO_CHAR(SYSDATE, 'HH24MISS') AS GIRO_OCR_PBL_DTM --작업일자
                               ROW_NUMBER()  OVER ( ORDER BY WK_DT , WK_SN ,T1CNTR_NO ,HOECHA  ) AS GIRO_OCR_PBL_SN--지로OCR발행일련번호
                             , '2' AS GIRO_BIZ_DV_CD --지로업무구분코드
                             , '2' AS GIRO_BIZ_TP_CD --지로업무유형코드
                             , CWQAM3 AS PY_AMT --납입금액
                        --     , CWGCDE --지로번호
                             , CWCCDE ||  SAVE_INSY ||  SAVE_INSM ||
                               CASE WHEN
                                    CAST( MOD( CAST(
                                    CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,1 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,2 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,3 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,4 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,5 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,6 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,7 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,8 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,9 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,10,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,11,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,12,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,13,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,1 ,1 )   * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,2 ,1 )   * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,1 ,1 )   * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,2 ,1 )   * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,1 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,2 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,3 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,4 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,5 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,6 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,7 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,8 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,9 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,10,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,11,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,12,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,13,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,1 ,1 )   * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,2 ,1 )   * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,1 ,1 )   * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,2 ,1 )   * 2  ,2,'0') ,2,1) AS NUMBER)
                                 AS FLOAT ) , 10  ) AS NUMBER ) = 0 THEN  0
                               ELSE
                               10 - CAST( MOD( CAST(
                                    CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,1 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,2 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,3 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,4 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,5 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,6 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,7 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,8 ,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,9 ,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,10,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,11,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,12,1 )      * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,13,1 )      * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,1 ,1 )   * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,2 ,1 )   * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,1 ,1 )   * 1  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,2 ,1 )   * 2  ,2,'0') ,1,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,1 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,2 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,3 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,4 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,5 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,6 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,7 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,8 ,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,9 ,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,10,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,11,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,12,1 )      * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( CWCCDE,13,1 )      * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,1 ,1 )   * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSY,2 ,1 )   * 2  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,1 ,1 )   * 1  ,2,'0') ,2,1) AS NUMBER)
                                  + CAST( SUBSTR(LPAD(SUBSTR( SAVE_INSM,2 ,1 )   * 2  ,2,'0') ,2,1) AS NUMBER)
                                 AS FLOAT ) , 10  ) AS NUMBER )
                                END GIRO_NO  /* 지로번호     */
                             , T1CNTR_NO --계약번호
                             , CNTR_SN --일련번호
                             , CST_KNM AS CST_FNM --고객명
                             , CWUSR1 AS ELC_MPY_NO -- 전자납부번호
                             , HOECHA AS GIRO_TN -- 지로회차
                             , CASE WHEN CWHMO1 = SAVE_INSM THEN SAVE_INSY02 || LPAD(CWHMO1, 2, '0') ELSE (SAVE_INSY02 - 1) || LPAD(CWHMO1, 2, '0') END AS GIRO_PY_YM    --지로납입년월
                             , HOECHA || ' 회차(' ||  CWHMO1 || '월)' AS GIRO_TN_CN --지로회차내용
                             , ADR_ID
                             /*, ZIP --우편번호
                             , BAS_ADR --기본주소
                             , DTL_ADR --상세주소
                             */
                             , SAVE_INSY02 || SAVE_INSM ||'27' AS SL_DT /* 매출일자       */
                          FROM (
                                    SELECT
                                           SUBSTR(
                                                    CASE WHEN SAVE_INSM02  >  84  THEN  TO_NUMBER(CWSLEY) + 7
                                                         WHEN SAVE_INSM02  >  72  THEN  TO_NUMBER(CWSLEY) + 6
                                                         WHEN SAVE_INSM02  >  60  THEN  TO_NUMBER(CWSLEY) + 5
                                                         WHEN SAVE_INSM02  >  48  THEN  TO_NUMBER(CWSLEY) + 4
                                                         WHEN SAVE_INSM02  >  36  THEN  TO_NUMBER(CWSLEY) + 3
                                                         WHEN SAVE_INSM02  >  24  THEN  TO_NUMBER(CWSLEY) + 2
                                                         WHEN SAVE_INSM02  >  12  THEN  TO_NUMBER(CWSLEY) + 1
                                                         ELSE TO_NUMBER(CWSLEY) END  ,3,2
                                                  ) AS  SAVE_INSY
                                         , CASE WHEN SAVE_INSM02  >  84  THEN  TO_NUMBER(CWSLEY) + 7
                                                WHEN SAVE_INSM02  >  72  THEN  TO_NUMBER(CWSLEY) + 6
                                                WHEN SAVE_INSM02  >  60  THEN  TO_NUMBER(CWSLEY) + 5
                                                WHEN SAVE_INSM02  >  48  THEN  TO_NUMBER(CWSLEY) + 4
                                                WHEN SAVE_INSM02  >  36  THEN  TO_NUMBER(CWSLEY) + 3
                                                WHEN SAVE_INSM02  >  24  THEN  TO_NUMBER(CWSLEY) + 2
                                                WHEN SAVE_INSM02  >  12  THEN  TO_NUMBER(CWSLEY) + 1
                                                ELSE TO_NUMBER(CWSLEY) END        AS  SAVE_INSY02
                                         , LPAD(
                                                    CASE WHEN SAVE_INSM02  >  84  THEN  TO_NUMBER(SAVE_INSM02) - 84
                                                         WHEN SAVE_INSM02  >  72  THEN  TO_NUMBER(SAVE_INSM02) - 72
                                                         WHEN SAVE_INSM02  >  60  THEN  TO_NUMBER(SAVE_INSM02) - 60
                                                         WHEN SAVE_INSM02  >  48  THEN  TO_NUMBER(SAVE_INSM02) - 48
                                                         WHEN SAVE_INSM02  >  36  THEN  TO_NUMBER(SAVE_INSM02) - 36
                                                         WHEN SAVE_INSM02  >  24  THEN  TO_NUMBER(SAVE_INSM02) - 24
                                                         WHEN SAVE_INSM02  >  12  THEN  TO_NUMBER(SAVE_INSM02) - 12
                                                         ELSE SAVE_INSM02 END  ,2,'0'
                                                ) AS SAVE_INSM
                                          , LPAD(CWQAM3,8,'0') SAVE_AMT  /* 납입액       */
                                          , CASE WHEN  HOECHA02 = 0  THEN  LCSETM  /* 설치월    */
                                                 ELSE SUBSTR(TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(IST_DT,'YYYY-MM-DD'),HOECHA02)),'YYYYMMDD'),5,2)
                                                  END AS CWHMO1 /* 지로회차     */
                                          , WK_DT
                                          , WK_SN
                                          , T1CNTR_NO
                                          , CWQAM3
                                          , CWGCDE
                                          , HOECHA
                                          , CNTR_SN
                                          , CWUSR1
                                          , ADR_ID
                                          /*, ZIP --우편번호
                                          , BAS_ADR --기본주소
                                          , DTL_ADR --상세주소
                                          */
                                          , IST_DT --설치일자
                                          , CWCCDE --지로번호
                                          , CST_KNM
                                       FROM (
                                                SELECT
                                                       T1.WK_DT --작업년월
                                                     , T1.WK_SN --일련번호
                                                     , T1.CNTR_NO AS T1CNTR_NO--계약번호
                                                     , T1.CNTR_SN  --계약번호
                                                     , T1.CNTR_NO --계약일련번호
                                                     , LPAD(SUBSTR(T1.CNTR_NO,6),7,'0')
                                                     , SUBSTR(T1.CNTR_NO,2) || LPAD(T2.HOECHA,2,'0') AS CWCCDE --지로번호
                                                     , T1.SL_DT
                                                --   , TO_NUMBER(SUBSTR(T1.SL_DT,5,2))
                                                     , CASE WHEN T1.LTPAY_YN = 'Y' THEN  ( CASE WHEN  T2.HOECHA > 0 THEN  TO_NUMBER(SUBSTR(T1.SL_DT,5,2)) + T2.HOECHA -1  ELSE TO_NUMBER(SUBSTR(T1.SL_DT,5,2))  END  ) + 2
                                                                                   ELSE  ( CASE WHEN  T2.HOECHA > 0 THEN  TO_NUMBER(SUBSTR(T1.SL_DT,5,2)) + T2.HOECHA -1  ELSE TO_NUMBER(SUBSTR(T1.SL_DT,5,2))  END  ) + 1
                                                                                    END  SAVE_INSM02
                                                     , T6.CNTR_CST_NO  --고객번호
                                                     , T9.CST_KNM  --성명
                                                     , SUBSTR(T1.CNTR_NO,2) AS CWUSR1 --전자납부번호
                                                     , NVL(T3.GIRO_PLRCV_ADR_ID,T7.ADR_ID) AS ADR_ID
                                                     /*, NVL(T3.ZIP,T8.NEW_ADR_ZIP) AS ZIP--우편번호
                                                     , NVL(T3.BAS_ADR,T8.RNADR) AS BAS_ADR --기본주소
                                                     , NVL(T3.DTL_ADR,T8.RDADR) AS DTL_ADR--상세주소
                                                     */
                                                     , T4.IST_DT --설치일자
                                                     , SUBSTR(T4.IST_DT,5,2) AS LCSETM
                                                     , T4.REQD_DT --철거일자
                                                     , T1.ISTM_AMT --할부금액
                                                     , T1.ISTM_DSC_AMT --월할부
                                                     , T1.THM0_AMT --0차월
                                                     , T1.STPL_NMN_AMT --약정차월금액
                                                     , T1.EXN_NMN_AMT --만료차월금액
                                                     , T1.ISTM_MCN --
                                                     , T1.STRT_GIRO_TN --시작회차
                                                     , T1.END_GIRO_TN --종료회차
                                                     , T1.SL_DT --매출일자
                                                     , SUBSTR(T1.SL_DT,1,4) AS CWSLEY
                                                     , T1.SELL_TAM --판매총액
                                                     , '3010068' AS CWGCDE --지로번호
                                                     , T1.LTPAY_YN --후납여부
                                                     , LPAD(T2.HOECHA,2,'0') HOECHA --회차
                                                     , T2.HOECHA HOECHA02 --회차
                                                --       , T5.ISTM_MCN --할부개월수
                                                     , CASE WHEN T2.HOECHA = 0           THEN T1.THM0_AMT /* ０차월         */
                                                            WHEN T2.HOECHA = T5.ISTM_MCN THEN T1.EXN_NMN_AMT /* ６０차월       */
                                                --            WHEN T2.HOECHA = LC31.LCMON1 THEN CW55.CWAM12 /* １２차월       */
                                                            WHEN T2.HOECHA <![CDATA[ < ]]> T5.ISTM_MCN THEN T1.ISTM_AMT /* 할부／렌탈１   */
                                                            ELSE T1.ISTM_DSC_AMT /* 월할부／렌탈２ */
                                                             END AS CWQAM3 /* 납입액       */
                                                  FROM TB_RVDW_GIRO_OCR_MNGT_BAS T1  --OCR관리기본
                                                  LEFT OUTER JOIN (SELECT LEVEL AS HOECHA FROM DUAL CONNECT BY LEVEL<![CDATA[ <= ]]> 100) T2
                                                    ON T2.HOECHA BETWEEN T1.STRT_GIRO_TN AND T1.END_GIRO_TN
                                                  LEFT OUTER JOIN TB_RVDW_GIRO_PLRCV_BAS T3 --지로수신처
                                                    ON T3.CNTR_NO = T1.CNTR_NO AND T3.CNTR_SN = T3.CNTR_SN
                                                   AND T3.DTA_DL_YN = 'N'
                                                  LEFT OUTER JOIN TB_SSCT_CNTR_WELLS_DTL T4 --계약WELLS상세
                                                    ON T4.CNTR_NO = T1.CNTR_NO
                                                   AND T4.CNTR_SN = T1.CNTR_SN
                                                   AND T4.DTA_DL_YN = 'N'
                                                 INNER JOIN TB_SSCT_CNTR_DTL T5 --계약상세
                                                    ON T5.CNTR_NO = T1.CNTR_NO AND T5.CNTR_SN = T1.CNTR_SN
                                                   AND T5.DTA_DL_YN = 'N'
                                                 INNER JOIN TB_SSCT_CNTR_BAS T6 --계약기본
                                                    ON T6.CNTR_NO = T1.CNTR_NO
                                                   AND T6.DTA_DL_YN = 'N'
                                                  LEFT OUTER JOIN TB_SSCT_CNTR_ADRPC_BAS T7 --계약주소
                                                    ON T7.CNTR_NO = T6.CNTR_NO AND T7.CNTR_CST_NO = T6.CNTR_CST_NO
                                                   AND T7.CNTRT_REL_CD = '01'
                                                   AND T7.DTA_DL_YN = 'N'
                                                  LEFT OUTER JOIN TB_GBCO_ADR_BAS T8 --주소기본
                                                    ON T8.ADR_ID = T7.ADR_ID
                                                   AND T8.DTA_DL_YN = 'N'
                                                  LEFT OUTER JOIN TB_CUBS_CST_BAS T9 --고객기본
                                                    ON T9.CST_NO = T6.CNTR_CST_NO
                                                   AND T9.DTA_DL_YN = 'N'
                                                 WHERE 1 = 1
                                                   AND T1.WK_DT = #{wkDt}
                                                   AND T1.LTPAY_YN = 'N'
                                                   AND T1.DTA_DL_YN = 'N'
                                             ) T02
                                ) T03
                    )
    </insert>

    <insert id="insertGiroOcrForwardingPrints">
        INSERT INTO TB_RVDW_GIRO_OCR_PBL_BAS(
             GIRO_OCR_PBL_DTM --발행일시
           , GIRO_OCR_PBL_SEQN --발행순번
           , GIRO_OCR_PBL_OJ_STRTDT --시작일자
           , GIRO_OCR_PBL_OJ_ENDDT --종료일자
           , GIRO_OCR_PBL_TOT_QTY --총수량
           <include refid="COMMON.insertSystemField"/>
        )VALUES(
             #{giroOcrPblDtm}
           , #{giroOcrPblSeqn}
           , #{giroOcrPblOjStrtdt}
           , #{giroOcrPblOjStrtdt}
           , #{giroOcrPblTotQty}
           <include refid="COMMON.insertSystemFieldValue"/>
        )
    </insert>

    <select id="selectGiroOcrForwardingPrintInfo" resultType="com.kyowon.sms.wells.web.withdrawal.idvrve.dvo.WwdbGiroOcrForwardingPrintSeqDvo">
        SELECT
               #{giroOcrPblOjStrtdt}||TO_CHAR(SYSDATE, 'HH24MISS') AS GIRO_OCR_PBL_DTM
             , NVL(MAX(GIRO_OCR_PBL_DTM),0)+1 AS GIRO_OCR_PBL_SEQN
          FROM TB_RVDW_GIRO_OCR_PBL_DTL
         WHERE GIRO_OCR_PBL_DTM =  #{giroOcrPblOjStrtdt}||TO_CHAR(SYSDATE, 'HH24MISS')
    </select>

    <!--
    <select id="selectGiroOcrPk" resultType="int">
        SELECT
               NVL(MAX(GIRO_OCR_PBL_SEQN),0)+1
          FROM TB_RVDW_GIRO_OCR_PBL_BAS
    </select>
     -->
    <update id="deleteGiroOcrForwardingPrints">
        UPDATE
               TB_RVDW_GIRO_OCR_PBL_BAS
           SET DTA_DL_YN = 'Y'
           <include refid="COMMON.updateSystemField"/>
         WHERE GIRO_OCR_PBL_DTM = #{giroOcrPblDtm}
           AND GIRO_OCR_PBL_SEQN = #{giroOcrPblSeqn}
    </update>

    <update id="updateGiroPrintDate">
        UPDATE TB_RVDW_GIRO_OCR_PBL_BAS
           SET GIRO_OCR_PRNT_DT = #{giroOcrPrntDt}
           <include refid="COMMON.updateSystemField"/>
         WHERE 1 = 1
           AND GIRO_OCR_PBL_DTM = #{giroOcrPblDtm}
           AND GIRO_OCR_PBL_SEQN = #{giroOcrPblSeqn}
           AND DTA_DL_YN = 'N'
    </update>

    <insert id="insertGiroPrintDate">
            INSERT INTO TB_RVDW_GIRO_OCR_PRNT_IZ (
                        GIRO_OCR_PRNT_DT	/*지로OCR출력일자*/
                      , PRNT_WK_SN	/*출력작업일련번호*/
                      , PRNT_SN	/*출력일련번호*/
                      , CNTR_NO	/*계약번호*/
                      , CNTR_SN	/*계약일련번호*/
                      , CST_FNM	/*고객성명*/
                      , GIRO_BIZ_DV_CD	/*지로업무구분코드*/
                      , GIRO_BIZ_TP_CD	/*지로업무유형코드*/
                      , GIRO_AMT	/*지로금액*/
                      , MPY_TN_YM	/*납부회차년월*/
                      , PY_TMLM_DT	/*납입기한일자*/
                      , PY_TN_NM	/*납입회차명*/
                      , GIRO_INQNO	/*지로조회번호*/
                      , ELC_MPY_NO	/*전자납부번호*/
                      , GIRO_PLRCV_ADR_ID	/*지로수신처주소ID*/
                    <include refid="COMMON.insertSystemField"/>
            ) SELECT
                     #{giroOcrPrntDt} AS GIRO_OCR_PRNT_DT	/*지로OCR출력일자*/
                   , GIRO_OCR_PBL_SN AS PRNT_WK_SN	/*출력작업일련번호*/
                   , (SELECT NVL(MAX(PRNT_SN ), 0)+1
                        FROM TB_RVDW_GIRO_OCR_PRNT_IZ
                       WHERE 1 = 1
                         AND GIRO_OCR_PRNT_DT = #{giroOcrPrntDt} ) AS PRNT_SN	/*출력일련번호*/
                   , T2.CNTR_NO	/*계약번호*/
                   , T2.CNTR_SN	/*계약일련번호*/
                   , T2.CST_FNM	/*고객성명*/
                   , T2.GIRO_BIZ_DV_CD	/*지로업무구분코드*/
                   , T2.GIRO_BIZ_TP_CD	/*지로업무유형코드*/
                   , T2.PY_AMT AS  GIRO_AMT	/*지로금액*/
                   , T2.GIRO_PY_YM  AS MPY_TN_YM	/*납부회차년월*/
                   , SL_DT AS PY_TMLM_DT	/*납입기한일자*/
                   , T2.GIRO_TN_CN AS PY_TN_NM	/*납입회차명*/
                   , GIRO_NO AS GIRO_INQNO	/*지로조회번호*/
                   , T2.ELC_MPY_NO	/*전자납부번호*/
                   , T2.GIRO_PLRCV_ADR_ID	/*지로수신처주소ID*/
                  <include refid="COMMON.insertSystemFieldValue" />
                FROM TB_RVDW_GIRO_OCR_PBL_BAS T1
               INNER JOIN TB_RVDW_GIRO_OCR_PBL_DTL T2
                  ON T2.GIRO_OCR_PBL_DTM = T1.GIRO_OCR_PBL_DTM
                 AND T2.GIRO_OCR_PBL_SEQN = T1.GIRO_OCR_PBL_SEQN
                 AND T2.DTA_DL_YN = 'N'
               WHERE 1 = 1
                 AND T1.GIRO_OCR_PBL_DTM = #{giroOcrPblDtm}
                 AND T1.GIRO_OCR_PBL_SEQN = #{giroOcrPblSeqn}
        </insert>

</mapper>
