<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.fee.standard.mapper.WfeyFeeSmlCalculationSqlFor202Mapper">

    <insert id='insertOrganizationEjectFee'>

    </insert>

    <insert id='insertOrganizationEjectFeeNewBase'>
    /*수수료 수수료코드(W020016 조직배출2(지점장)) 202308~ 적용*/
        INSERT INTO TB_FEAM_FEE_SML_BAS (  /* 수수료시뮬레이션기본 */
               BASE_YM            /* 기준년월 */
             , PERF_YM            /* 실적년월 */
             , OJ_DSB_YM          /* 대상지급년월 */
             , CO_CD              /* 회사코드 */
             , OG_TP_CD           /* 조직유형코드 */
             , PRTNR_NO           /* 파트너번호 */
             , FEE_CD             /* 수수료코드 */
             , DTA_CRT_FEE_CD     /* 데이터생성수수료코드 */
             , FEE_DSB_MTHD_CD    /* 수수료지급방식코드 */
             , SML_CRT_TP_CD      /* 시뮬레이션생성유형코드 */
             , FEE_CALC_AMT       /* 수수료계산금액 */
             , FNL_FEE_YN         /* 최종수수료여부 */
             <include refid="COMMON.insertSystemField" />
                                            )
        SELECT AA.BASE_YM
             , AA.BASE_YM       AS PERF_YM
             , AA.BASE_YM       AS OJ_DSB_YM
             , #{coCd}           AS CO_CD          -- 고정
             , AA.OG_TP_CD
             , AA.PRTNR_NO
             , #{feeCd}          AS FEE_CD
             ,NVL(#{dtaCrtFeeCd}, #{feeCd})    AS DTA_CRT_FEE_CD
             , '01'              AS FEE_DSB_MTHD_CD -- 수수료지급방식코드
             , #{smlCrtTpCd}     AS SML_CRT_TP_CD
             , CASE WHEN AA.OG_EJT_GD_CD IN ('2','5') THEN SUM(AA.AMT_AKSD09) * 0.5 ELSE SUM(AA.AMT_AKSD09) END AS FEE_CALC_AMT   /*지급율 = 배출등급 1,4 -> 100% , 2,5-> 50%*/
             , #{fnlFeeYn}       AS FNL_FEE_YN
            <include refid="COMMON.insertSystemFieldValue" />
          FROM (SELECT T01.BASE_YM
                     , T01.OG_TP_CD
                     , T01.PRTNR_NO
                     , NVL(T02.PERF_VAL, 0)               AS CNT_DEQ00           -- 인정건수
                     , NVL(T03.BASE_PRTNR_NO, ' ')                               -- 배출자사번
                     , NVL(T03.OJ_PRTNR_PSTN_DV_CD, '99') AS OJ_PRTNR_PSTN_DV_CD -- 피배출자 직급
                     , NVL(T03.EJT_NMN_N, 99)             AS EJT_NMN_N           -- 피배출자 차월수
                     , NVL(T03.OG_EJT_GD_CD, '99')        AS OG_EJT_GD_CD        -- 배출등급   1,2,3,6 : 신규    4,5,7 : 경력
                     , CASE
                           WHEN NVL(T03.OJ_PRTNR_PSTN_DV_CD, '99') IN ('6', '7') THEN ( -- 피배출자 직급이 6,7인 경우만 집계
                               CASE
                                   WHEN NVL(T03.OG_EJT_GD_CD, '99') IN ('1', '2', '6') THEN ( -- 배출등급 신규 (3등급 코드 사용 안함)
                                       CASE
                                           WHEN NVL(T03.EJT_NMN_N, 99) = 1 AND NVL(T02.PERF_VAL, 0) >= 30 THEN 1000000 -- 1차월
                                           WHEN NVL(T03.EJT_NMN_N, 99) = 1 AND NVL(T02.PERF_VAL, 0) >= 20 THEN 800000
                                           WHEN NVL(T03.EJT_NMN_N, 99) = 2 AND NVL(T02.PERF_VAL, 0) >= 30 THEN 800000 -- 2차월
                                           WHEN NVL(T03.EJT_NMN_N, 99) = 2 AND NVL(T02.PERF_VAL, 0) >= 20 THEN 600000
                                           WHEN NVL(T03.EJT_NMN_N, 99) = 3 AND NVL(T02.PERF_VAL, 0) >= 30 THEN 700000 -- 3차월
                                           WHEN NVL(T03.EJT_NMN_N, 99) = 3 AND NVL(T02.PERF_VAL, 0) >= 20 THEN 500000
                                           WHEN NVL(T03.EJT_NMN_N, 99) IN (4, 5, 6) AND NVL(T02.PERF_VAL, 0) >= 30 THEN 500000 -- 4,5,6차월
                                           WHEN NVL(T03.EJT_NMN_N, 99) IN (4, 5, 6) AND NVL(T02.PERF_VAL, 0) >= 20 THEN 300000
                                           ELSE 0 END)
                                   WHEN NVL(T03.OG_EJT_GD_CD, '99') IN ('4', '5', '7') THEN ( -- 배출등급 경력
                                       CASE
                                           WHEN NVL(T03.EJT_NMN_N, 99) IN (1, 2, 3, 4, 5, 6) AND NVL(T02.PERF_VAL, 0) >= 30
                                               THEN 500000
                                           WHEN NVL(T03.EJT_NMN_N, 99) IN (1, 2, 3, 4, 5, 6) AND NVL(T02.PERF_VAL, 0) >= 20
                                               THEN 300000
                                           ELSE 0 END)
                                   ELSE 0 END)
                           ELSE 0 END                   AS AMT_AKSD09
                  FROM TB_OGBS_MM_PRTNR_IZ T01 -- 파트너
                       LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL T02           -- 총주문
                                       ON T01.BASE_YM = T02.BASE_YM
                                           AND #{mmAcuPerfAgrgCrtDvCd} = T02.MM_ACU_PERF_AGRG_CRT_DV_CD
                                           AND T01.OG_TP_CD = T02.OG_TP_CD
                                           AND T01.PRTNR_NO = T02.PRTNR_NO
                                           AND 'W02P00002' = T02.PERF_ATC_CD --  실적건수(고정)
                                           AND '2' = T02.PERF_DV_CD -- 지점장 집계
                       LEFT OUTER JOIN TB_OGPS_PRTNR_EJT_REL T03 -- 배출-조직
                                       ON T01.BASE_YM = T03.MNGT_YM
                                           AND T01.OG_TP_CD = T03.BASE_OG_TP_CD
                                           AND T01.PRTNR_NO = T03.BASE_PRTNR_NO
                                           AND '10' = T03.OG_EJT_DV_CD -- 피배출자
                                           AND 'Y' = T03.ACKMT_YN -- 인정여부
                                           AND T03.EJT_NMN_N IN (1, 2, 3, 4, 5, 6)   /*배출차월 1~6 차월 까지*/
                 WHERE 1 = 1
                   AND T01.BASE_YM = #{baseYm}
                   AND T01.OG_TP_CD = #{ogTpCd}
		        <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
		           AND T01.PRTNR_NO = #{prtnrNo}
		        </if>
                   AND T01.PSTN_DV_CD = '7'
                   AND T01.PERF_EXCD_OJ_YN = 'N') AA
         GROUP BY AA.BASE_YM
                , AA.OG_TP_CD
                , AA.PRTNR_NO
                , AA.OG_EJT_GD_CD
        HAVING SUM(AA.AMT_AKSD09) > 0
    </insert>

    <insert id="insertOrganizationEjectFee1">
    /* 조직배출1 수수료 계산(2023.08~) 기준*/
        INSERT INTO TB_FEAM_FEE_SML_BAS (  /* 수수료시뮬레이션기본 */
               BASE_YM            /* 기준년월 */
             , PERF_YM            /* 실적년월 */
             , OJ_DSB_YM          /* 대상지급년월 */
             , CO_CD              /* 회사코드 */
             , OG_TP_CD           /* 조직유형코드 */
             , PRTNR_NO           /* 파트너번호 */
             , FEE_CD             /* 수수료코드 */
             , DTA_CRT_FEE_CD     /* 데이터생성수수료코드 */
             , FEE_DSB_MTHD_CD    /* 수수료지급방식코드 */
             , SML_CRT_TP_CD      /* 시뮬레이션생성유형코드 */
             , FEE_CALC_AMT       /* 수수료계산금액 */
             , FNL_FEE_YN         /* 최종수수료여부 */
             <include refid="COMMON.insertSystemField" />
                                            )
        SELECT AA.BASE_YM
             , AA.BASE_YM        AS PERF_YM
             , AA.BASE_YM        AS OJ_DSB_YM
             , #{coCd}           AS CO_CD          -- 고정
             , AA.OG_TP_CD
             , AA.PRTNR_NO
             , #{feeCd}          AS FEE_CD
             , NVL(#{dtaCrtFeeCd}, #{feeCd})    AS DTA_CRT_FEE_CD
             , '01'              AS FEE_DSB_MTHD_CD -- 수수료지급방식코드
             , #{smlCrtTpCd}     AS SML_CRT_TP_CD
             , AA.FEE_CALC_AMT   AS FEE_CALC_AMT
             , #{fnlFeeYn}       AS FNL_FEE_YN
        <include refid="COMMON.insertSystemFieldValue" />
        FROM (
               SELECT T1.BASE_YM
                     , T1.BASE_YM         AS PERF_YM
                     , T1.BASE_YM         AS OJ_DSB_YM
                     , T1.OG_TP_CD
                     , T1.PRTNR_NO
                     , (CASE WHEN T4.PERF_VAL >= 20 THEN /* 배출자 가전 20개 이상이면 조직배출1지급 */
                                 CASE WHEN NVL(T3.PERF_VAL, 0) > NVL(T2.PERF_VAL, 0) AND NVL(T3.PERF_VAL, 0) >= 4 THEN 1500000
                                      WHEN NVL(T3.PERF_VAL, 0) > NVL(T2.PERF_VAL, 0) AND NVL(T3.PERF_VAL, 0) = 3 THEN 1000000
                                      WHEN NVL(T3.PERF_VAL, 0) > NVL(T2.PERF_VAL, 0) AND NVL(T3.PERF_VAL, 0) = 2 THEN 500000
                                      WHEN NVL(T3.PERF_VAL, 0) > NVL(T2.PERF_VAL, 0) AND NVL(T3.PERF_VAL, 0) = 1 THEN 300000
                                      ELSE
                                            /* 2023.07 이전 배출수 이하이면 */
                                            CASE WHEN NVL(T3.PERF_VAL, 0) >= 3 THEN NVL(T3.PERF_VAL, 0) * 100000 + 100000
                                                 WHEN NVL(T3.PERF_VAL, 0) >= 1 THEN NVL(T3.PERF_VAL, 0) * 100000
                                                 ELSE 0 END
                                      END
                            ELSE 0 END
                          + CASE WHEN NVL(T5.PERF_VAL, 0) > 0 AND T1.BASE_YM <![CDATA[<=]]> '202312' THEN NVL(T5.PERF_VAL, 0) * 200000
                                 ELSE 0 END
                         ) AS FEE_CALC_AMT
                  FROM TB_OGBS_MM_PRTNR_IZ T1 /* 월파트너내역 */
                  LEFT OUTER JOIN TB_FEAM_PRTNR_PERF_MM_ACU_CL T2
                    ON T1.BASE_YM = T2.BASE_YM
                   AND #{mmAcuPerfAgrgCrtDvCd} = T2.MM_ACU_PERF_AGRG_CRT_DV_CD
                   AND T1.OG_TP_CD = T2.OG_TP_CD
                   AND T1.PRTNR_NO = T2.PRTNR_NO
                   AND T2.PERF_ATC_CD = 'W02P00134'     /* 2023.07이전 배출수 */
                  LEFT OUTER JOIN TB_FEAM_PRTNR_PERF_MM_ACU_CL T5
                    ON T1.BASE_YM = T5.BASE_YM
                   AND #{mmAcuPerfAgrgCrtDvCd} = T5.MM_ACU_PERF_AGRG_CRT_DV_CD
                   AND T1.OG_TP_CD = T5.OG_TP_CD
                   AND T1.PRTNR_NO = T5.PRTNR_NO
                   AND T5.PERF_ATC_CD = 'W02P00123'     /* 2023.04~2023.07 한전제도 추가20만 */
                  LEFT OUTER JOIN TB_FEAM_PRTNR_PERF_MM_ACU_CL T3
                    ON T1.BASE_YM = T3.BASE_YM
                   AND #{mmAcuPerfAgrgCrtDvCd} = T3.MM_ACU_PERF_AGRG_CRT_DV_CD
                   AND T1.OG_TP_CD = T3.OG_TP_CD
                   AND T1.PRTNR_NO = T3.PRTNR_NO
                   AND T3.PERF_ATC_CD = 'W02P00092'     /* 배출수 */
                  LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL T4
                    ON T1.BASE_YM = T4.BASE_YM
                   AND #{mmAcuPerfAgrgCrtDvCd} = T4.MM_ACU_PERF_AGRG_CRT_DV_CD
                   AND T1.OG_TP_CD = T4.OG_TP_CD
                   AND T1.PRTNR_NO = T4.PRTNR_NO
                   AND T4.PERF_ATC_CD = 'W02P00002'     /* 인정건수 */
                   AND '2' = T4.PERF_DV_CD -- 지점장 집계
                 WHERE 1 = 1
                   AND T1.BASE_YM = #{baseYm}
                   AND T1.OG_TP_CD = #{ogTpCd}
		        <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
		           AND T1.PRTNR_NO = #{prtnrNo}
		        </if>
                   AND T1.PSTN_DV_CD = '7'
                   AND T1.PERF_EXCD_OJ_YN = 'N'
             ) AA
        WHERE 1 = 1
          AND AA.FEE_CALC_AMT > 0
    </insert>

    <insert id="insertNewEstablishmentBranchFee">
        INSERT INTO TB_FEAM_FEE_SML_BAS (  /* 수수료시뮬레이션기본 */
               BASE_YM            /* 기준년월 */
             , PERF_YM            /* 실적년월 */
             , OJ_DSB_YM          /* 대상지급년월 */
             , CO_CD              /* 회사코드 */
             , OG_TP_CD           /* 조직유형코드 */
             , PRTNR_NO           /* 파트너번호 */
             , FEE_CD             /* 수수료코드 */
             , DTA_CRT_FEE_CD     /* 데이터생성수수료코드 */
             , FEE_DSB_MTHD_CD    /* 수수료지급방식코드 */
             , SML_CRT_TP_CD      /* 시뮬레이션생성유형코드 */
             , FEE_CALC_AMT       /* 수수료계산금액 */
             , FNL_FEE_YN         /* 최종수수료여부 */
             <include refid="COMMON.insertSystemField" />
                                            )
        /*
         * 신설지점 수수료
         *  - 피배출자 지점장에게 지급함
         *  - 수수료 정책이 바뀌어도 배출된 년월 기준으로 수수료 정책이 적용됨.
         *  - 오픈시 23년 4월 정책만 적용하면 됨.
         *  - 추후 정책이 바뀌면  TB_OGPS_PRTNR_EJT_REL.EJT_YM (배출년월) 기준으로 정책이 적용되어야 함.
         *  - 현재는 TB_OGPS_PRTNR_EJT_REL.EJT_YM 상관없이 SQL 반영되어 있음. ( 23년 4월 수수료 규정에 "기존 승진자 해당 기준 적용" 문구 때문 )
         *  - 23년 4월 수수료 규정의 "23년 한정 제도"는 수작업 관리하므로 계산식에 제외함. - 시스템 운영자 확인 완료
         * */
        SELECT AA.BASE_YM
             , AA.PERF_YM
             , AA.OJ_DSB_YM
             , AA.CO_CD
             , AA.OG_TP_CD
             , AA.PRTNR_NO
             , AA.FEE_CD
             , AA.DTA_CRT_FEE_CD
             , '01'              AS FEE_DSB_MTHD_CD -- 수수료지급방식코드
             , #{smlCrtTpCd}     AS SML_CRT_TP_CD
             , AA.FEE_CALC_AMT
             , AA.FNL_FEE_YN
        <include refid="COMMON.insertSystemFieldValue" />
          FROM (SELECT A.BASE_YM
                     , A.BASE_YM                 AS PERF_YM
                     , A.BASE_YM                 AS OJ_DSB_YM
                     , #{coCd}                   AS CO_CD
                     , A.OG_TP_CD
                     , A.PRTNR_NO
                     , #{feeCd}                  AS FEE_CD
                     , NVL(#{dtaCrtFeeCd}, #{feeCd})                 AS DTA_CRT_FEE_CD
                     , '01'                      AS SPMT_DSB_DV_CD -- 추후 확인 필요 01/정상지급, 02/추가지급
                     , '01'                      AS FEE_CALC_TP_CD -- 01 / 수수료계산
                     , NVL(B.PERF_VAL, 0)        AS CNT_DEQ00      -- 인정건수
                     , NVL(C.OG_EJT_GD_CD, '99') AS OG_EJT_GD_CD
                     ,CASE WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  = 1 AND NVL(B.PERF_VAL,0) >= 30 THEN  700000        -- 1차월
                                    WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  = 1 AND NVL(B.PERF_VAL,0) >= 20 THEN  600000
                                    WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  = 2 AND NVL(B.PERF_VAL,0) >= 30 THEN  600000        -- 2차월
                                    WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  = 2 AND NVL(B.PERF_VAL,0) >= 20 THEN  500000
                                    WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  = 3 AND NVL(B.PERF_VAL,0) >= 30 THEN  500000        -- 3차월
                                    WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  = 3 AND NVL(B.PERF_VAL,0) >= 20 THEN  400000
                                    WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  IN (4,5,6) AND NVL(B.PERF_VAL,0) >= 30 THEN  400000        -- 4,5,6차월
                                    WHEN  MONTHS_BETWEEN(TO_DATE(A.BASE_YM,'YYYYMM'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),'109912'),'YYYYMM')  ) + 1  IN (4,5,6) AND NVL(B.PERF_VAL,0) >= 20 THEN  300000
                                    ELSE 0 END  * C.NB_BRCH_DSB_RT AS FEE_CALC_AMT
                     , #{fnlFeeYn} AS FNL_FEE_YN
                  FROM TB_OGBS_MM_PRTNR_IZ A -- 파트너
                       LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL B -- 순주문실적
                                       ON A.BASE_YM = B.BASE_YM
                                           AND #{mmAcuPerfAgrgCrtDvCd} = B.MM_ACU_PERF_AGRG_CRT_DV_CD
                                           AND A.OG_TP_CD = B.OG_TP_CD
                                           AND A.PRTNR_NO = B.PRTNR_NO
                                           AND B.PERF_ATC_CD = 'W02P00002'
                                           AND '2' = B.PERF_DV_CD -- 지점장 집계
                       INNER JOIN (
                                /*
                                    신설지점 등급(NB_GD_CD-2023.08월기준)으로 지급율 변경됨. 해당 처리위하여 서브쿼리로 변경함.
                                    -신설등급(1등급-130%,2등급-100%,3등급-80%,그외-0%)
                                */
                                SELECT A.*
                                       ,CASE WHEN EJT_YM <![CDATA[<]]> '202308' THEN 1
                                             WHEN EJT_YM >= '202308' AND NB_GD_CD = '1' THEN 1.3
                                             WHEN EJT_YM >= '202308' AND NB_GD_CD = '2' THEN 1
                                             WHEN EJT_YM >= '202308' AND NB_GD_CD = '3' THEN 0.8
                                             ELSE 0 END AS NB_BRCH_DSB_RT --신설등급에 따른 지급율
                                  FROM TB_OGPS_PRTNR_EJT_REL A
                                 WHERE A.OJ_OG_TP_CD = #{ogTpCd}
                                   AND A.MNGT_YM = #{baseYm}
                                   AND '10' = A.OG_EJT_DV_CD -- 피배출자
                                   AND 'Y' = A.ACKMT_YN -- 인정여부
                              ) C  -- 배출-조직
                                       ON A.BASE_YM = C.MNGT_YM
                                           AND A.OG_TP_CD = C.OJ_OG_TP_CD -- 피배출자
                                           AND A.PRTNR_NO = C.OJ_PRTNR_NO -- 피배출자
                                           AND '10' = C.OG_EJT_DV_CD -- 피배출자
                                           AND 'Y' = C.ACKMT_YN -- 인정여부
                 WHERE 1 = 1
                   AND A.BASE_YM = #{baseYm}
                   AND A.OG_TP_CD = #{ogTpCd}
		        <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
		           AND A.PRTNR_NO = #{prtnrNo}
		        </if>
                   AND A.PSTN_DV_CD = '7'
                   AND A.PERF_EXCD_OJ_YN = 'N') AA
         WHERE 1 = 1
           AND AA.FEE_CALC_AMT > 0
    </insert>

    <insert id="insertNetIncreseManagementFee">
        /* W020121 순증관리 수수료  */
        INSERT INTO TB_FEAM_FEE_SML_BAS (  /* 수수료시뮬레이션기본 */
               BASE_YM            /* 기준년월 */
             , PERF_YM            /* 실적년월 */
             , OJ_DSB_YM          /* 대상지급년월 */
             , CO_CD              /* 회사코드 */
             , OG_TP_CD           /* 조직유형코드 */
             , PRTNR_NO           /* 파트너번호 */
             , FEE_CD             /* 수수료코드 */
             , DTA_CRT_FEE_CD     /* 데이터생성수수료코드 */
             , FEE_DSB_MTHD_CD    /* 수수료지급방식코드 */
             , SML_CRT_TP_CD      /* 시뮬레이션생성유형코드 */
             , FEE_CALC_AMT       /* 수수료계산금액 */
             , FNL_FEE_YN         /* 최종수수료여부 */
             <include refid="COMMON.insertSystemField" />
                                            )
        SELECT ZZZ.BASE_YM
             , ZZZ.BASE_YM       AS PERF_YM
             , ZZZ.BASE_YM       AS OJ_DSB_YM
             , #{coCd}           AS CO_CD          -- 고정
             , ZZZ.OG_TP_CD      AS OG_TP_CD
              ,ZZZ.PRTNR_NO      AS PRTNR_NO
             , #{feeCd}          AS FEE_CD
             , NVL(#{dtaCrtFeeCd}, #{feeCd})    AS DTA_CRT_FEE_CD
             , '01'              AS FEE_DSB_MTHD_CD -- 수수료지급방식코드
             , #{smlCrtTpCd}     AS SML_CRT_TP_CD
             , ZZZ.FEE_CALC_AMT  AS FEE_CALC_AMT
             , #{fnlFeeYn}       AS FNL_FEE_YN
        <include refid="COMMON.insertSystemFieldValue" />
          FROM (
           SELECT ZZ.BASE_YM
                 ,ZZ.OG_TP_CD
                 ,ZZ.PRTNR_NO
                 ,TRUNC(CASE WHEN ZZ.AB80_CNT >= ZZ.KIZUN_CNT THEN /* 실활동 인원이 기준인원수 보다 큰 경우  */
                            CASE WHEN ZZ.LINK_DEQ02 >= 10 THEN /* 순증건수 10이상시 순증건만으로 수당 지급 */
                                      CASE WHEN ZZ.LINK_DEQ02 >= 20  THEN ZZ.DEQ2_CNT * 3000     /* 순증 급간으로 BS건수 활용 수수료 계산   */
                                           WHEN ZZ.LINK_DEQ02 >= 15  THEN ZZ.DEQ2_CNT * 2400
                                           WHEN ZZ.LINK_DEQ02 >= 10  THEN ZZ.DEQ2_CNT * 1800
                                           ELSE 0 END
                                 ELSE
                                      CASE WHEN ZZ.LINK_DEQ02 >= 5 OR ZZ.LINK_DEQ06 >= 50 THEN ZZ.DEQ2_CNT * 1400    /* 순증급간 OR 신규건수로 BS건수 활용 수수료 계산   */
                                           WHEN ZZ.LINK_DEQ02 >= 0 OR ZZ.LINK_DEQ06 >= 40 THEN ZZ.DEQ2_CNT * 1000
                                           WHEN ZZ.LINK_DEQ02 >= -5 OR ZZ.LINK_DEQ06 >= 30 THEN ZZ.DEQ2_CNT * 800
                                           WHEN ZZ.LINK_DEQ02 >= -10 OR ZZ.LINK_DEQ06 >= 25 THEN ZZ.DEQ2_CNT * 700
                                           WHEN ZZ.LINK_DEQ02 >= -15 OR ZZ.LINK_DEQ06 >= 20 THEN ZZ.DEQ2_CNT * 600
                                           ELSE ZZ.DEQ2_CNT * 500  END
                                 END
                       ELSE 0 END
                     *  /* 곱하기  */
                      CASE WHEN  ZZ.LINK_DEQ03 <![CDATA[<]]> 90     THEN 0.8         /* 지점 BS 처리율로 곱하기 처리 */
                           ELSE 1 END

                     - /* 빼기 */
                      ( ZZ.LC56_CNT * 50000 ))    /* 허위발생 대상 웰스매니저 수  */
                      AS  FEE_CALC_AMT           /*허위가 많으면 ""0""보자 작을 수도 있음.   */
             FROM (
                     SELECT AA.BASE_YM
                           ,AA.OG_TP_CD
                           ,AA.PRTNR_NO
                           ,AA.AB80_CNT  /* 실활동인원수  */
                           /* 2023.09~ 신설지점 3개월간 최저순증 0 적용(7,8월 승진자는 11월까지 적용) */
                           ,CASE WHEN NVL(SUBSTR(AA.PRFMT_DT, 1, 6), AA.BASE_YM) IN ('202307', '202308') AND AA.BASE_YM <![CDATA[<=]]> '202311'
                                        AND NVL(AA.LINK_DEQ02, 0) <![CDATA[<=]]> 0 THEN 0 /* 2023.07,08 승급 최저순증 처리 */
                                 WHEN AA.AKDRIS <![CDATA[<=]]> 3 AND NVL(AA.LINK_DEQ02, 0) <![CDATA[<=]]> 0 THEN 0 /* 2023.07~ 신설지점 3개월간 최저순증 0으로 */
                                 ELSE AA.LINK_DEQ02
                                 END  AS LINK_DEQ02      /* 순증건수  */
                           ,AA.LINK_DEQ03    /* 지점처리율  */
                           ,AA.LINK_DEQ06    /* 신규판매건수  */
                           ,CASE WHEN AA.AKDRIS <![CDATA[<=]]> 6 THEN 2 ELSE 3 END  AS KIZUN_CNT                          /* 실활동 기준건수 - 진급계월수 기준으로   */
                           ,CASE WHEN AA.CNT_BS > AA.CNT_SIL THEN AA.CNT_SIL ELSE AA.CNT_BS END AS DEQ2_CNT   /* 수수료 지급 BS 건수 - 무조건 1,200 건이 max 가 되게... */
                           ,NVL(BB.PERF_VAL, 0) AS LC56_CNT                                                                       /* 지점내 허위방문 웰스매니저 수 */
                       FROM (
                            SELECT A.BASE_YM
                                  ,A.OG_TP_CD
                                  ,A.PRTNR_NO
                                  ,NVL(B.PERF_VAL,0)  AS AB80_CNT
                                  ,CASE WHEN  NVL(B.PERF_VAL,0)*180  > 1200 THEN 1200 ELSE NVL(B.PERF_VAL,0)*180 END  AS CNT_SIL
                                  ,NVL(C.PERF_VAL,0) - NVL(D.PERF_VAL,0)   AS CNT_BS /* 지점  BS  건수 ( 지점장님 본인 건 제외 )    */
                                  ,A.PRFMT_DT
                                  ,MONTHS_BETWEEN( TO_DATE(A.BASE_YM||'01','YYYYMMDD'),TO_DATE(NVL(SUBSTR(A.PRFMT_DT,1,6),A.BASE_YM)||'01','YYYYMMDD') ) + 1    AS AKDRIS /* 승진개월수 */
                                  ,NVL(E.PERF_VAL,0)  AS LINK_DEQ03    /* 지점처리율  */
                                  ,NVL(F.PERF_VAL,0)  AS LINK_DEQ02   /* 순증건수  */
                                  ,NVL(G.PERF_VAL,0)  AS LINK_DEQ06   /* 신규판매건수  */
                              FROM TB_OGBS_MM_PRTNR_IZ A  /* M조직 기본   */
                                   LEFT OUTER JOIN TB_FEAM_PRTNR_PERF_MM_ACU_CL B
                                           ON  A.BASE_YM  = B.BASE_YM
                                          AND  #{mmAcuPerfAgrgCrtDvCd} = B.MM_ACU_PERF_AGRG_CRT_DV_CD
                                          AND  A.OG_TP_CD = B.OG_TP_CD
                                          AND  A.PRTNR_NO = B.PRTNR_NO
                                          AND  'W02P00111'= B.PERF_ATC_CD        -- 고정 실활동인원
                                   LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL C
                                           ON  A.BASE_YM  = C.BASE_YM
                                          AND  #{mmAcuPerfAgrgCrtDvCd} = C.MM_ACU_PERF_AGRG_CRT_DV_CD
                                          AND  A.OG_TP_CD = C.OG_TP_CD
                                          AND  A.PRTNR_NO = C.PRTNR_NO
                                          AND  'W02P00085'= C.PERF_ATC_CD        -- 고정 BS건수
                                          AND  '2'        = C.PERF_DV_CD         -- 고정 조직실적
                                   LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL D
                                           ON  A.BASE_YM  = D.BASE_YM
                                          AND  #{mmAcuPerfAgrgCrtDvCd} = D.MM_ACU_PERF_AGRG_CRT_DV_CD
                                          AND  A.OG_TP_CD = D.OG_TP_CD
                                          AND  A.PRTNR_NO = D.PRTNR_NO
                                          AND  'W02P00085'= D.PERF_ATC_CD        -- 고정 BS건수
                                          AND  '0'        = D.PERF_DV_CD         -- 고정 개인실적(지점장)
                                   LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL E
                                           ON  A.BASE_YM  = E.BASE_YM
                                          AND  #{mmAcuPerfAgrgCrtDvCd} = E.MM_ACU_PERF_AGRG_CRT_DV_CD
                                          AND  A.OG_TP_CD = E.OG_TP_CD
                                          AND  A.PRTNR_NO = E.PRTNR_NO
                                          AND  'W02P00114'= E.PERF_ATC_CD        -- 고정 지점BS처리율
                                          AND  '2'        = E.PERF_DV_CD         -- 고정 조직실적
                                   LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL F
                                           ON  A.BASE_YM  = F.BASE_YM
                                          AND  #{mmAcuPerfAgrgCrtDvCd} = F.MM_ACU_PERF_AGRG_CRT_DV_CD
                                          AND  A.OG_TP_CD = F.OG_TP_CD
                                          AND  A.PRTNR_NO = F.PRTNR_NO
                                          AND  'W02P00113'= F.PERF_ATC_CD        -- 고정 순증
                                          AND  '2'        = F.PERF_DV_CD         -- 고정 조직실적
                                   /* 2023.08~ 신규판매건수 추가 */
                                   LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL G
                                           ON  A.BASE_YM  = G.BASE_YM
                                          AND  #{mmAcuPerfAgrgCrtDvCd} = G.MM_ACU_PERF_AGRG_CRT_DV_CD
                                          AND  A.OG_TP_CD = G.OG_TP_CD
                                          AND  A.PRTNR_NO = G.PRTNR_NO
                                          AND  'W00P00010'= G.PERF_ATC_CD        -- 고정 BS신규판매건수
                                          AND  '2' = G.PERF_DV_CD         -- 고정 조직실적
                             WHERE 1 = 1
                               AND A.BASE_YM    = #{baseYm}                       -- 변수
                               AND A.OG_TP_CD   = #{ogTpCd}                       -- 변수
                             <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                               AND A.PRTNR_NO = #{prtnrNo}
                             </if>
                               AND A.PSTN_DV_CD = '7'
                               AND A.PERF_EXCD_OJ_YN = 'N'
                             ) AA
                        LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL BB
                          ON AA.BASE_YM   = BB.BASE_YM
                         AND AA.OG_TP_CD  = BB.OG_TP_CD
                         AND AA.PRTNR_NO  = BB.PRTNR_NO
                         AND  #{mmAcuPerfAgrgCrtDvCd} = BB.MM_ACU_PERF_AGRG_CRT_DV_CD
                         AND 'W02P00138'= BB.PERF_ATC_CD        -- 허위방문건수
                         AND '2' = BB.PERF_DV_CD         -- 고정 지점
                 ) ZZ
              ) ZZZ
        WHERE 1 = 1
          AND ZZZ.FEE_CALC_AMT > 0
    </insert>

    <insert id="insertBsEncouragementFeeForBrmgr">
        /* BS장려(지점장)수수료(W020123) 계산 SQL (소스 : LC56U111, 컬럼 : AKSD41) */
        INSERT INTO TB_FEAM_FEE_SML_BAS (  /* 수수료시뮬레이션기본 */
               BASE_YM            /* 기준년월 */
             , PERF_YM            /* 실적년월 */
             , OJ_DSB_YM          /* 대상지급년월 */
             , CO_CD              /* 회사코드 */
             , OG_TP_CD           /* 조직유형코드 */
             , PRTNR_NO           /* 파트너번호 */
             , FEE_CD             /* 수수료코드 */
             , DTA_CRT_FEE_CD     /* 데이터생성수수료코드 */
             , FEE_DSB_MTHD_CD    /* 수수료지급방식코드 */
             , SML_CRT_TP_CD      /* 시뮬레이션생성유형코드 */
             , FEE_CALC_AMT       /* 수수료계산금액 */
             , FNL_FEE_YN         /* 최종수수료여부 */
             <include refid="COMMON.insertSystemField" />
                                            )
        SELECT AAA.BASE_YM
             , AAA.BASE_YM       AS PERF_YM
             , AAA.BASE_YM       AS OJ_DSB_YM
             , #{coCd}           AS CO_CD          -- 고정
             , AAA.OG_TP_CD      AS OG_TP_CD
              ,AAA.PRTNR_NO      AS PRTNR_NO
             , #{feeCd}          AS FEE_CD
             , NVL(#{dtaCrtFeeCd}, #{feeCd})    AS DTA_CRT_FEE_CD
             , '01'              AS FEE_DSB_MTHD_CD -- 수수료지급방식코드
             , #{smlCrtTpCd}     AS SML_CRT_TP_CD
             , AAA.FEE_CALC_AMT  AS FEE_CALC_AMT
             , #{fnlFeeYn}       AS FNL_FEE_YN
        <include refid="COMMON.insertSystemFieldValue" />
          FROM (SELECT AA.BASE_YM
                     , AA.OG_TP_CD
                     , AA.PRTNR_NO
                     , TRUNC(
                          CASE
                              WHEN AA.TXT_BIGO = 'A' THEN AA.CNT_BS_UNDER * 4000 + CNT_BS_OVER * 2500
                              WHEN AA.TXT_BIGO = 'B' THEN AA.CNT_BS_UNDER * 3800 + CNT_BS_OVER * 2200
                              WHEN AA.TXT_BIGO = 'C' THEN AA.CNT_BS_UNDER * 3500 + CNT_BS_OVER * 2000
                              WHEN AA.TXT_BIGO = 'D' THEN AA.CNT_BS_UNDER * 2800 + CNT_BS_OVER * 1500
                              WHEN AA.TXT_BIGO = 'E' THEN AA.CNT_BS_UNDER * 2000 + CNT_BS_OVER * 900
                              WHEN AA.TXT_BIGO = 'F' THEN AA.CNT_BS_UNDER * 1200 + CNT_BS_OVER * 700
                              WHEN AA.TXT_BIGO = 'G' THEN AA.CNT_BS_UNDER * 500 + CNT_BS_OVER * 300
                              WHEN AA.TXT_BIGO = 'H' THEN AA.CNT_BS_UNDER * 200
                              ELSE 0 END * CNT_RATE * CNT_RATE_JIJUM
                  ) AS FEE_CALC_AMT
                  FROM (SELECT A.BASE_YM
                             , A.OG_TP_CD
                             , A.PRTNR_NO
                             , NVL(B.PERF_VAL, 0)                                                                            AS CNT_SUNZEON    -- 순증건수
                             , NVL(C.PERF_VAL, 0)                                                                            AS CNT_FSVST      -- 허위방문건수
                             , NVL(D.PERF_VAL, 0)                                                                            AS CNT_BS         -- BS건수
                             , NVL(E.PERF_VAL, 0)                                                                            AS CNT_PAN        -- 가전(판매)건수
                             , MONTHS_BETWEEN(TO_DATE(A.BASE_YM || '01', 'YYYYMMDD'),
                                              TO_DATE(NVL(F.STRTDT,A.BASE_YM||'01'), 'YYYYMMDD')) + 1                        AS CNT_MON
                             , CASE
                                   WHEN NVL(D.PERF_VAL, 0) >= 250 THEN 250
                                   ELSE NVL(D.PERF_VAL, 0) END                                                               AS CNT_BS_UNDER
                             , CASE
                                   WHEN NVL(D.PERF_VAL, 0) >= 250 THEN NVL(D.PERF_VAL, 0) - 250
                                   ELSE 0 END                                                                                AS CNT_BS_OVER
                             , CASE
                                   WHEN NVL(E.PERF_VAL, 0) >= 20 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'A' -- 20건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 20 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'B' -- 한칸 하위
                                   WHEN NVL(E.PERF_VAL, 0) >= 15 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'B' -- 15건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 15 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'C' -- 한칸 하위
                                   WHEN NVL(E.PERF_VAL, 0) >= 12 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'C' -- 12건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 12 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'D' -- 한칸 하위
                                   WHEN NVL(E.PERF_VAL, 0) >= 10 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'D' -- 10건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 10 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'E' -- 한칸 하위
                                   WHEN NVL(E.PERF_VAL, 0) >= 8 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'E' -- 8건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 8 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'F' -- 한칸 하위
                                   WHEN NVL(E.PERF_VAL, 0) >= 6 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'F' -- 6건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 6 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'G' -- 한칸 하위
                                   WHEN NVL(E.PERF_VAL, 0) >= 4 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'G' -- 4건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 4 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'H' -- 한칸 하위
                                   WHEN NVL(E.PERF_VAL, 0) >= 2 AND NVL(C.PERF_VAL, 0) <![CDATA[<]]> 1 THEN 'H' -- 2건 이상
                                   WHEN NVL(E.PERF_VAL, 0) >= 2 AND NVL(C.PERF_VAL, 0) >= 1 THEN 'I' -- 한칸 하위
                                   ELSE 'I' END                                                                              AS TXT_BIGO
                             ,CASE WHEN NVL(B.PERF_VAL, 0) >= 2 THEN 1.1
                                   WHEN NVL(B.PERF_VAL, 0) >= 0 THEN 1
                                   WHEN NVL(B.PERF_VAL, 0) >= -2 THEN 0.9
                                   ELSE 0.8 END                                                                                            AS CNT_RATE
                             , CASE
                                   WHEN NVL(D.PERF_VAL, 0) >= 120 THEN 0.7
                                   ELSE 1 END                                                                                AS CNT_RATE_JIJUM -- 지점장 전용 추가 RATE
                          FROM TB_OGBS_MM_PRTNR_IZ A /* M조직 기본   */
                               LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL B
                                               ON A.BASE_YM = B.BASE_YM
                                                   AND  #{mmAcuPerfAgrgCrtDvCd} = B.MM_ACU_PERF_AGRG_CRT_DV_CD
                                                   AND A.OG_TP_CD = B.OG_TP_CD
                                                   AND A.PRTNR_NO = B.PRTNR_NO
                                                   AND 'W02P00113' = B.PERF_ATC_CD -- 순증
                                                   AND '0' = B.PERF_DV_CD -- 고정 개인실적
                               LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL C
                                               ON A.BASE_YM = C.BASE_YM
                                                   AND  #{mmAcuPerfAgrgCrtDvCd} = C.MM_ACU_PERF_AGRG_CRT_DV_CD
                                                   AND A.OG_TP_CD = C.OG_TP_CD
                                                   AND A.PRTNR_NO = C.PRTNR_NO
                                                   AND 'W02P00097' = C.PERF_ATC_CD -- 허위방문
                                                   AND '0' = C.PERF_DV_CD -- 고정 개인실적
                               LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL D
                                               ON A.BASE_YM = D.BASE_YM
                                                   AND  #{mmAcuPerfAgrgCrtDvCd} = D.MM_ACU_PERF_AGRG_CRT_DV_CD
                                                   AND A.OG_TP_CD = D.OG_TP_CD
                                                   AND A.PRTNR_NO = D.PRTNR_NO
                                                   AND 'W02P00132' = D.PERF_ATC_CD -- 고정 BS건수
                                                   AND '0' = D.PERF_DV_CD -- 고정 개인실적
                               LEFT OUTER JOIN TB_FEAM_MACUP_PERF_CL E
                                               ON A.BASE_YM = E.BASE_YM
                                                   AND  #{mmAcuPerfAgrgCrtDvCd} = E.MM_ACU_PERF_AGRG_CRT_DV_CD
                                                   AND A.OG_TP_CD = E.OG_TP_CD
                                                   AND A.PRTNR_NO = E.PRTNR_NO
                                                   AND 'W02P00002' = E.PERF_ATC_CD -- 고정 판매건수
                                                   AND '0' = E.PERF_DV_CD -- 고정 개인실적
                               LEFT OUTER JOIN (SELECT A.og_tp_Cd,A.prtnr_no ,CASE WHEN A.CV_DT IS NOT NULL THEN NVL(B.STRTDT,A.STRTDT) ELSE A.STRTDT END  AS STRTDT
                                                  FROM WSMDBS.TB_OGPS_PLAR_QLF_CH_IZ A
                                                  LEFT OUTER JOIN TB_OGPS_PLAR_QLF_CH_IZ B
                                                               ON  A.og_tp_Cd  = B.og_tp_Cd
                                                              AND  A.prtnr_no  = B.prtnr_no
                                                              AND  A.QLF_DV_CD = 3           /* BS프리매니저에서 웰스플래너로 바뀐 분들  */
                                                              AND  B.QLF_DV_CD = 6
                                                              AND  A.STRTDT = TO_CHAR(TO_DATE(B.ENDDT,'YYYYMMDD') + 1,'YYYYMMDD')
                                                              AND  B.ENDDT != '99991231'
                                                              AND NVL(B.QLF_APLC_DV_CD,'0') IN ('1','2')  -- 승격,자격해제(과거)  3 : 보류 는 제외
                                                 WHERE 1 = 1
                                                  AND A.og_tp_Cd = #{ogTpCd}                               -- 변수
                                                  AND TO_CHAR(LAST_DAY(TO_DATE(#{baseYm}||'01','YYYYMMDD') ),'YYYYMMDD' )  BETWEEN A.STRTDT AND A.ENDDT      -- 변수  기준년월 BASE_YM  = 202305
                                                  AND NVL(A.QLF_APLC_DV_CD,'0') IN ('1','2')  -- 승격,자격해제(과거)  3 : 보류 는 제외
                                               ) F
                                               ON  A.OG_TP_CD = F.OG_TP_CD AND  A.PRTNR_NO = F.PRTNR_NO
                         WHERE 1 = 1
                           AND A.BASE_YM = #{baseYm} -- 변수
                           AND A.OG_TP_CD = #{ogTpCd}   -- 변수
                         <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
                           AND A.PRTNR_NO = #{prtnrNo}
                         </if>
                           AND A.PSTN_DV_CD = '7'
                           AND A.PERF_EXCD_OJ_YN = 'N') AA) AAA
         WHERE AAA.FEE_CALC_AMT > 0
    </insert>

    <insert id="insertUniformFeesForBrmgr">
        /****
        * 유니폼 재지급 대상 기준 : 수수료 기준년월 23년 2월 ( 23년 3월 집계 및 지급 ) 인 경우
          CASE 1.
                - 유니폼 신청일자가 22년8월1일 ~ 22년8월31일 이며, 최종 확정된 경우
                - 22년9월 ~ 23년2월까지 6개월간 매월 BS 실적 건수가 50계정 이상인 경우
                - 유니폼 신청 당시 활동물품 금액의 50% 수수료 생성
                - 수수료 기준년월 퇴직(예정)자 제외
          CASE 2.
                - 유니폼 신청일자가 22년2월1일 ~ 22년2월28일 이며, 최종 확정된 경우
                - 22년3월 ~ 23년2월까지 12개월간 매월 BS 실적 건수가 50계정 이상인 경우
                - 유니폼 신청 당시 활동물품 금액의 50% 수수료 생성
                - 수수료 기준년월 퇴직(예정)자 제외
        ****/
        INSERT INTO TB_FEAM_FEE_SML_BAS (  /* 수수료시뮬레이션기본 */
               BASE_YM            /* 기준년월 */
             , PERF_YM            /* 실적년월 */
             , OJ_DSB_YM          /* 대상지급년월 */
             , CO_CD              /* 회사코드 */
             , OG_TP_CD           /* 조직유형코드 */
             , PRTNR_NO           /* 파트너번호 */
             , FEE_CD             /* 수수료코드 */
             , DTA_CRT_FEE_CD     /* 데이터생성수수료코드 */
             , FEE_DSB_MTHD_CD    /* 수수료지급방식코드 */
             , SML_CRT_TP_CD      /* 시뮬레이션생성유형코드 */
             , FEE_CALC_AMT       /* 수수료계산금액 */
             , FNL_FEE_YN         /* 최종수수료여부 */
             <include refid="COMMON.insertSystemField" />
                                            )
        SELECT MST.BASE_YM      AS BASE_YM
             , MST.BASE_YM      AS PERF_YM
             , MST.BASE_YM      AS OJ_DSB_YM
             , #{coCd}           AS CO_CD
             , MST.OG_TP_CD     AS OG_TP_CD
             , MST.PRTNR_NO     AS PRTNR_NO
             , #{feeCd}        AS FEE_CD
             , #{dtaCrtFeeCd}        AS DTA_CRT_FEE_CD
             , '01'             AS FEE_DSB_MTHD_CD -- 수수료지급방식코드
             , #{smlCrtTpCd}    AS SML_CRT_TP_CD
             , SUM(MST.FEE_AMT) AS FEE_CALC_AMT
             , #{fnlFeeYn}      AS FNL_FEE_YN
            <include refid="COMMON.insertSystemFieldValue" />
          FROM ( --CASE 1. 6개월
              SELECT AAA.BASE_YM
                   , AAA.OG_TP_CD
                   , AAA.PRTNR_NO
                   , BBB.ACTI_GDS_APLC_ID
                   , BBB.FEE_AMT
                FROM (SELECT BB.BASE_YM
                           , AA.OG_TP_CD
                           , AA.PRTNR_NO
                           , BB.CLTN_DT
                           , SUM(CASE WHEN AA.PERF_VAL >= 50 THEN 1 ELSE 0 END) AS CNT_BS
                        FROM (SELECT A.BASE_YM, A.OG_TP_CD, A.PRTNR_NO, A.PERF_VAL
                                FROM TB_FEAM_NTORP_PERF_MM_CL A
                               WHERE 1 = 1
                                 AND A.BASE_YM BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -5), 'YYYYMM') AND TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -1), 'YYYYMM') -- 지난 5개월   변수 BASE_YM
                                 AND A.FEE_TCNT_DV_CD = '02'                                                                                                                             -- 고정 지난 5개월은 2차수로 고정
                                 AND A.PERF_AGRG_CRT_DV_CD = '201'                                                                                                                       -- 수수료 집계
                                 AND A.PERF_ATC_CD = 'W02P00085'                                                                                                                         -- BS건수
                                 AND A.PERF_DV_CD = '0'                                                                                                                                  -- 개인
                               UNION ALL
                              SELECT A.BASE_YM, A.OG_TP_CD, A.PRTNR_NO, A.PERF_VAL
                                FROM TB_FEAM_MACUP_PERF_CL A                                -- 이것만 총주문!!!!!
                               WHERE 1 = 1
                                 AND A.BASE_YM = #{baseYm}          -- 당월   변수 BASE_YM
                                 AND A.MM_ACU_PERF_AGRG_CRT_DV_CD = #{mmAcuPerfAgrgCrtDvCd}
                                 AND A.PERF_ATC_CD = 'W02P00085'   -- BS건수
                                 AND A.PERF_DV_CD = '0' -- 개인
                        ) AA
                             INNER JOIN TB_OGBS_MM_PRTNR_IZ BB
                                        ON BB.BASE_YM = #{baseYm} -- 당월   변수 BASE_YM
                                            AND BB.OG_TP_CD = 'W02'
                                            AND AA.OG_TP_CD = BB.OG_TP_CD
                                            AND AA.PRTNR_NO = BB.PRTNR_NO
                                            AND BB.PSTN_DV_CD = '7'
                       WHERE 1 = 1
                         AND BB.CLTN_DT IS NULL --퇴직자 제외
                       GROUP BY BB.BASE_YM, AA.OG_TP_CD, AA.PRTNR_NO, BB.CLTN_DT
                      HAVING SUM(CASE WHEN AA.PERF_VAL >= 50 THEN 1 ELSE 0 END) = 6 --6개월간 매월 bs 50건 이상
                ) AAA -- 6개월 BS 활동 만족
                   , (SELECT A.ACTI_GDS_APLC_ID -- 신청번호
                           , A.OG_TP_CD
                           , A.PRTNR_NO
                           , A.ACTI_GDS_CD
                           , A.ACTI_GDS_SN
                           , TRUNC(B.ACTI_GDS_AMT * A.APLC_QTY * 0.5) AS FEE_AMT
                        FROM TB_PSGA_ACTI_GDS_APLC_IZ A -- 활동물품신청내역
                             INNER JOIN TB_PSGA_ACTI_GDS_BAS B
                                        ON A.OG_TP_CD = B.OG_TP_CD
                                            AND A.ACTI_GDS_CD = B.ACTI_GDS_CD
                                            AND A.ACTI_GDS_SN = B.ACTI_GDS_SN
                       WHERE 1 = 1
                         AND A.ACTI_GDS_APLC_ID IN (SELECT DISTINCT AA.ACTI_GDS_APLC_ID
                                                      FROM (SELECT A.ACTI_GDS_APLC_ID
                                                                 , MAX(A.APLC_DT)               AS APLC_DT
                                                                 , MAX(A.ACTI_GDS_APLC_STAT_CD) AS ACTI_GDS_APLC_STAT_CD
                                                              FROM TB_PSGA_ACTI_GDS_APLC_STAT_IZ A
                                                             WHERE 1 = 1
                                                             GROUP BY A.ACTI_GDS_APLC_ID
                                                            HAVING MAX(A.ACTI_GDS_APLC_STAT_CD) = '01') AA
                                                           INNER JOIN (SELECT DISTINCT ACTI_GDS_APLC_ID FROM TB_PSGA_ACTI_GDS_DDTN_IZ) BB -- 공제 이력 존재
                                                                      ON AA.ACTI_GDS_APLC_ID = BB.ACTI_GDS_APLC_ID
                                                     WHERE 1 = 1
                                                       AND AA.APLC_DT LIKE
                                                           TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -6), 'YYYYMM') ||
                                                           '%' -- 당월   변수 BASE_YM
                       ) /* 6개월전 신청  */
                ) BBB -- 6개월전 유니폼 신청
               WHERE 1 = 1
                 AND AAA.OG_TP_CD = BBB.OG_TP_CD
                 AND AAA.PRTNR_NO = BBB.PRTNR_NO
		        <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
	             AND AAA.PRTNR_NO = #{prtnrNo}
		        </if>
               UNION ALL
              SELECT AAA.BASE_YM --CASE 2. 12개월
                   , AAA.OG_TP_CD
                   , AAA.PRTNR_NO
                   , BBB.ACTI_GDS_APLC_ID
                   , BBB.FEE_AMT
                FROM (SELECT BB.BASE_YM
                           , AA.OG_TP_CD
                           , AA.PRTNR_NO
                           , BB.CLTN_DT
                           , SUM(CASE WHEN AA.PERF_VAL >= 50 THEN 1 ELSE 0 END) AS CNT_BS
                        FROM (SELECT A.BASE_YM, A.OG_TP_CD, A.PRTNR_NO, A.PERF_VAL
                                FROM TB_FEAM_NTORP_PERF_MM_CL A
                               WHERE 1 = 1
                                 AND A.BASE_YM BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -11), 'YYYYMM') AND TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -1), 'YYYYMM') -- 지난 11개월   변수 BASE_YM
                                 AND A.FEE_TCNT_DV_CD = '02'                                                                                                                              -- 고정 지난 5개월은 2차수로 고정
                                 AND A.PERF_AGRG_CRT_DV_CD = '201'                                                                                                                        -- 수수료 집계
                                 AND A.PERF_ATC_CD = 'W02P00085'                                                                                                                          -- BS건수
                                 AND A.PERF_DV_CD = '0'                                                                                                                                   -- 개인
                               UNION ALL
                              SELECT A.BASE_YM, A.OG_TP_CD, A.PRTNR_NO, A.PERF_VAL
                                FROM TB_FEAM_MACUP_PERF_CL A                                -- 이것만 총주문!!!!!
                               WHERE 1 = 1
                                 AND A.BASE_YM = #{baseYm}          -- 당월   변수 BASE_YM
                                 AND A.MM_ACU_PERF_AGRG_CRT_DV_CD = #{mmAcuPerfAgrgCrtDvCd}
                                 AND A.PERF_ATC_CD = 'W02P00085'   -- BS건수
                                 AND A.PERF_DV_CD = '0' -- 개인
                        ) AA
                             INNER JOIN TB_OGBS_MM_PRTNR_IZ BB
                                        ON BB.BASE_YM = #{baseYm} -- 당월   변수 BASE_YM
                                            AND BB.OG_TP_CD = 'W02'
                                            AND AA.OG_TP_CD = BB.OG_TP_CD
                                            AND AA.PRTNR_NO = BB.PRTNR_NO
                                            AND BB.PSTN_DV_CD = '7'
                       WHERE 1 = 1
                         AND BB.CLTN_DT IS NULL --퇴직자 제외
                       GROUP BY BB.BASE_YM, AA.OG_TP_CD, AA.PRTNR_NO, BB.CLTN_DT
                      HAVING SUM(CASE WHEN AA.PERF_VAL >= 50 THEN 1 ELSE 0 END) = 12 --6개월간 매월 bs 50건 이상
                ) AAA -- 12개월 BS 활동 만족
                   , (SELECT A.ACTI_GDS_APLC_ID -- 신청번호
                           , A.OG_TP_CD
                           , A.PRTNR_NO
                           , A.ACTI_GDS_CD
                           , A.ACTI_GDS_SN
                           ,
                        (B.ACTI_GDS_AMT * A.APLC_QTY) - TRUNC(B.ACTI_GDS_AMT * A.APLC_QTY * 0.5) AS FEE_AMT /* 12개월차는 잔액  */
                        FROM TB_PSGA_ACTI_GDS_APLC_IZ A -- 활동물품신청내역
                             INNER JOIN TB_PSGA_ACTI_GDS_BAS B
                                        ON A.OG_TP_CD = B.OG_TP_CD
                                            AND A.ACTI_GDS_CD = B.ACTI_GDS_CD
                                            AND A.ACTI_GDS_SN = B.ACTI_GDS_SN
                       WHERE 1 = 1
                         AND A.ACTI_GDS_APLC_ID IN (SELECT DISTINCT AA.ACTI_GDS_APLC_ID
                                                      FROM (SELECT A.ACTI_GDS_APLC_ID
                                                                 , MAX(A.APLC_DT)               AS APLC_DT
                                                                 , MAX(A.ACTI_GDS_APLC_STAT_CD) AS ACTI_GDS_APLC_STAT_CD
                                                              FROM TB_PSGA_ACTI_GDS_APLC_STAT_IZ A
                                                             WHERE 1 = 1
                                                             GROUP BY A.ACTI_GDS_APLC_ID
                                                            HAVING MAX(A.ACTI_GDS_APLC_STAT_CD) = '01') AA
                                                           INNER JOIN (SELECT DISTINCT ACTI_GDS_APLC_ID FROM TB_PSGA_ACTI_GDS_DDTN_IZ) BB -- 공제 이력 존재
                                                                      ON AA.ACTI_GDS_APLC_ID = BB.ACTI_GDS_APLC_ID
                                                     WHERE 1 = 1
                                                       AND AA.APLC_DT LIKE
                                                           TO_CHAR(ADD_MONTHS(TO_DATE(#{baseYm}, 'YYYYMM'), -12), 'YYYYMM') ||
                                                           '%' -- 당월   변수 BASE_YM
                       ) /* 12개월전 신청  */
                ) BBB -- 12개월전 유니폼 신청
               WHERE 1 = 1
                 AND AAA.OG_TP_CD = BBB.OG_TP_CD
                 AND AAA.PRTNR_NO = BBB.PRTNR_NO
		        <if test="@MybatisUtils@isNotEmpty(prtnrNo)">
	             AND AAA.PRTNR_NO = #{prtnrNo}
		        </if>
                 ) MST
         WHERE 1 = 1
         GROUP BY MST.BASE_YM, MST.OG_TP_CD, MST.PRTNR_NO
    </insert>

    <insert id="insertManagerLifeAlncFee4">
    /* 2024.01 이후 조직상조 수수료 (계약단위) 계산 SQL (W020126, 7) */
    INSERT INTO TB_FEAM_FEE_SML_CNTR_DTL_IZ(
                   BASE_YM           /* 기준년월 */
                 , PERF_YM           /* 실적년월 */
                 , OJ_DSB_YM         /* 대상지급년월 */
                 , CO_CD             /* 회사코드 */
                 , OG_TP_CD          /* 조직유형코드 */
                 , PRTNR_NO          /* 파트너번호 */
                 , FEE_CD            /* 수수료코드 */
                 , DTA_CRT_FEE_CD    /* 데이터생성수수료코드 */
                 , SML_CRT_TP_CD    /* 시뮬레이션생성유형코드 */
                 , CNTR_NO           /* 계약번호 */
                 , CNTR_SN           /* 계약일련번호 */
                 , FEE_CALC_AMT      /* 수수료계산금액 */
             <include refid="COMMON.insertSystemField" />
             )
    SELECT MST.BASE_YM
             , MST.PERF_YM
             , MST.OJ_DSB_YM
             , #{coCd}          AS CO_CD
             , MST.OG_TP_CD
             , MST.PRTNR_NO
             , #{feeCd}         AS FEE_CD
             , #{dtaCrtFeeCd}   AS DTA_CRT_FEE_CD
             , #{smlCrtTpCd}    AS SML_CRT_TP_CD
             , MST.CNTR_NO
             , MST.CNTR_SN
             , MST.FEE_CALC_AMT
            <include refid="COMMON.insertSystemFieldValue" />
      FROM (
            SELECT A.BASE_YM
                   , A.BASE_YM      AS PERF_YM
                   , A.BASE_YM      AS OJ_DSB_YM
                   , A.OG_TP_CD
                   , A.PRTNR_NO
                   , B.CNTR_NO
                   , B.CNTR_SN
                   , (NVL(B.PRE_CNT, 0) * 40000 + NVL(B.NXT_CNT, 0) * 30000) AS FEE_CALC_AMT
               FROM TB_OGBS_MM_PRTNR_IZ A
               LEFT OUTER JOIN (
                     SELECT M.FEE_DSB_YM BASE_YM
                            ,M.OG_TP_CD
                            ,M.CNTR_NO
                            ,M.CNTR_SN
                            ,M.BRMGR_PRTNR_NO PRTNR_NO
                            ,SUM(CASE WHEN SUBSTR(M.CNTR_DT, 1, 6) <![CDATA[>=]]> '202401' THEN 1 ELSE 0 END) NXT_CNT
                            ,SUM(CASE WHEN SUBSTR(M.CNTR_DT, 1, 6) <![CDATA[<]]> '202401' THEN 1 ELSE 0 END) PRE_CNT
                       FROM TB_IFIN_LIF_ALNC_FEE_CNTR_IZ M
                      WHERE M.FEE_DSB_YM = #{baseYm}
                        AND M.ET_CNFM_DV_CD = '01' /* 예상 */
                        AND NVL(M.CAN_DT,0) = 0    /* 취소X */
                        AND M.LIF_CNTR_STAT_CD = 0 /* 수수료 */
                        AND M.OG_TP_CD = 'W02' /* M영업 조직 */
                        AND M.DTA_DL_YN = 'N'
                        AND M.PRTNR_NO != M.BRMGR_PRTNR_NO /* 본인 대상 제외 */
                        AND M.LIF_CNTR_OC_TN = 1
                      GROUP BY M.FEE_DSB_YM, M.OG_TP_CD, M.BRMGR_PRTNR_NO, M.CNTR_NO, M.CNTR_SN
                    ) B
                 ON (A.BASE_YM = B.BASE_YM
                    AND A.OG_TP_CD = B.OG_TP_CD
                    AND A.PRTNR_NO = B.PRTNR_NO)
              WHERE 1 = 1
                AND A.BASE_YM = #{baseYm} -- 변수
                AND A.PSTN_DV_CD = '7'
                AND A.OG_TP_CD = 'W02'
            ) MST
      WHERE 1 = 1
        AND MST.FEE_CALC_AMT <![CDATA[>]]> 0
    </insert>

    <insert id="insertPlarBrmgrSettleFeeRedf">

    </insert>

    <insert id="insertPlarSpmtEncrgRedf">

    </insert>

    <insert id="insertBrmgrOgMngtFeeRedfForApyTn3">

    </insert>

    <insert id="insertBrmgrOgMngtFeeRedfForApyTn4">

    </insert>

</mapper>
