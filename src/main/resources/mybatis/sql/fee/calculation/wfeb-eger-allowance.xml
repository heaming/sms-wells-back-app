<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.fee.calculation.mapper.WfebEgerAllowanceMapper">

    <select id='selectEngineerAllowances' resultType="com.kyowon.sms.wells.web.fee.calculation.dto.WfebEgerAllowanceDto$SearchEngineerRes">
        <include refid="COMMON.dataAuthOrgWithClause">
            <property name="paramOgTpCd" value="'W06'"/>
            <property name="paramBaseYm" value="#{perfYm}"/>
        </include>
        SELECT OG_ID    /*조직ID*/
             , OG_NM    /*조직명*/
             , OG_CD    /*조직코드*/
             , BASE_YM  /*기준년월*/
             , PRTNR_KNM    /*성명*/
             , PRTNR_NO     /*파트너번호*/
             , HIR_FOM_CD   /*고용형태코드*/
             , PSTN_DV_CD   /*직급구분코드*/
             , CASE WHEN PSTN_DV_CD IN ('86', '87', '88') THEN F_CMZ_CD_NM(#{session.tenantId}, 'SAP_PSTN_DV_CD', PSTN_DV_CD)
                    ELSE F_CMZ_CD_NM(#{session.tenantId}, 'HIR_FOM_CD', HIR_FOM_CD)
               END AS PSTN_DV_NM /* 직급구분코드명 */
             , RSB_DV_CD    /*직책구분코드*/
             , NVL(PERF_W06P00001, 0) AS PERF_W06P00001	/*설치작업 건수*/
             , NVL(PERF_W06P00004, 0) AS PERF_W06P00004	/*BS작업 건수*/
             , NVL(PERF_W06P00005, 0) AS PERF_W06P00005	/*AS작업 건수*/
             , NVL(PERF_W06P00006, 0) AS PERF_W06P00006	/*동행작업 건수*/
             , NVL(PERF_W06P00001, 0) + NVL(PERF_W06P00004, 0) + NVL(PERF_W06P00005, 0) + NVL(PERF_W06P00006, 0) AS TOT_PERF_VISIT	/*방문처리실적 합계*/
             , NVL(PERF_W06P00007, 0) AS PERF_W06P00007	/*책임지역 건수*/
             , NVL(PERF_W06P00008, 0) AS PERF_W06P00008	/*스케일링 건수*/
             , NVL(PERF_W06P00009, 0) AS PERF_W06P00009	/*일반수리 건수*/
             , NVL(PERF_W06P00010, 0) AS PERF_W06P00010	/*경수리 건수*/
             , NVL(PERF_W06P00025, 0) AS PERF_W06P00025	/*중수리 건수*/
             , NVL(PERF_W06P00015, 0) AS PERF_W06P00015	/*아웃소싱 건수*/
             , NVL(PERF_W06P00018, 0) AS PERF_W06P00018   /*토요근무건수*/
             , NVL(PERF_W06P00008, 0) + NVL(PERF_W06P00009, 0) + NVL(PERF_W06P00010, 0) + NVL(PERF_W06P00025, 0) + NVL(PERF_W06P00015, 0) AS TOT_PERF_RPR	/*입고수리실적 합계*/
             , NVL(FEE_W060001, 0) AS FEE_W060001	/*설지작업 실적수당*/
             , NVL(FEE_W060002, 0) AS FEE_W060002	/*설치작업 급지수당*/
             , NVL(FEE_W060003, 0) AS FEE_W060003	/*B/S작업 실적수당*/
             , NVL(FEE_W060004, 0) AS FEE_W060004	/*B/S작업 급지수당*/
             , NVL(FEE_W060005, 0) AS FEE_W060005	/*A/S 실적수당*/
             , NVL(FEE_W060006, 0) AS FEE_W060006	/*A/S 급지수당*/
             , NVL(FEE_W060007, 0) AS FEE_W060007 	/*동행처리 실적수당*/
             , NVL(FEE_W060008, 0) AS FEE_W060008	/*동행처리 급지수당*/
             , NVL(FEE_W060001, 0) + NVL(FEE_W060003, 0) + NVL(FEE_W060005, 0) + NVL(FEE_W060007, 0) AS TOT_FEE_VISIT	/*방문처리실적 수당 합계*/
             , NVL(FEE_W060002, 0) + NVL(FEE_W060004, 0) + NVL(FEE_W060006, 0) + NVL(FEE_W060008, 0) AS TOT_RGLVL_FEE_VISIT	/*방문처리실적 급지수당 합계*/
             , NVL(FEE_W060009, 0) AS FEE_W060009	/*생산성인센티브*/
             , NVL(FEE_W060010, 0) AS FEE_W060010	/*스케일링 수당*/
             , NVL(FEE_W060011, 0) AS FEE_W060011	/*일반수리 수당*/
             , NVL(FEE_W060012, 0) AS FEE_W060012	/*경수리 수당*/
             , NVL(FEE_W060017, 0) AS FEE_W060017	/*중수리 수당*/
             , NVL(FEE_W060018, 0) AS FEE_W060018	/*아웃소싱 수당*/
             , NVL(FEE_W060010, 0) + NVL(FEE_W060011, 0) + NVL(FEE_W060012, 0) + NVL(FEE_W060017, 0) + NVL(FEE_W060018, 0) AS TOT_FEE_RPR	/*입고수리수당 합계*/
             , NVL(FEE_W060019, 0) AS FEE_W060019	/*지원 수당*/
             , NVL(FEE_W060020, 0) AS FEE_W060020	/*기타 수당*/
             , NVL(FEE_W060021, 0) AS FEE_W060021	/*철거/철회 수당*/
             , NVL(FEE_W060022, 0) AS FEE_W060022	/*판매권유 수당*/
             , NVL(FEE_W060023, 0) AS FEE_W060023	/*토요근무 수당*/
             , NVL(FEE_W060024, 0) AS FEE_W060024	/*휴무당직 수당*/
             , NVL(FEE_W060025, 0) AS FEE_W060025	/*강의 수당*/
             , NVL(FEE_W060026, 0) AS FEE_W060026	/*도서방문수당*/
             , NVL(FEE_W060027, 0) AS FEE_W060027	/*기술숙련수당*/
             , NVL(FEE_W060028, 0) AS FEE_W060028	/*조장 수당*/
             , NVL(FEE_W060001, 0) + NVL(FEE_W060002, 0) + NVL(FEE_W060003, 0) + NVL(FEE_W060004, 0) + NVL(FEE_W060005, 0) + NVL(FEE_W060006, 0) + NVL(FEE_W060007, 0) + NVL(FEE_W060008, 0) + NVL(FEE_W060009, 0) + NVL(FEE_W060010, 0) + NVL(FEE_W060011, 0) + NVL(FEE_W060012, 0) + NVL(FEE_W060017, 0) + NVL(FEE_W060018, 0) AS TOT_FEE	/*조정전수당합계*/
             , NVL(FEE_W060001, 0) + NVL(FEE_W060003, 0) + NVL(FEE_W060005, 0) + NVL(FEE_W060007, 0) + NVL(FEE_W060002, 0) + NVL(FEE_W060004, 0) + NVL(FEE_W060006, 0) + NVL(FEE_W060008, 0) + NVL(FEE_W060009, 0) + NVL(FEE_W060010, 0) + NVL(FEE_W060011, 0) + NVL(FEE_W060012, 0) + NVL(FEE_W060017, 0) + NVL(FEE_W060018, 0) AS TOT_AF_FEE  /*조정후수당합계*/
             , NVL(FEE_W060019, 0) + NVL(FEE_W060020, 0) + NVL(FEE_W060021, 0) + NVL(FEE_W060022, 0) + NVL(FEE_W060024, 0) + NVL(FEE_W060025, 0) + NVL(FEE_W060027, 0) + NVL(FEE_W060028, 0) + NVL(FEE_W060023, 0) + NVL(FEE_W060026, 0) AS TOT_FEE_ETC	/*부가수당합계*/
             , NVL(FEE_W060001, 0) + NVL(FEE_W060002, 0) + NVL(FEE_W060003, 0) + NVL(FEE_W060004, 0) + NVL(FEE_W060005, 0) + NVL(FEE_W060006, 0) + NVL(FEE_W060007, 0) + NVL(FEE_W060008, 0) + NVL(FEE_W060009, 0) + NVL(FEE_W060010, 0) + NVL(FEE_W060011, 0) + NVL(FEE_W060012, 0) + NVL(FEE_W060017, 0) + NVL(FEE_W060018, 0) + NVL(FEE_W060019, 0) + NVL(FEE_W060020, 0) + NVL(FEE_W060021, 0) + NVL(FEE_W060022, 0) + NVL(FEE_W060024, 0) + NVL(FEE_W060025, 0) + NVL(FEE_W060027, 0) + NVL(FEE_W060028, 0) + NVL(FEE_W060023, 0) + NVL(FEE_W060026, 0) AS DSB_OJ_AMT	/*지급대상금액*/
             , (CASE WHEN FEE_W060022 > 0 THEN FEE_W060022/5000 ELSE 0 END) AS FEE_W060022_CNT   /*판매권유수당 건수*/
             , (CASE WHEN FEE_W060024 > 0 THEN FEE_W060024/20000 ELSE 0 END) AS FEE_W060024_CNT   /*휴무당직수당 건수*/
             , (CASE WHEN FEE_W060025 > 0 THEN FEE_W060025/10000 ELSE 0 END) AS FEE_W060025_CNT  /*강의수당 건수*/
             , (CASE WHEN FEE_W060026 > 0 THEN FEE_W060026/10000 ELSE 0 END) AS FEE_W060026_CNT  /*도서방문수당 건수*/
             , (CASE WHEN FEE_W060023 > 0 THEN FEE_W060023/2000 ELSE 0 END) AS FEE_W060023_CNT  /*토요근무수당 건수*/
             , (CASE WHEN CNR_AW_CNFM_DTM IS NULL
                     THEN (CASE WHEN #{session.rsbCd} = '171' THEN 'Y'    /*센터장*/
                            ELSE 'N'
                       END)
                 ELSE 'N'
                END) AS EDIT_YN	/*수정가능여부*/
             , CASE WHEN CNR_AW_CNFM_DTM = '00000000' THEN '' ELSE CNR_AW_CNFM_DTM END AS CNR_AW_CNFM_DTM /*센터확정일시*/
             , '-' AS NOTE
        FROM (
            SELECT OG_ID
                , OG_NM
                , OG_CD
                , BASE_YM
                , PRTNR_KNM
                , PRTNR_NO
                , HIR_FOM_CD
                , PSTN_DV_CD
                , RSB_DV_CD
                , PERF_W06P00001
                , PERF_W06P00004
                , PERF_W06P00005
                , PERF_W06P00006
                , PERF_W06P00007
                , PERF_W06P00008
                , PERF_W06P00009
                , PERF_W06P00010
                , PERF_W06P00025
                , PERF_W06P00015
                , PERF_W06P00018
                , FEE_CD
                , FEE_CALC_AMT
                , CNR_AW_CNFM_DTM
            FROM (
                SELECT T3.OG_ID
                     , T3.OG_NM
                     , T1.OG_CD
                     , T1.BASE_YM
                     , T2.PRTNR_KNM
                     , T1.PRTNR_NO
                     , T2.HIR_FOM_CD
                     , T2.PSTN_DV_CD
                     , T2.RSB_DV_CD
                     , T1.PERF_ATC_CD
                     , T1.PERF_VAL
                     , T4.FEE_CD
                     , NVL(T4.FEE_CTR_CNFM_AMT, T4.FEE_CALC_AMT) AS FEE_CALC_AMT
                     , T5.CNR_AW_CNFM_DTM
                  FROM TB_FEAM_EGER_PERF_MM_CL	T1	/*엔지니어실적월마감*/
                 INNER JOIN TB_OGBS_MM_PRTNR_IZ T2	/*월파트너내역*/
                    ON T1.BASE_YM = T2.BASE_YM
                   AND T1.PERF_YM = T2.BASE_YM
                   AND T1.OG_TP_CD = T2.OG_TP_CD
                   AND T1.PRTNR_NO = T2.PRTNR_NO
                   AND T1.OG_CD = T2.OG_CD
                   AND T2.DTA_DL_YN = 'N'
                 INNER JOIN TB_OGBS_MM_OG_IZ T3	/*월조직내역*/
                    ON T2.BASE_YM = T3.BASE_YM
                   AND T2.OG_TP_CD = T3.OG_TP_CD
                   AND T2.OG_ID = T3.OG_ID
                   AND T3.DTA_DL_YN = 'N'
                   /*AND T3.OG_LEVL_DV_CD = '1'	센터*/
                   AND T3.CLO_YN = 'N'	/*조직폐쇄여부*/
                  LEFT OUTER JOIN TB_FEAM_EGER_AW_CALC_BAS T4	/*엔지니어수당기본*/
                    ON T4.DTA_DL_YN = 'N'
                   AND T1.BASE_YM = T4.BASE_YM
                   AND T1.PERF_YM = T4.PERF_YM
                   AND T1.BASE_YM = T4.OJ_DSB_YM
                   AND T1.OG_TP_CD = T4.OG_TP_CD
                   AND T1.PRTNR_NO = T4.PRTNR_NO
                   AND T1.OG_CD = T4.OG_CD
                   AND T1.CO_CD = T4.CO_CD
                   AND T1.FEE_TCNT_DV_CD = T4.FEE_TCNT_DV_CD
                   AND T4.FEE_CD IN ('W060001', 'W060002', 'W060003', 'W060004', 'W060005', 'W060006', 'W060007', 'W060008', 'W060009', 'W060010'
                            , 'W060011', 'W060012', 'W060017', 'W060018', 'W060019', 'W060020', 'W060021', 'W060022'
                            , 'W060023', 'W060024', 'W060025', 'W060026', 'W060027', 'W060028')
                   AND T4.SPMT_DSB_DV_CD = '01'
                  LEFT OUTER JOIN TB_FEAM_EGER_AW_CNFM_BAS T5	/*엔지니어수당확정기본*/
                    ON T5.DTA_DL_YN = 'N'
                   AND T1.BASE_YM = T5.BASE_YM
                   AND T1.PERF_YM = T5.PERF_YM
                   AND T1.BASE_YM = T5.OJ_DSB_YM
                   AND T1.OG_TP_CD = T5.OG_TP_CD
                   AND T1.OG_CD = T5.OG_CD
                   AND T5.CO_CD = '2000'
                 WHERE T1.DTA_DL_YN = 'N'
                   AND T1.BASE_YM = #{perfYm}
                   AND T1.PERF_YM = #{perfYm}
                   AND T1.FEE_TCNT_DV_CD = '02'
                   AND T1.PERF_AGRG_CRT_DV_CD = '601'/*실적집계생성구분코드 601-엔지니어실적*/
                   AND T1.PERF_ATC_CD IN ('W06P00001', 'W06P00004', 'W06P00005', 'W06P00006', 'W06P00007', 'W06P00008', 'W06P00009', 'W06P00010', 'W06P00025', 'W06P00015', 'W06P00018')
                   AND T1.CO_CD = '2000'
                   AND T1.OG_TP_CD = 'W06'
                   /*로그인한 사용자의 권한에 따라 하위 조직만 조회*/
                   AND EXISTS (SELECT 1
                         FROM OBJ_ORG X1
                        WHERE X1.OG_TP_CD = T3.OG_TP_CD
                          AND X1.OG_ID = T3.OG_ID)
                <if test='@MybatisUtils@isNotEmpty(prtnrNo)'>
                   AND T1.PRTNR_NO = #{prtnrNo}
                </if>
                <if test='@MybatisUtils@isNotEmpty(ogLevlDvCd1)'>
                   AND T3.OG_ID = #{ogLevlDvCd1}
                </if>
                <if test='@MybatisUtils@isEmpty(rsbDvCd)'>
                   /*조직에서 엔지니어 직책 정리되면 W0610 삭제*/
                   AND T2.RSB_DV_CD IN ('W0601', 'W0602', 'W0603', 'W0610')
                </if>
                <if test='@MybatisUtils@isNotEmpty(rsbDvCd)'>
                    <choose>
                        <when test='@MybatisUtils@equals(rsbDvCd, "W0603")'>
                           /*조직에서 엔지니어 직책 정리되면 W0610 삭제*/
                           AND T2.RSB_DV_CD IN ('W0603', 'W0610')
                        </when>
                        <otherwise>
                            AND T2.RSB_DV_CD = #{rsbDvCd}
                        </otherwise>
                    </choose>
                </if>
            )
            PIVOT
              ( SUM(PERF_VAL) FOR PERF_ATC_CD IN (
                    'W06P00001' AS PERF_W06P00001
                    , 'W06P00004' AS PERF_W06P00004
                    , 'W06P00005' AS PERF_W06P00005
                    , 'W06P00006' AS PERF_W06P00006
                    , 'W06P00007' AS PERF_W06P00007
                    , 'W06P00008' AS PERF_W06P00008
                    , 'W06P00009' AS PERF_W06P00009
                    , 'W06P00010' AS PERF_W06P00010
                    , 'W06P00025' AS PERF_W06P00025
                    , 'W06P00015' AS PERF_W06P00015
                    , 'W06P00018' AS PERF_W06P00018 )
              )
        )
        PIVOT
            ( SUM(FEE_CALC_AMT) FOR FEE_CD IN (
                'W060001' AS FEE_W060001
                , 'W060002' AS FEE_W060002
                , 'W060003' AS FEE_W060003
                , 'W060004' AS FEE_W060004
                , 'W060005' AS FEE_W060005
                , 'W060006' AS FEE_W060006
                , 'W060007' AS FEE_W060007
                , 'W060008' AS FEE_W060008
                , 'W060009' AS FEE_W060009
                , 'W060010' AS FEE_W060010
                , 'W060011' AS FEE_W060011
                , 'W060012' AS FEE_W060012
                , 'W060017' AS FEE_W060017
                , 'W060018' AS FEE_W060018
                , 'W060019' AS FEE_W060019
                , 'W060020' AS FEE_W060020
                , 'W060021' AS FEE_W060021
                , 'W060022' AS FEE_W060022
                , 'W060023' AS FEE_W060023
                , 'W060024' AS FEE_W060024
                , 'W060025' AS FEE_W060025
                , 'W060026' AS FEE_W060026
                , 'W060027' AS FEE_W060027
                , 'W060028' AS FEE_W060028
            )
        )
        ORDER BY OG_NM, PRTNR_KNM
    </select>

    <select id='selectEngineerManagerAllowances' resultType="com.kyowon.sms.wells.web.fee.calculation.dto.WfebEgerAllowanceDto$SearchEngineerManagerRes">
        <include refid="COMMON.dataAuthOrgWithClause">
            <property name="paramOgTpCd" value="'W06'"/>
            <property name="paramBaseYm" value="#{perfYm}"/>
        </include>
        SELECT OG_ID    /*조직ID*/
             , OG_NM    /*조직명*/
             , OG_CD    /*조직코드*/
             , BASE_YM  /*기준년월*/
             , PRTNR_KNM    /*파트너명*/
             , PRTNR_NO     /*파트너번호*/
             , HIR_FOM_CD   /*고용형태코드*/
             , PSTN_DV_CD   /*직급구분코드*/
             , CASE WHEN PSTN_DV_CD IN ('86', '87', '88') THEN F_CMZ_CD_NM(#{session.tenantId}, 'SAP_PSTN_DV_CD', PSTN_DV_CD)
                    ELSE F_CMZ_CD_NM(#{session.tenantId}, 'HIR_FOM_CD', HIR_FOM_CD)
               END AS PSTN_DV_NM /* 직급구분코드명 */
             , RSB_DV_CD    /*직책구분코드*/
             , NVL(FEE_W060031, 0) AS FEE_W060031  /*업적수당*/
             , NVL(FEE_W060032, 0) AS FEE_W060032  /*자격수당*/
             , NVL(FEE_W060031 + FEE_W060032, 0) AS TOT_FEE     /*수당합계*/
        FROM
           ( SELECT T3.OG_ID
                  , T3.OG_NM
                  , T1.OG_CD
                  , T1.BASE_YM
                  , T2.PRTNR_KNM
                  , T1.PRTNR_NO
                  , T2.HIR_FOM_CD
                  , T2.PSTN_DV_CD
                  , T2.RSB_DV_CD
                  , T1.FEE_CD
                  , NVL(T1.FEE_CTR_CNFM_AMT, T1.FEE_CALC_AMT) AS FEE_CALC_AMT
               FROM TB_FEAM_EGER_AW_CALC_BAS T1	/*엔지니어수당기본*/
              INNER JOIN TB_OGBS_MM_PRTNR_IZ T2	/*월파트너내역*/
                 ON T2.DTA_DL_YN = 'N'
                AND T2.BASE_YM = T1.BASE_YM
                AND T2.BASE_YM = T1.PERF_YM
                AND T2.BASE_YM = T1.OJ_DSB_YM
                AND T2.OG_TP_CD = T1.OG_TP_CD
                AND T2.PRTNR_NO = T1.PRTNR_NO
                AND T2.OG_CD = T1.OG_CD
              INNER JOIN TB_OGBS_MM_OG_IZ T3	/*월조직내역*/
                 ON T3.BASE_YM = T2.BASE_YM
                AND T3.OG_TP_CD = T2.OG_TP_CD
                AND T3.OG_ID = T2.OG_ID
                AND T3.DTA_DL_YN = 'N'
                /*AND T3.OG_LEVL_DV_CD = '1'	센터*/
                AND T3.CLO_YN = 'N'	/*조직폐쇄여부*/
              WHERE T1.DTA_DL_YN = 'N'
                AND T1.BASE_YM = #{perfYm}
                AND T1.PERF_YM = #{perfYm}
                AND T1.OJ_DSB_YM = #{perfYm}
                AND T1.OG_TP_CD = 'W06'
                AND T1.CO_CD = '2000'
                AND T1.FEE_CD IN ('W060031', 'W060032')
                AND T1.FEE_TCNT_DV_CD = '02'
                AND T1.SPMT_DSB_DV_CD = '01'
                /*로그인한 사용자의 권한에 따라 하위 조직만 조회*/
               AND EXISTS (SELECT 1
                     FROM OBJ_ORG X1
                    WHERE X1.OG_TP_CD = T3.OG_TP_CD
                      AND X1.OG_ID = T3.OG_ID)
              <if test='@MybatisUtils@isNotEmpty(prtnrNo)'>
                AND T1.PRTNR_NO = #{prtnrNo}
              </if>
              <if test='@MybatisUtils@isNotEmpty(ogLevlDvCd1)'>
                AND T3.OG_ID = #{ogLevlDvCd1}
              </if>
              <if test='@MybatisUtils@isEmpty(rsbDvCd)'>
                /*조직에서 엔지니어 직책 정리하면 W0610 삭제*/
                AND T2.RSB_DV_CD IN ('W0603', 'W0610', 'W0604')
              </if>
              <if test='@MybatisUtils@isNotEmpty(rsbDvCd)'>
                <choose>
                    <when test='@MybatisUtils@equals(rsbDvCd, "W0603")'>
                       /*조직에서 엔지니어 직책 정리되면 W0610 삭제*/
                       AND T2.RSB_DV_CD IN ('W0603', 'W0610')
                    </when>
                    <otherwise>
                        AND T2.RSB_DV_CD = #{rsbDvCd}
                    </otherwise>
                </choose>
              </if>
            )
        PIVOT
             ( SUM(FEE_CALC_AMT) FOR FEE_CD IN (
                'W060031' AS FEE_W060031
                , 'W060032' AS FEE_W060032 )
             )
        ORDER BY OG_NM, PRTNR_KNM
    </select>

    <select id="selectEgerAllowanceConfirms" resultType="com.kyowon.sms.wells.web.fee.calculation.dto.WfebEgerAllowanceDto$SearchConfirmRes">
        SELECT BASE_YM
             , OG_ID
             , OG_NM
             , OG_CD
             , CNR_AW_CNFM_DTM
             , CNFM_BTN_YN
             , COUNT(BASE_YM) OVER() AS TOT_CNT
             , COUNT(CNFM_BTN_YN) OVER() AS CNFM_BTN_CNT
          FROM
             ( SELECT A.BASE_YM
                    , C.OG_ID
                    , C.OG_NM
                    , A.OG_CD
                    , CASE WHEN B.CNR_AW_CNFM_DTM = '00000000' THEN ''
                      ELSE B.CNR_AW_CNFM_DTM END AS CNR_AW_CNFM_DTM
                    , CASE WHEN B.BASE_YM IS NOT NULL AND NVL(B.CNR_AW_CNFM_DTM, ' ') != '00000000' THEN 'Y'
                      ELSE '' END AS CNFM_BTN_YN /*과거데이터는 확정일시가 없는 것이 있기때문에 확정취소를 00000000으로 구분함*/
                 FROM
                    ( SELECT BASE_YM
                           , PERF_YM
                           , CO_CD
                           , OG_TP_CD
                           , OG_CD
                        FROM TB_FEAM_EGER_PERF_MM_CL	/*엔지니어실적월마감*/
                       WHERE DTA_DL_YN = 'N'
                         AND BASE_YM = #{perfYm}
                         AND PERF_YM = #{perfYm}
                         AND OG_TP_CD = 'W06'
                         AND FEE_TCNT_DV_CD = '02'
                         AND PERF_AGRG_CRT_DV_CD = '601'
                       GROUP BY BASE_YM, PERF_YM, CO_CD, OG_TP_CD, OG_CD
                   ) A
                LEFT OUTER JOIN
                   ( SELECT BASE_YM
                          , PERF_YM
                          , OJ_DSB_YM
                          , CO_CD
                          , OG_TP_CD
                          , OG_CD
                          , CNR_AW_CNFM_DTM
                       FROM TB_FEAM_EGER_AW_CNFM_BAS	/*엔지니어수당확정기본*/
                      WHERE DTA_DL_YN = 'N'
                        AND BASE_YM = #{perfYm}
                        AND PERF_YM = #{perfYm}
                        AND OJ_DSB_YM = #{perfYm}
                        AND OG_TP_CD = 'W06'
                      GROUP BY BASE_YM, PERF_YM, OJ_DSB_YM, CO_CD, OG_TP_CD, OG_CD, CNR_AW_CNFM_DTM
                  ) B
                 ON A.BASE_YM = B.BASE_YM
                AND A.PERF_YM = B.PERF_YM
                AND A.BASE_YM = B.OJ_DSB_YM
                AND A.CO_CD = B.CO_CD
                AND A.OG_TP_CD = B.OG_TP_CD
                AND A.OG_CD = B.OG_CD
              INNER JOIN TB_OGBS_MM_OG_IZ C 	/*월조직내역*/
                 ON A.BASE_YM = C.BASE_YM
                AND A.OG_TP_CD = C.OG_TP_CD
                AND A.OG_CD = C.OG_CD
                AND C.CLO_YN = 'N'
                AND C.DTA_DL_YN = 'N'
              WHERE 1=1
            ) T1
        ORDER BY OG_NM
    </select>

    <insert id="insertEgerAllowanceHist">
        INSERT INTO TB_FEAM_EGER_AW_CALC_HIST (
              BASE_YM           /* 기준년월 */
            , PERF_YM           /* 실적년월 */
            , OJ_DSB_YM         /* 대상지급년월 */
            , CO_CD             /* 회사코드 */
            , OG_TP_CD          /* 조직유형코드 */
            , PRTNR_NO          /* 파트너번호 */
            , OG_CD				/* 조직코드 */
            , FEE_CD            /* 수수료코드 */
            , DTA_CRT_FEE_CD    /* 데이터생성수수료코드 */
            , FEE_TCNT_DV_CD    /* 수수료차수구분코드 */
            , SPMT_DSB_DV_CD    /* 추가지급구분코드 */
            , HIST_CH_DTM       /* 이력변경일시 */
            , FEE_CALC_AMT      /* 수수료계산금액 */
            , FEE_CTR_CNFM_AMT  /* 수수료조정확정금액 */
            , FEE_CTR_RSON_CN   /* 수수료조정사유내용 */
            , FEE_CTR_OG_TP_CD  /* 수수료조정조직유형코드 */
            , FEE_CTR_PRTNR_NO  /* 수수료조정파트너번호 */
            , FEE_CALC_VARB_VAL /* 수수료계산변수값 */
            , DTA_DL_YN         /* 데이터삭제여부 */
            , FST_RGST_DTM
            , FST_RGST_USR_ID
            , FST_RGST_PRG_ID
            , FST_RGST_DEPT_ID
            , FNL_MDFC_DTM
            , FNL_MDFC_USR_ID
            , FNL_MDFC_PRG_ID
            , FNL_MDFC_DEPT_ID
        )
      SELECT  BASE_YM           /* 기준년월 */
            , PERF_YM           /* 실적년월 */
            , OJ_DSB_YM         /* 대상지급년월 */
            , CO_CD             /* 회사코드 */
            , OG_TP_CD          /* 조직유형코드 */
            , PRTNR_NO          /* 파트너번호 */
            , OG_CD				/* 조직코드 */
            , FEE_CD            /* 수수료코드 */
            , DTA_CRT_FEE_CD    /* 데이터생성수수료코드 */
            , FEE_TCNT_DV_CD    /* 수수료차수구분코드 */
            , SPMT_DSB_DV_CD    /* 추가지급구분코드 */
            , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') AS HIST_CH_DTM
            , FEE_CALC_AMT      /* 수수료계산금액 */
            , FEE_CTR_CNFM_AMT  /* 수수료조정확정금액 */
            , FEE_CTR_RSON_CN   /* 수수료조정사유내용 */
            , FEE_CTR_OG_TP_CD  /* 수수료조정조직유형코드 */
            , FEE_CTR_PRTNR_NO  /* 수수료조정파트너번호 */
            , FEE_CALC_VARB_VAL /* 수수료계산변수값 */
            , DTA_DL_YN         /* 데이터삭제여부 */
            <include refid="COMMON.insertSystemFieldValue"/>
        FROM TB_FEAM_EGER_AW_CALC_BAS
       WHERE DTA_DL_YN = 'N'
         AND BASE_YM = #{perfYm}      /* 기준년월 */
         AND PERF_YM = #{perfYm}	    /* 실적년월 */
         AND OJ_DSB_YM = #{perfYm}	/* 대상지급년월 */
         AND CO_CD = '2000'              /* 회사코드 */
         AND OG_TP_CD = 'W06'            /* 조직유형코드 */
         AND PRTNR_NO = #{prtnrNo}           /* 파트너번호 */
         AND FEE_CD IN ('W060023', 'W060024', 'W060025', 'W060026', 'W060019', 'W060020', 'W060021', 'W060022')             /* 수수료코드 */
         AND FEE_TCNT_DV_CD = '02'       /* 수수료차수구분코드 */
         AND SPMT_DSB_DV_CD = '01'       /* 추가지급구분코드 */
    </insert>

    <update id="updateEgerAllowanceControl">
        MERGE INTO TB_FEAM_EGER_AW_CALC_BAS T1  /* 엔지니어수당계산기본 */
        USING (
            SELECT #{perfYm} AS BASE_YM           /* 기준년월 */
                 , #{perfYm} AS PERF_YM           /* 실적년월 */
                 , #{perfYm} AS OJ_DSB_YM         /* 대상지급년월 */
                 , '2000' AS CO_CD             /* 회사코드 */
                 , 'W06' AS OG_TP_CD          /* 조직유형코드 */
                 , #{prtnrNo} AS PRTNR_NO          /* 파트너번호 */
                 , #{ogCd} AS OG_CD
                 , #{feeCd} AS FEE_CD            /* 수수료코드 */
                 , #{feeCd} AS DTA_CRT_FEE_CD   /*데이터생성수수료코드*/
                 , '02' AS FEE_TCNT_DV_CD    /* 수수료차수구분코드 */
                 , #{feeAmt} AS FEE_CALC_AMT      /* 수수료계산금액 */
                 , NVL(#{feeCtrCnfmAmt}, #{feeAmt}) AS FEE_CTR_CNFM_AMT  /* 수수료조정확정금액 */
                 , '엔지니어 수당 조정' AS FEE_CTR_RSON_CN   /* 수수료조정사유내용 */
                 , 'N' AS FNL_FEE_YN        /* 최종수수료여부 */
                 , 'N' AS DTA_DL_YN         /* 데이터삭제여부 */
                 , '01' AS SPMT_DSB_DV_CD /* 추가지급여부 */
              FROM DUAL
        ) T2
        ON (T1.BASE_YM = T2.BASE_YM           /* 기준년월 */
        AND T1.PERF_YM = T2.PERF_YM           /* 실적년월 */
        AND T1.OJ_DSB_YM = T2.OJ_DSB_YM         /* 대상지급년월 */
        AND T1.CO_CD = T2.CO_CD             /* 회사코드 */
        AND T1.OG_TP_CD = T2.OG_TP_CD          /* 조직유형코드 */
        AND T1.PRTNR_NO = T2.PRTNR_NO          /* 파트너번호 */
        AND T1.OG_CD = T2.OG_CD	/*조직코드*/
        AND T1.FEE_CD = T2.FEE_CD            /* 수수료코드 */
        AND T1.FEE_TCNT_DV_CD = T2.FEE_TCNT_DV_CD    /* 수수료차수구분코드 */
        )
        WHEN MATCHED THEN
        UPDATE
             SET DTA_CRT_FEE_CD = T2.DTA_CRT_FEE_CD
               , FEE_CALC_AMT = T2.FEE_CALC_AMT
               , FEE_CTR_CNFM_AMT = T2.FEE_CTR_CNFM_AMT
               , FEE_CTR_RSON_CN = T2.FEE_CTR_RSON_CN
               , FNL_FEE_YN = T2.FNL_FEE_YN
               , DTA_DL_YN = T2.DTA_DL_YN
                <include refid="COMMON.updateSystemField"/>
        WHEN NOT MATCHED THEN
        INSERT (
                 BASE_YM
               , PERF_YM
               , OJ_DSB_YM
               , CO_CD
               , OG_TP_CD
               , PRTNR_NO
               , OG_CD
               , FEE_CD
               , DTA_CRT_FEE_CD
               , FEE_TCNT_DV_CD
               , FEE_CALC_AMT
               , FEE_CTR_CNFM_AMT
               , FEE_CTR_RSON_CN
               , FNL_FEE_YN
               , DTA_DL_YN
               , SPMT_DSB_DV_CD
               <include refid="COMMON.insertSystemField" />
        ) VALUES (
                 T2.BASE_YM
               , T2.PERF_YM
               , T2.OJ_DSB_YM
               , T2.CO_CD
               , T2.OG_TP_CD
               , T2.PRTNR_NO
               , T2.OG_CD
               , T2.FEE_CD
               , T2.DTA_CRT_FEE_CD
               , T2.FEE_TCNT_DV_CD
               , T2.FEE_CALC_AMT
               , T2.FEE_CTR_CNFM_AMT
               , T2.FEE_CTR_RSON_CN
               , T2.FNL_FEE_YN
               , T2.DTA_DL_YN
               , T2.SPMT_DSB_DV_CD
                <include refid="COMMON.insertSystemFieldValue" />
        )
    </update>

    <select id="selectConfirmYnCheck" resultType="int">
        SELECT COUNT(BASE_YM) AS CNT
          FROM TB_FEAM_EGER_AW_CNFM_BAS
         WHERE DTA_DL_YN = 'N'
           AND BASE_YM = #{baseYm}
           AND PERF_YM = #{baseYm}
           AND OJ_DSB_YM = #{baseYm}
           AND CO_CD = '2000'
           AND OG_TP_CD = 'W06'
           AND OG_CD = #{ogCd}
           AND CNR_AW_CNFM_DTM IS NOT NULL
           AND CNR_AW_CNFM_DTM != '00000000'  /*과거데이터가 확정되었는데 NULL인경우가 있어서 확정취소는 00000000 으로 구분함*/
        <if test='@MybatisUtils@isNotEmpty(hdof) and @MybatisUtils@equals(hdof, "Y")'>
           AND HDOF_AW_CNFM_DTM IS NOT NULL
        </if>
    </select>

    <select id="selectCurrentSchd" resultType="com.kyowon.sms.wells.web.fee.calculation.dto.WfebEgerAllowanceDto$SearchSchdRes">
        SELECT CASE WHEN COUNT(BASE_YM) <![CDATA[>]]> 0 THEN 'START'
               ELSE 'END'
               END AS FEE_SCHD_LV_CD
          FROM TB_FEAM_FEE_SCHD_BAS T1	/*수수료일정기본*/
         INNER JOIN TB_FEAM_FEE_SCHD_LV_DTL T2	/*수수료일정단계상세*/
            ON T1.FEE_SCHD_ID = T2.FEE_SCHD_ID
         WHERE T1.DTA_DL_YN = 'N'
           AND T1.BASE_YM = #{baseYm}
           AND T1.FEE_SCHD_TP_CD = '601'
           AND T1.FEE_TCNT_DV_CD = '02'
           AND T1.OG_TP_CD = 'W06'
           AND T1.FEE_SCHD_STAT_CD = '03'	/*수수료일정상태코드 03-진행중*/
           AND T2.FEE_SCHD_LV_STAT_CD = '02'	/*수수료일정단계상태코드 02-진행중*/
           AND T2.FEE_SCHD_LV_CD = 'W0603'  /*W0603-수당조정*/
    </select>

    <insert id="insertEgerAllowanceConfirm">
        MERGE INTO TB_FEAM_EGER_AW_CNFM_BAS T1  /* 엔지니어수당확정기본 */
        USING (
            SELECT #{baseYm} AS BASE_YM           /* 기준년월 */
                 , #{baseYm} AS PERF_YM           /* 실적년월 */
                 , #{baseYm} AS OJ_DSB_YM         /* 대상지급년월 */
                 , '2000' AS CO_CD             /* 회사코드 */
                 , 'W06' AS OG_TP_CD          /* 조직유형코드 */
				 , #{ogCd} AS OG_CD		/*조직코드*/
                 , 'N' AS DTA_DL_YN         /* 데이터삭제여부 */
              FROM DUAL
        ) T2
        ON (T1.BASE_YM = T2.BASE_YM           /* 기준년월 */
        AND T1.PERF_YM = T2.PERF_YM           /* 실적년월 */
        AND T1.OJ_DSB_YM = T2.OJ_DSB_YM         /* 대상지급년월 */
        AND T1.CO_CD = T2.CO_CD             /* 회사코드 */
        AND T1.OG_TP_CD = T2.OG_TP_CD          /* 조직유형코드 */
		AND T1.OG_CD = T2.OG_CD	/*조직코드*/
        )
        WHEN MATCHED THEN
        UPDATE
             SET CNR_AW_CNFM_DTM = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
                <include refid="COMMON.updateSystemField"/>
        WHEN NOT MATCHED THEN
        INSERT (
                 BASE_YM
				 , PERF_YM
				 , OJ_DSB_YM
				 , CO_CD
				 , OG_TP_CD
				 , OG_CD
				 , CNR_AW_CNFM_DTM
				 , DTA_DL_YN         /* 데이터삭제여부 */
               <include refid="COMMON.insertSystemField" />
        ) VALUES (
                 T2.BASE_YM
               , T2.PERF_YM
               , T2.OJ_DSB_YM
               , T2.CO_CD
               , T2.OG_TP_CD
			   , T2.OG_CD
			   , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
               , T2.DTA_DL_YN
                <include refid="COMMON.insertSystemFieldValue" />
        )
    </insert>

    <update id="updateEgerAllowanceConfirm">
        MERGE INTO TB_FEAM_EGER_AW_CNFM_BAS
             USING DUAL
                ON (BASE_YM = #{baseYm}
					AND PERF_YM = #{baseYm}
					AND OJ_DSB_YM = #{baseYm}
					AND CO_CD = '2000'
					AND OG_TP_CD = 'W06'
					AND DTA_DL_YN = 'N'
				)
        WHEN MATCHED THEN
             UPDATE SET HDOF_AW_CNFM_DTM = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
                  <include refid="COMMON.updateSystemField"/>
        WHEN NOT MATCHED THEN
             INSERT
                  ( BASE_YM
					, PERF_YM
					, OJ_DSB_YM
					, CO_CD
					, OG_TP_CD
					, OG_CD
					, HDOF_AW_CNFM_DTM
					, DTA_DL_YN
                  <include refid="COMMON.insertSystemField"/>
                  ) VALUES
                  ( #{baseYm}
					, #{baseYm}
					, #{baseYm}
					, '2000'
					, 'W06'
					, #{ogCd}
					, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
					, 'N'
                  <include refid="COMMON.insertSystemFieldValue"/>
                  )
    </update>

    <update id="updateEgerAllowanceConfirmCancel">
        UPDATE TB_FEAM_EGER_AW_CNFM_BAS
           SET CNR_AW_CNFM_DTM = '00000000'
               <include refid="COMMON.updateSystemField"/>
         WHERE 1=1
           AND BASE_YM = #{baseYm}
           AND PERF_YM = #{baseYm}
           AND OJ_DSB_YM = #{baseYm}
           AND CO_CD = '2000'
           AND OG_TP_CD = 'W06'
           AND OG_CD = #{ogCd}
           AND DTA_DL_YN = 'N'
    </update>

    <select id="selectEngineerSchedule" resultType="com.kyowon.sms.wells.web.fee.calculation.dto.WfebEgerAllowanceDto$SearchSchdRes">
        SELECT CASE WHEN COUNT(BASE_YM) <![CDATA[>]]> 0 THEN 'START'
               ELSE 'END'
               END AS FEE_SCHD_LV_CD
          FROM TB_FEAM_FEE_SCHD_BAS T1	/*수수료일정기본*/
         INNER JOIN TB_FEAM_FEE_SCHD_LV_DTL T2	/*수수료일정단계상세*/
            ON T1.FEE_SCHD_ID = T2.FEE_SCHD_ID
         WHERE T1.DTA_DL_YN = 'N'
           AND T1.BASE_YM = #{perfYm}
           AND T1.FEE_SCHD_TP_CD = '602'    /*엔지니어 직책수당*/
           AND T1.FEE_TCNT_DV_CD = '02'
           AND T1.OG_TP_CD = 'W06'
           AND T1.FEE_SCHD_STAT_CD = '03'	/*수수료일정상태코드 03-진행중*/
           AND T2.FEE_SCHD_LV_STAT_CD = '02'	/*수수료일정단계상태코드 02-진행중*/
           AND T2.FEE_SCHD_LV_CD = 'W0604'  /*W0604-수당확정*/
    </select>

    <delete id="deleteEgerAllowances">

        select * from dual

    </delete>

    <insert id="insertEgerAllowances">

        select * from dual

    </insert>
</mapper>
