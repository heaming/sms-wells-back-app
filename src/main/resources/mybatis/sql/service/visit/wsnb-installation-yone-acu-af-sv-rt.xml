<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.service.visit.mapper.WsnbInstallationYOneAcuAfSvRtMapper">
    <select id="selectInstallationYOneAcuAfSvRtInfos" resultType="com.kyowon.sms.wells.web.service.visit.dto.WsnbInstallationYOneAcuAfSvRtDto$SearchRes">
        SELECT  NM
               , CASE WHEN NM = '4' THEN  NVL(ACOL1,0)
                      ELSE NVL(ACOL1,0) END AS M01
               , CASE WHEN NM = '4' THEN  NVL(ACOL2,0)
                      ELSE NVL(ACOL2,0) END AS M02
               , CASE WHEN NM = '4' THEN  NVL(ACOL3,0)
                      ELSE NVL(ACOL3,0) END AS M03
               , CASE WHEN NM = '4' THEN  NVL(ACOL4,0)
                      ELSE NVL(ACOL4,0) END AS M04
               , CASE WHEN NM = '4' THEN  NVL(ACOL5,0)
                     ELSE NVL(ACOL5,0) END AS M05
               , CASE WHEN NM = '4' THEN  NVL(ACOL6,0)
                     ELSE NVL(ACOL6,0) END AS M06
               , CASE WHEN NM = '4' THEN  NVL(ACOL7,0)
                     ELSE NVL(ACOL7,0) END AS M07
               , CASE WHEN NM = '4' THEN  NVL(ACOL8,0)
                     ELSE NVL(ACOL8,0) END AS M08
               , CASE WHEN NM = '4' THEN  NVL(ACOL9,0)
                     ELSE NVL(ACOL9,0) END AS M09
               , CASE WHEN NM = '4' THEN  NVL(ACOL10,0)
                     ELSE NVL(ACOL10,0) END AS M10
               , CASE WHEN NM = '4' THEN  NVL(ACOL11,0)
                     ELSE NVL(ACOL11,0) END AS M11
               , CASE WHEN NM = '4' THEN  NVL(ACOL12,0)
                     ELSE NVL(ACOL12,0) END AS M12
               , 0 AS MAX_VAL
               , 0 AS MIN_VAL
               , CASE WHEN NM = '4' THEN NVL(ACOL1+ACOL2+ACOL3+ACOL4+ACOL5+ACOL6+ACOL7+ACOL8+ACOL9+ACOL10+ACOL11+ACOL12,0)
                      ELSE NVL(ACOL1+ACOL2+ACOL3+ACOL4+ACOL5+ACOL6+ACOL7+ACOL8+ACOL9+ACOL10+ACOL11+ACOL12,0) END  as TCNT
               , 0 AS AVG_VAL
          FROM (
                 SELECT
                 '1' AS NM               -- 당월 기준 설치 1년 이내 제품불만 A/S 누적처리건수
        <![CDATA[
                            , CASE WHEN #{baseY}||'01' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'01','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'01') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'01','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'01') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL1
                            , CASE WHEN #{baseY}||'02' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'02','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'02') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'02','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'02') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL2
                            , CASE WHEN #{baseY}||'03' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'03','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'03') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'03','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'03') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL3
                            , CASE WHEN #{baseY}||'04' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'04','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'04') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'04','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'04') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL4
                            , CASE WHEN #{baseY}||'05' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'05','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'05') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'05','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'05') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL5
                            , CASE WHEN #{baseY}||'06' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'06','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'06') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'06','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'06') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL6
                            , CASE WHEN #{baseY}||'07' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'07','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'07') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'07','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'07') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL7
                            , CASE WHEN #{baseY}||'08' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'08','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'08') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'08','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'08') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL8
                            , CASE WHEN #{baseY}||'09' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'09','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'09') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'09','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'09') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL9
                            , CASE WHEN #{baseY}||'10' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'10','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'10') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'10','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'10') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL10
                            , CASE WHEN #{baseY}||'11' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'11','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'11') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'11','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'11') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL11
                            , CASE WHEN #{baseY}||'12' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'12','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'12') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'12','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'12') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL12
        ]]>
                   FROM (
        <![CDATA[
                            SELECT
                           /*+ use_hash(VS161 AC201 CYC_TP) */
                            SUBSTR(VS161.SV_BIZ_DCLSF_CD,0,2) AS WRK_TYP
                                 , VS161.WK_PROCS_YM AS YYYYMM
                                 , SUBSTR(VS161.IST_DT, 1, 6) AS INSTDT
                                 , VS161.CST_SV_ASN_NO
                             FROM TB_SVPD_QLTY_MNGT_AS_DTL_IZ VS161
                       INNER JOIN WSMDBS.TB_SVPD_CST_SV_EXCN_IZ AC201
                               ON VS161.CNTR_NO = AC201.CNTR_NO
                              AND VS161.CNTR_SN = AC201.CNTR_SN
                  LEFT OUTER JOIN TB_PDBS_PD_ECOM_PRP_DTL CYC_TP
                               ON CYC_TP.PD_CD = AC201.SV_PD_CD
                              AND CYC_TP.PD_EXTS_PRP_GRP_CD = 'SCHD'
                            WHERE (WK_PROCS_YM LIKE #{baseY}||'%' OR WK_PROCS_YM LIKE TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY},'YYYY'), -12),'YYYY')||'%' )
                              AND ( CYC_TP.PD_PRP_VAL03 = 0 AND CYC_TP.PD_PRP_VAL02 > 0 AND VS161.PD_GRP_CD IN ('1','2','3','4','8')  AND VS161.PD_CD NOT IN  ('WM01100154', 'WM01100035') OR (CYC_TP.PD_PRP_VAL03 > 0 AND VS161.PD_CD IN ('WM01100812' ,'WM01100813','WM01100814','WM01100815','WM02100082','WM02100197','WM02100040','WM02100042','WM02100825','WM02100826','WM02100827','WM02100828')) OR  (VS161.PD_GRP_CD IN ('6')))
                              AND ((VS161.WK_PROCS_YM < '201901' AND (VS161.IMPTA_RSON_CD IN ('1','2','3','4','5','6') OR VS161.IMPTA_RSON_CD IS NULL)) OR (VS161.WK_PROCS_YM >= '201901' AND (VS161.BAD_DV_CD IN ('100R','500R','400R','700R') OR VS161.BAD_DV_CD IS NULL)))
                              AND TRIM(VS161.PD_GRP_CD) != '11'
                              AND ((VS161.SV_PROCS_FOM_CD != '114A') OR (VS161.SV_PROCS_FOM_CD IS NULL))
        ]]>
                              <if test="@MybatisUtils@isNotEmpty(svType)">
                                AND VS161.SV_BIZ_DCLSF_CD = #{svType} /*서비스유형*/
                               </if>
                               <if test="@MybatisUtils@isNotEmpty(badDivide)">
                                AND VS161.BAD_DV_CD = #{badDivide}	/*불량구분*/
                               </if>
                                <if test='@MybatisUtils@isNotEmpty( pdGrp )'>
                                    <choose>
                                        <when test='@MybatisUtils@equals(pdGrp, "99")'>
                                            AND VS161.PD_GRP_CD IN ('5','7','8','9')	/*상품그룹*/
                                        </when>
                                        <otherwise>
                                            AND VS161.PD_GRP_CD = #{pdGrp}	/*상품그룹*/
                                        </otherwise>
                                    </choose>
                                </if>
                               <if test="@MybatisUtils@isNotEmpty(pdCd)">
                                AND VS161.PD_CD = #{pdCd} /*상세상품코드*/
                               </if>
                         )

                   UNION

                  SELECT   '2' AS NM       -- 1년(12개월)누적설치수량( 1년: 당월~11개월前설치수량의합)
        <![CDATA[
                          , CASE WHEN #{baseY}||'01' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'02','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'01') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL1
                          , CASE WHEN #{baseY}||'02' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'03','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'02') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL2
                          , CASE WHEN #{baseY}||'03' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'04','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'03') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL3
                          , CASE WHEN #{baseY}||'04' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'05','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'04') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL4
                          , CASE WHEN #{baseY}||'05' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'06','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'05') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL5
                          , CASE WHEN #{baseY}||'06' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'07','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'06') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL6
                          , CASE WHEN #{baseY}||'07' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'08','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'07') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL7
                          , CASE WHEN #{baseY}||'08' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'09','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'08') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL8
                          , CASE WHEN #{baseY}||'09' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'10','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'09') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL9
                          , CASE WHEN #{baseY}||'10' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'11','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'10') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL10
                          , CASE WHEN #{baseY}||'11' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'12','YYYYMM'),-12),'YYYYMM') AND  YYYYMM <= #{baseY}||'11') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL11
                          , CASE WHEN #{baseY}||'12' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (YYYYMM >= #{baseY}||'01' AND  YYYYMM <= #{baseY}||'12') THEN 1 ELSE 0 END),0)) ELSE 0 END AS ACOL12
        ]]>

                    FROM (
                           SELECT
                           /*+ use_hash(AC211 AC221 AC201 T2 T3) */
                                  SUBSTR(AC211.SV_BIZ_DCLSF_CD,0,2) AS WRK_TYP
                                , SUBSTR(AC221.WK_EXCN_DT,1,6) AS YYYYMM
                             FROM TB_SVPD_CST_SVAS_IST_OJ_IZ AC211
                       INNER JOIN TB_SVPD_CST_SVAS_IST_ASN_IZ AC221
                               ON AC211.CST_SV_ASN_NO = AC221.CST_SV_ASN_NO
                       INNER JOIN TB_SVPD_CST_SV_EXCN_IZ AC201
                               ON AC211.CNTR_NO = AC201.CNTR_NO
                              AND AC211.CNTR_SN = AC201.CNTR_SN
                       INNER JOIN WSMDBS.TB_PDBS_PD_BAS T2          /*상품기본*/
                               ON AC211.PD_CD = T2.PD_CD
                       INNER JOIN WSMDBS.TB_PDBS_PD_ECOM_PRP_DTL T3 /*상품각사속성상세*/
                               ON AC211.PD_CD = T3.PD_CD
                              AND T3.PD_EXTS_PRP_GRP_CD = 'PART'
                            WHERE AC211.SV_BIZ_DCLSF_CD LIKE '11'||'%'
                              AND (AC221.WK_EXCN_DT LIKE #{baseY}||'%' OR AC221.WK_EXCN_DT LIKE TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY},'YYYY'), -12),'YYYY') ||'%')
                              AND AC221.WK_CAN_RSON_CD IS NULL
                              AND AC221.WK_PRGS_STAT_CD = '20'
                              AND (T3.PD_PRP_VAL20 NOT IN ('7','8', '9','91','92','93','94','95','96','11') AND (AC211.PD_CD != 'WM01100154' AND AC211.PD_CD != 'WM01100035' ))
                                <if test='@MybatisUtils@isNotEmpty( pdGrp )'>
                                    <choose>
                                        <when test='@MybatisUtils@equals(pdGrp, "99")'>
                                            AND T3.PD_PRP_VAL20 IN ('5','7','8','9')	/*상품그룹*/
                                        </when>
                                        <otherwise>
                                            AND T3.PD_PRP_VAL20 = #{pdGrp}	/*상품그룹*/
                                        </otherwise>
                                    </choose>
                                </if>
                                <if test="@MybatisUtils@isNotEmpty(pdCd)">
                                    AND AC211.PD_CD = #{pdCd}  /*상세상품코드*/
                                </if>
                         )

                   UNION ALL

                  SELECT   '3' AS NM
                          , 0 AS ACOL1
                          , 0 AS ACOL2
                          , 0 AS ACOL3
                          , 0 AS ACOL4
                          , 0 AS ACOL5
                          , 0 AS ACOL6
                          , 0 AS ACOL7
                          , 0 AS ACOL8
                          , 0 AS ACOL9
                          , 0 AS ACOL10
                          , 0 AS ACOL11
                          , 0 AS ACOL12
                    FROM DUAL

                    UNION ALL

                    SELECT  '4' AS NM       -- 1년(12개월)누적설치수량( 1년: 당월~11개월前설치수량의합)
        <![CDATA[
                             , CASE WHEN #{baseY}||'01' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'01','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'01') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'01','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'01') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4)>=2019 THEN (CASE WHEN  PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL1
                             , CASE WHEN #{baseY}||'02' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'02','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'02') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'02','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'02') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL2
                             , CASE WHEN #{baseY}||'03' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'03','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'03') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'03','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'03') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL3
                             , CASE WHEN #{baseY}||'04' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'04','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'04') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'04','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'04') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL4
                             , CASE WHEN #{baseY}||'05' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'05','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'05') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'05','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'05') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL5
                             , CASE WHEN #{baseY}||'06' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'06','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'06') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'06','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'06') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL6
                             , CASE WHEN #{baseY}||'07' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'07','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'07') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'07','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'07') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL7
                             , CASE WHEN #{baseY}||'08' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'08','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'08') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'08','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'08') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL8
                             , CASE WHEN #{baseY}||'09' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'09','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'09') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'09','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'09') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL9
                             , CASE WHEN #{baseY}||'10' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'10','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'10') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'10','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'10') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL10
                             , CASE WHEN #{baseY}||'11' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'11','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'11') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'11','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'11') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL11
                             , CASE WHEN #{baseY}||'12' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'12','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'12') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'12','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'12') THEN (CASE WHEN SUBSTR(YYYYMM,1,4) <= 2015 THEN  27995 WHEN SUBSTR(YYYYMM,1,4) >=2016 AND SUBSTR(YYYYMM,1,4) <= 2018 THEN  26654 WHEN SUBSTR(YYYYMM,1,4) >=2019 THEN (CASE WHEN PD_GRP_CD NOT IN ('5','7','8','9', '91', '93', '95', '96') THEN 26748 WHEN PD_GRP_CD IN ('5','7','8','9', '91', '93', '95', '96') THEN 32277  ELSE 0 END) END) ELSE 0 END),0)) ELSE 0 END AS ACOL12
                   FROM (
                           SELECT
                           /*+ use_hash(VS161 AC201 CYC_TP) */
                           SUBSTR(VS161.SV_BIZ_DCLSF_CD, 0, 2) AS WRK_TYP
                                 , VS161.WK_PROCS_YM AS YYYYMM
                                 , SUBSTR(VS161.IST_DT, 1, 6) AS INSTDT
                                 , VS161.CST_SV_ASN_NO
                                 , VS161.PD_CD
                                 , VS161.PD_GRP_CD
                             FROM TB_SVPD_QLTY_MNGT_AS_DTL_IZ VS161
                       INNER JOIN TB_SVPD_CST_SV_EXCN_IZ AC201
                               ON VS161.CNTR_NO = AC201.CNTR_NO
                              AND VS161.CNTR_SN = AC201.CNTR_SN
                  LEFT OUTER JOIN TB_PDBS_PD_ECOM_PRP_DTL CYC_TP
                               ON CYC_TP.PD_CD = AC201.SV_PD_CD
                              AND CYC_TP.PD_EXTS_PRP_GRP_CD = 'SCHD'
                              WHERE (VS161.WK_PROCS_YM LIKE #{baseY}||'%' OR VS161.WK_PROCS_YM LIKE TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY},'YYYY'), -12),'YYYY')||'%' )
                                AND ( CYC_TP.PD_PRP_VAL03 = 0 AND CYC_TP.PD_PRP_VAL02 > 0 AND VS161.PD_GRP_CD IN ('1','2','3','4','8')  AND VS161.PD_CD NOT IN  ('WM01100154', 'WM01100035') OR (CYC_TP.PD_PRP_VAL03 > 0 AND VS161.PD_CD IN ('WM01100812' ,'WM01100813','WM01100814','WM01100815','WM02100082','WM02100197','WM02100040','WM02100042','WM02100825','WM02100826','WM02100827','WM02100828')) OR  (VS161.PD_GRP_CD IN ('6')))
                                AND ((VS161.WK_PROCS_YM < '201901' AND (VS161.IMPTA_RSON_CD IN ('1','2','3','4','5','6') OR VS161.IMPTA_RSON_CD IS NULL)) OR (VS161.WK_PROCS_YM  >= '201901' AND (VS161.BAD_DV_CD IN ('100R','500R','400R','700R') OR VS161.BAD_DV_CD IS NULL)))
                                AND TRIM(VS161.PD_GRP_CD) != '11'
                                AND (VS161.SV_PROCS_FOM_CD != '114A' OR VS161.SV_PROCS_FOM_CD IS NULL)
        ]]>
                                <if test="@MybatisUtils@isNotEmpty(svType)">
                                    AND VS161.SV_BIZ_DCLSF_CD = #{svType} /* 서비스유형 */
                                </if>
                                <if test="@MybatisUtils@isNotEmpty(badDivide)">
                                    AND VS161.BAD_DV_CD = #{badDivide} /* 불량구분 */
                                </if>
                                <if test='@MybatisUtils@isNotEmpty( pdGrp )'>
                                    <choose>
                                        <when test='@MybatisUtils@equals(pdGrp, "99")'>
                                            AND VS161.PD_GRP_CD IN ('5','7','8','9')	/*상품그룹*/
                                        </when>
                                        <otherwise>
                                            AND VS161.PD_GRP_CD = #{pdGrp}	/*상품그룹*/
                                        </otherwise>
                                    </choose>
                                </if>
                                <if test="@MybatisUtils@isNotEmpty(pdCd)">
                                    AND VS161.PD_CD = #{pdCd} /* 상세상품코드 */
                                </if>
                         )
                   UNION ALL

                    SELECT   '5' AS NM       -- 1년(12개월)누적설치수량( 1년: 당월~11개월前설치수량의합)
        <![CDATA[
                            , CASE WHEN #{baseY}||'01' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'01','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'01') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'01','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'01') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL1
                            , CASE WHEN #{baseY}||'02' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'02','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'02') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'02','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'02') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL2
                            , CASE WHEN #{baseY}||'03' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'03','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'03') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'03','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'03') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL3
                            , CASE WHEN #{baseY}||'04' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'04','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'04') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'04','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'04') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL4
                            , CASE WHEN #{baseY}||'05' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'05','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'05') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'05','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'05') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL5
                            , CASE WHEN #{baseY}||'06' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'06','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'06') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'06','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'06') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL6
                            , CASE WHEN #{baseY}||'07' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'07','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'07') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'07','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'07') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL7
                            , CASE WHEN #{baseY}||'08' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'08','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'08') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'08','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'08') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL8
                            , CASE WHEN #{baseY}||'09' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'09','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'09') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'09','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'09') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL9
                            , CASE WHEN #{baseY}||'10' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'10','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'10') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'10','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'10') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL10
                            , CASE WHEN #{baseY}||'11' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'11','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'11') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'11','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'11') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL11
                            , CASE WHEN #{baseY}||'12' <= TO_CHAR(SYSDATE,'YYYYMM') THEN (NVL(SUM(CASE WHEN (INSTDT >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'12','YYYYMM'),-11),'YYYYMM') AND  INSTDT <= #{baseY}||'12') AND (YYYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY}||'12','YYYYMM'),-11),'YYYYMM') AND  YYYYMM <= #{baseY}||'12') THEN PR ELSE 0 END),0)) ELSE 0 END AS ACOL12
        ]]>

                   FROM (
        <![CDATA[
                           SELECT
                            /*+ use_hash(VS161 AC201 CYC_TP) */
                           SUBSTR(VS161.SV_BIZ_DCLSF_CD, 0, 2) AS WRK_TYP
                                 , VS161.WK_PROCS_YM AS YYYYMM
                                 , SUBSTR(VS161.IST_DT, 1, 6) AS INSTDT
                                 , NVL((SELECT SUM(CASE WHEN ST163.SV_BIZ_HCLSF_CD = '1' OR ST163.SV_BIZ_HCLSF_CD = '2' OR ST163.SV_BIZ_HCLSF_CD = '3'
                                                        THEN T2.PDCT_UPRC
                                                        ELSE 0
                                                    END)
                                          FROM TB_SVST_SV_WK_OSTR_IZ ST163
                                    INNER JOIN TB_PDBS_PD_BAS T2          /*상품기본*/
                                            ON ST163.ITM_PD_CD = T2.PD_CD
                                         WHERE ST163.CNTR_NO = VS161.CNTR_NO
                                           AND ST163.CNTR_SN = VS161.CNTR_SN
                                           AND ST163.CST_SV_ASN_NO  = VS161.CST_SV_ASN_NO) , 0) AS PR
                                 , VS161.CST_SV_ASN_NO
                             FROM TB_SVPD_QLTY_MNGT_AS_DTL_IZ VS161
                       INNER JOIN WSMDBS.TB_SVPD_CST_SV_EXCN_IZ AC201
                               ON VS161.CNTR_NO = AC201.CNTR_NO
                              AND VS161.CNTR_SN = AC201.CNTR_SN
                  LEFT OUTER JOIN TB_PDBS_PD_ECOM_PRP_DTL CYC_TP
                               ON CYC_TP.PD_CD = AC201.SV_PD_CD
                              AND CYC_TP.PD_EXTS_PRP_GRP_CD = 'SCHD'
                            WHERE (VS161.WK_PROCS_YM LIKE #{baseY}||'%' OR VS161.WK_PROCS_YM LIKE TO_CHAR(ADD_MONTHS(TO_DATE(#{baseY},'YYYY'), -12),'YYYY')||'%' )
                              AND ( CYC_TP.PD_PRP_VAL03 = 0 AND CYC_TP.PD_PRP_VAL02 > 0 AND VS161.PD_GRP_CD IN ('1','2','3','4','8')  AND VS161.PD_CD NOT IN  ('WM01100154', 'WM01100035') OR (CYC_TP.PD_PRP_VAL03 > 0 AND VS161.PD_CD IN ('WM01100812' ,'WM01100813','WM01100814','WM01100815','WM02100082','WM02100197','WM02100040','WM02100042','WM02100825','WM02100826','WM02100827','WM02100828')) OR  (VS161.PD_GRP_CD IN ('6')))
                              AND ((VS161.WK_PROCS_YM < '201901' AND (VS161.IMPTA_RSON_CD IN ('1','2','3','4','5','6') OR VS161.IMPTA_RSON_CD IS NULL)) OR (VS161.WK_PROCS_YM >= '201901' AND (VS161.BAD_DV_CD IN ('100R','500R','400R','700R') OR VS161.BAD_DV_CD IS NULL)))
                              AND VS161.PD_GRP_CD != '11'
                              AND (VS161.SV_PROCS_FOM_CD != '114A' OR VS161.SV_PROCS_FOM_CD IS NULL)
        ]]>
                                <if test="@MybatisUtils@isNotEmpty(svType)">
                                    AND VS161.SV_BIZ_DCLSF_CD = #{svType} /* 서비스유형 */
                                </if>
                                <if test="@MybatisUtils@isNotEmpty(badDivide)">
                                    AND VS161.BAD_DV_CD = #{badDivide} /* 불량구분 */
                                </if>
                                <if test='@MybatisUtils@isNotEmpty( pdGrp )'>
                                    <choose>
                                        <when test='@MybatisUtils@equals(pdGrp, "99")'>
                                            AND VS161.PD_GRP_CD IN ('5','7','8','9')	/*상품그룹*/
                                        </when>
                                        <otherwise>
                                            AND VS161.PD_GRP_CD = #{pdGrp}	/*상품그룹*/
                                        </otherwise>
                                    </choose>
                                </if>
                                <if test="@MybatisUtils@isNotEmpty(pdCd)">
                                    AND VS161.PD_CD = #{pdCd} /* 상세상품코드 */
                                </if>
                         )
                        )
    </select>
</mapper>
