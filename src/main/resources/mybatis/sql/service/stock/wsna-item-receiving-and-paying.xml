<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.service.stock.mapper.WsnaItemReceivingAndPayingMapper">

    <select id="selectReceiptsAndPaymentsPages" resultType="com.kyowon.sms.wells.web.service.stock.dto.WsnaItemReceivingAndPayingDto$SearchRes">
         SELECT T1.ITM_PD_CD
                 , TO_CHAR(TO_NUMBER(P1.SVPD_SAP_CD)) SAP_MAT_CD
                 , P1.SVPD_NM_KOR AS ITM_PD_NM
                 /* BTD_STOC_A_GD_QTY(기초재고A등급수량) + BTD_STOC_B_GD_QTY(기초재고B등급수량) +BTD_STOC_E_GD_QTY(기초재고E등급수량)+ BTD_STOC_R_GD_QTY(기초재고R등급수량) + STR_QTY(입고수량) + USE_QTY(반품 사용수량) -  OSTR_QTY(출고수량) - USE_QTY(반품외 사용수량)의 SUM*/
                 , T1.BTD_STOC_A_GD_QTY + T1.BTD_STOC_B_GD_QTY + T1.BTD_STOC_E_GD_QTY + T1.BTD_STOC_R_GD_QTY + NVL(T2.STR_QTY, 0) + (NVL(T2.RTNGD_STR_INSD_QTY, 0) + NVL(T7.RTNGD_STR_OTSD_QTY, 0)) - NVL(T3.OSTR_QTY, 0) - (NVL(T3.RTNGD_OSTR_INSD_QTY, 0) + NVL(T3.RTNGD_OSTR_OTSD_QTY, 0)) AS BAS_STOC_QTY
                 /* 입고수량 */
                 , NVL(T2.PRCHS_STR_QTY, 0) AS PRCHS_STR_QTY
                 , NVL(T2.NOM_STR_QTY, 0) AS NOM_STR_QTY
                 , NVL(T2.QOM_ASN_STR_QTY, 0) AS QOM_ASN_STR_QTY
                 , NVL(T2.QOM_MMT_STR_QTY, 0) AS QOM_MMT_STR_QTY
                 , NVL(T2.RTNGD_STR_INSD_QTY, 0) AS RTNGD_STR_INSD_QTY
                 , NVL(T7.RTNGD_STR_OTSD_QTY, 0) AS RTNGD_STR_OTSD_QTY
                 , NVL(T2.ETC_STR_QTY, 0) AS ETC_STR_QTY
                 , NVL(T5.STR_CTR_QTY, 0) AS STR_CTR_QTY
                 , NVL(T6.CNFM_PITM_STR_GAP_QTY, 0) AS CNFM_PITM_STR_GAP_QTY
                 /* 출고수량 */
                 , NVL(T3.NOM_OSTR_QTY, 0) AS NOM_OSTR_QTY
                 , NVL(T3.SVC_NOM_OSTR_QTY, 0) AS SVC_NOM_OSTR_QTY
                 , NVL(T3.SELL_NOM_OSTR_QTY, 0) AS SELL_NOM_OSTR_QTY
                 , NVL(T3.QOM_ASN_OSTR_QTY, 0) AS QOM_ASN_OSTR_QTY
                 , NVL(T3.QOM_MMT_OSTR_QTY, 0) AS QOM_MMT_OSTR_QTY
                 , NVL(T3.RTNGD_OSTR_INSD_QTY, 0) AS RTNGD_OSTR_INSD_QTY
                 , NVL(T3.RTNGD_OSTR_OTSD_QTY, 0) AS RTNGD_OSTR_OTSD_QTY
                 , NVL(T4.USE_QTY, 0) AS USE_QTY
                 , NVL(T4.YEAR_IN_USE_QTY, 0) AS YEAR_IN_USE_QTY
                 , NVL(T4.YEAR_OUT_USE_QTY, 0) AS YEAR_OUT_USE_QTY
                 , NVL(T3.REFR_OSTR_QTY, 0) AS REFR_OSTR_QTY
                 , NVL(T3.SELL_OSTR_QTY, 0) AS SELL_OSTR_QTY
                 , NVL(T3.DSU_OSTR_QTY, 0) AS DSU_OSTR_QTY
                 , NVL(T3.ETC_OSTR_QTY, 0) AS ETC_OSTR_QTY
                 , NVL(T5.OSTR_CTR_QTY, 0) AS OSTR_CTR_QTY
                 , NVL(T6.CNFM_PITM_OSTR_GAP_QTY, 0) AS CNFM_PITM_OSTR_GAP_QTY
                 , NVL(T8.MMT_STOC_QTY, 0) AS MMT_STOC_QTY
              FROM (
		              SELECT X1.ITM_PD_CD
		                   , SUM(X1.BTD_STOC_A_GD_QTY) BTD_STOC_A_GD_QTY
		                   , SUM(X1.BTD_STOC_B_GD_QTY) BTD_STOC_B_GD_QTY
		                   , SUM(X1.BTD_STOC_E_GD_QTY) BTD_STOC_E_GD_QTY
		                   , SUM(X1.BTD_STOC_R_GD_QTY) BTD_STOC_R_GD_QTY
		                FROM TB_SVST_MCITM_STOC_IZ X1
		               INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
		                  ON X1.WARE_NO = Z1.WARE_NO
		                 AND X1.BASE_YM = Z1.APY_YM
		               WHERE X1.BASE_YM BETWEEN SUBSTR(#{stFromYmd}, 1, 6) AND SUBSTR(#{edToYmd}, 1, 6)
		               <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                         AND Z1.WARE_DV_CD = #{strWareDvCd}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                         AND Z1.HGR_WARE_NO = #{strWareNoM}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                         AND Z1.WARE_NO = #{strWareNoD}
                       </if>
		            GROUP BY X1.ITM_PD_CD
		           ) T1
        INNER JOIN (<include refid="com.kyowon.sms.wells.web.service.common.BASE.selectPartMaster"/>) P1
                ON T1.ITM_PD_CD = P1.SVPD_PD_CD
         LEFT JOIN (
                        SELECT X1.ITM_PD_CD
                             , SUM(X1.STR_QTY) STR_QTY
                             , SUM(CASE WHEN X1.STR_TP_CD = '110' THEN X1.STR_QTY END) AS PRCHS_STR_QTY
                             , SUM(CASE WHEN X1.STR_TP_CD = '121' THEN X1.STR_QTY END) AS NOM_STR_QTY
                             , SUM(CASE WHEN X1.STR_TP_CD = '122' THEN X1.STR_QTY END) AS QOM_ASN_STR_QTY
                             , SUM(CASE WHEN X1.STR_TP_CD = '123' THEN X1.STR_QTY END) AS QOM_MMT_STR_QTY
                             , SUM(CASE WHEN X1.STR_TP_CD = '161' THEN X1.STR_QTY END) AS RTNGD_STR_INSD_QTY
                             , SUM(CASE WHEN X1.STR_TP_CD = '162' THEN X1.STR_QTY END) AS RTNGD_STR_OTSD_QTY
                             , SUM(CASE WHEN X1.STR_TP_CD = '117' THEN X1.STR_QTY END) AS ETC_STR_QTY
                          FROM TB_SVST_ITM_STR_IZ X1
                    INNER JOIN TB_SVST_MCBY_WARE_IZ X2
                            ON X1.STR_WARE_NO = X2.WARE_NO
                           AND SUBSTR(X1.STR_RGST_DT,1,6) = X2.APY_YM
                         WHERE 1 = 1
                           AND X1.STR_RGST_DT BETWEEN #{stFromYmd} AND #{edToYmd}
		               <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                           AND X2.WARE_DV_CD = #{strWareDvCd}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                           AND X2.HGR_WARE_NO = #{strWareNoM}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                           AND X2.WARE_NO = #{strWareNoD}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(itmGdCd)">
                           AND X1.ITM_GD_CD = #{itmGdCd}
                       </if>
                           AND X1.DTA_DL_YN = 'N'
                        GROUP BY X1.ITM_PD_CD
                    ) T2
                ON T1.ITM_PD_CD = T2.ITM_PD_CD
         LEFT JOIN (
                        SELECT X1.ITM_PD_CD
                             , SUM(X1.OSTR_QTY) AS OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '221' THEN X1.OSTR_QTY END) NOM_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '221' AND X1.OSTR_WARE_DV_CD = '1' THEN X1.OSTR_QTY END) SVC_NOM_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '221' AND X1.OSTR_WARE_DV_CD = '3' THEN X1.OSTR_QTY END) SELL_NOM_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '222' THEN X1.OSTR_QTY END) QOM_ASN_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '223' THEN X1.OSTR_QTY END) QOM_MMT_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '261' THEN X1.OSTR_QTY END) RTNGD_OSTR_INSD_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '262' THEN X1.OSTR_QTY END) RTNGD_OSTR_OTSD_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '218' THEN X1.OSTR_QTY END) REFR_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '211' THEN X1.OSTR_QTY END) SELL_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '212' THEN X1.OSTR_QTY END) DSU_OSTR_QTY
                             , SUM(CASE WHEN X1.OSTR_TP_CD = '217' THEN X1.OSTR_QTY END) ETC_OSTR_QTY
                          FROM TB_SVST_ITM_OSTR_IZ X1
                    INNER JOIN TB_SVST_MCBY_WARE_IZ X2
                            ON X1.OSTR_WARE_NO = X2.WARE_NO
                           AND SUBSTR(X1.OSTR_DT,1,6) = X2.APY_YM
                         WHERE 1 = 1
                           AND X1.OSTR_DT BETWEEN #{stFromYmd} AND #{edToYmd}
		               <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                           AND X2.WARE_DV_CD = #{strWareDvCd}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                           AND X2.HGR_WARE_NO = #{strWareNoM}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                           AND X2.WARE_NO = #{strWareNoD}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(itmGdCd)">
                           AND X1.ITM_GD_CD = #{itmGdCd}
                       </if>
                           AND X1.DTA_DL_YN = 'N'
                        GROUP BY  X1.ITM_PD_CD
                    ) T3
                ON T1.ITM_PD_CD = T3.ITM_PD_CD
         LEFT JOIN (
                        SELECT X1.ITM_PD_CD
                             , SUM(X1.USE_QTY) USE_QTY
                             , SUM(CASE WHEN TRUNC(TO_DATE(X1.OSTR_DT) - TO_DATE(X2.IST_DT)) <![CDATA[ <= ]]> 365 THEN X1.USE_QTY END) YEAR_IN_USE_QTY
                             , SUM(CASE WHEN TRUNC(TO_DATE(X1.OSTR_DT) - TO_DATE(X2.IST_DT)) <![CDATA[ > ]]> 365 THEN X1.USE_QTY END) YEAR_OUT_USE_QTY
                          FROM TB_SVST_SV_WK_OSTR_IZ X1
                    INNER JOIN TB_SVPD_CST_SV_EXCN_IZ X2
                            ON X1.CNTR_NO = X2.CNTR_NO
                           AND X1.CNTR_SN = X2.CNTR_SN
                    INNER JOIN TB_SVST_MCBY_WARE_IZ X3
                            ON X1.WK_WARE_NO = X3.WARE_NO
                           AND SUBSTR(X1.FNL_VST_FSH_DT,1,6) = X3.APY_YM
                         WHERE 1 = 1
                           AND X1.FNL_VST_FSH_DT BETWEEN #{stFromYmd} AND #{edToYmd}
                           AND X1.SV_BIZ_HCLSF_CD IN ('1', '2', '3', '4')
                           AND X1.DTA_DL_YN = 'N'
		               <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                           AND X3.WARE_DV_CD = #{strWareDvCd}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                           AND X3.HGR_WARE_NO = #{strWareNoM}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                           AND X3.WARE_NO = #{strWareNoD}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(itmGdCd)">
                           AND X1.FNL_ITM_GD_CD = #{itmGdCd}
                       </if>
                        GROUP BY X1.ITM_PD_CD
                    ) T4
                ON T1.ITM_PD_CD = T4.ITM_PD_CD
         LEFT JOIN (
                      SELECT A.PD_CD
                           , SUM(STR_CTR_QTY) STR_CTR_QTY
                           , SUM(OSTR_CTR_QTY) OSTR_CTR_QTY
                        FROM  (SELECT X1.PD_CD
                                    , CASE WHEN X1.AFCT_ITM_GD_CD = 'A' THEN SUM(X1.CTR_QTY) ELSE 0 END STR_CTR_QTY
                                    , CASE WHEN X1.BFCT_ITM_GD_CD = 'A' THEN SUM(X1.CTR_QTY) ELSE 0 END OSTR_CTR_QTY
                                 FROM TB_SVST_ITM_GD_CTR_IZ X1
                                INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
                                   ON X1.WARE_NO = Z1.WARE_NO
                                WHERE 1 = 1
                                  AND X1.CTR_WK_DT BETWEEN #{stFromYmd} AND #{edToYmd}
                               <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                                  AND Z1.WARE_DV_CD = #{strWareDvCd}
                               </if>
                               <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                                  AND Z1.HGR_WARE_NO = #{strWareNoM}
                               </if>
                               <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                                  AND Z1.WARE_NO = #{strWareNoD}
                               </if>
                               <if test="@MybatisUtils@isNotEmpty(itmGdCd)">
                                  AND X1.AFCT_ITM_GD_CD = #{itmGdCd}
                               </if>
                                  AND X1.DTA_DL_YN = 'N'
                                GROUP BY X1.PD_CD, X1.AFCT_ITM_GD_CD, X1.BFCT_ITM_GD_CD) A
                       GROUP BY A.PD_CD
                    ) T5
                ON T1.ITM_PD_CD = T5.PD_CD
         LEFT JOIN (
                        SELECT X1.PD_CD
                             , SUM(X1.CNFM_PITM_STR_GAP_QTY) CNFM_PITM_STR_GAP_QTY
                             , SUM(X1.CNFM_PITM_OSTR_GAP_QTY) CNFM_PITM_OSTR_GAP_QTY
                          FROM TB_SVST_MCBY_STOC_ACINSP_IZ X1
                    INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
                            ON X1.WARE_NO = Z1.WARE_NO
                           AND X1.BASE_YM = Z1.APY_YM
                         WHERE 1 = 1
                           AND X1.BASE_YM BETWEEN SUBSTR(#{stFromYmd}, 1, 6) AND SUBSTR(#{edToYmd}, 1, 6)
                           AND X1.DTA_DL_YN = 'N'
		               <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                           AND Z1.WARE_DV_CD = #{strWareDvCd}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                           AND Z1.HGR_WARE_NO = #{strWareNoM}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                           AND Z1.WARE_NO = #{strWareNoD}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(itmGdCd)">
                           AND 'A' = #{itmGdCd}
                       </if>
                        GROUP BY X1.PD_CD
                    ) T6
                ON T1.ITM_PD_CD = T6.PD_CD
         LEFT JOIN (
                        SELECT X1.ITM_PD_CD
                             , SUM(X1.USE_QTY) AS RTNGD_STR_OTSD_QTY
                          FROM TB_SVST_SV_WK_OSTR_IZ X1
                    INNER JOIN TB_SVST_MCBY_WARE_IZ X2
                            ON X1.WK_WARE_NO = X2.WARE_NO
                           AND X2.APY_YM = SUBSTR(#{stFromYmd}, 1, 6)
                         WHERE 1 = 1
                           AND X1.FNL_VST_FSH_DT BETWEEN #{stFromYmd} AND #{edToYmd}
		               <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                           AND X2.WARE_DV_CD = #{strWareDvCd}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                           AND X2.HGR_WARE_NO = #{strWareNoM}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                           AND X2.WARE_NO = #{strWareNoD}
                       </if>
                       <if test="@MybatisUtils@isNotEmpty(itmGdCd)">
                           AND X1.FNL_ITM_GD_CD = #{itmGdCd}
                       </if>
                           AND X1.DTA_DL_YN = 'N'
                           AND X1.SV_BIZ_HCLSF_CD = '6'
                        GROUP BY X1.ITM_PD_CD
                    ) T7
                ON T1.ITM_PD_CD = T7.ITM_PD_CD
         LEFT JOIN (SELECT X1.ITM_PD_CD
                        , SUM(CASE WHEN X1.OSTR_TP_CD NOT IN ('211', '217') THEN X1.OSTR_QTY END) MMT_STOC_QTY
                      FROM TB_SVST_ITM_OSTR_IZ X1
                     INNER JOIN TB_SVST_MCBY_WARE_IZ X2
                        ON X1.OSTR_WARE_NO = X2.WARE_NO
                       AND SUBSTR(X1.OSTR_DT,1,6) = X2.APY_YM
                     WHERE 1 = 1
                       AND X1.OSTR_DT BETWEEN #{stFromYmd} AND #{edToYmd}
                       AND X1.STR_CONF_DT IS NULL
                       AND X1.OSTR_QTY > 0
                       AND X2.WARE_DV_CD = '2'
                       AND X1.DTA_DL_YN = 'N'
                    <if test="@MybatisUtils@isNotEmpty(strWareDvCd)">
                       AND X2.WARE_DV_CD = #{strWareDvCd}
                   </if>
                   <if test="@MybatisUtils@isNotEmpty(strWareNoM)">
                       AND X2.HGR_WARE_NO = #{strWareNoM}
                   </if>
                   <if test="@MybatisUtils@isNotEmpty(strWareNoD)">
                       AND X2.WARE_NO = #{strWareNoD}
                   </if>
                   <if test="@MybatisUtils@isNotEmpty(itmGdCd)">
                       AND X1.ITM_GD_CD = #{itmGdCd}
                   </if>
                     GROUP BY X1.ITM_PD_CD
                    ) T8
                ON T1.ITM_PD_CD = T8.ITM_PD_CD
             WHERE 1 = 1
           <if test="@MybatisUtils@isNotEmpty(itmKnd)">
               AND P1.SVPD_ITEM_KND = #{itmKnd}
           </if>
           <if test="@MybatisUtils@isNotEmpty(useYn)">
               AND P1.SVPD_USE_YN = #{useYn}
           </if>
           <!--TODO : 품목코드 ASIS에서는 BETWEEN으로 설정했으나 TOBE에서는 품목코드가 변경되면서 FROM~TO방식이 필요없을꺼 같음-->
           <if test="@MybatisUtils@isNotEmpty(itmPdCdFrom)">
               AND P1.SVPD_PD_CD = #{itmPdCdFrom}
           </if>
           <if test="@MybatisUtils@isNotEmpty(sapMatCdFrom)">
               AND TO_CHAR(TO_NUMBER(P1.SVPD_SAP_CD)) BETWEEN #{sapMatCdFrom} AND #{sapMatCdTo}
           </if>
           <if test='@MybatisUtils@isNotEmpty(sapMatDpcts)'>
               AND TO_CHAR(TO_NUMBER(P1.SVPD_SAP_CD)) IN
               <foreach collection="sapMatDpcts" item="sapMatDpct" open="(" close=")" separator=",">
                    TRIM(#{sapMatDpct})
               </foreach>
           </if>


    </select>

    <select id="selectDateReceivingAndPayings" resultType="com.kyowon.sms.wells.web.service.stock.dto.WsnaItemReceivingAndPayingDto$SearchDateRes">

        WITH BASE_DATE AS (
                        SELECT TO_CHAR(TO_DATE(#{strRgstFrom}) + (LEVEL - 1), 'YYYYMMDD') YMD
                          FROM DUAL T1
                        CONNECT BY LEVEL <![CDATA[ <= ]]> (TO_DATE(#{strRgstFrom}) - TO_DATE(#{strRgstTo})) + 1
                    )
            SELECT A1.YMD
                 , A1.BAS_STOC_QTY
                 /* 입고수량 */
                 , A1.PRCHS_STR_QTY
                 , A1.NOM_STR_QTY
                 , A1.QOM_ASN_STR_QTY
                 , A1.QOM_MMT_STR_QTY
                 , A1.RTNGD_STR_INSD_QTY
                 , A1.RTNGD_STR_OTSD_QTY
                 , A1.ETC_STR_QTY
                 , A1.STR_CTR_QTY
                 , A1.CNFM_PITM_STR_GAP_QTY
                 /* 출고수량 */
                 , A1.NOM_OSTR_QTY
                 , A1.SVC_NOM_OSTR_QTY
                 , A1.SELL_NOM_OSTR_QTY
                 , A1.QOM_ASN_OSTR_QTY
                 , A1.QOM_MMT_OSTR_QTY
                 , A1.RTNGD_OSTR_INSD_QTY
                 , A1.RTNGD_OSTR_OTSD_QTY
                 , A1.USE_QTY
                 , A1.REFR_OSTR_QTY
                 , A1.SELL_OSTR_QTY
                 , A1.DSU_OSTR_QTY
                 , A1.ETC_OSTR_QTY
                 , A1.OSTR_CTR_QTY
                 , A1.CNFM_PITM_OSTR_GAP_QTY
                 , NVL(A1.BAS_STOC_QTY, 0) + (NVL(A1.PRCHS_STR_QTY, 0) + NVL(A1.NOM_STR_QTY, 0) + NVL(A1.QOM_ASN_STR_QTY, 0) + NVL(A1.QOM_MMT_STR_QTY, 0) + NVL(A1.RTNGD_STR_INSD_QTY, 0) + NVL(A1.RTNGD_STR_OTSD_QTY, 0) + NVL(A1.ETC_STR_QTY, 0) + NVL(A1.STR_CTR_QTY, 0) + NVL(A1.CNFM_PITM_STR_GAP_QTY, 0)
                    ) - (NVL(A1.NOM_OSTR_QTY, 0) + NVL(A1.QOM_ASN_OSTR_QTY, 0) + NVL(A1.QOM_MMT_OSTR_QTY, 0) + NVL(A1.RTNGD_OSTR_INSD_QTY, 0) + NVL(A1.RTNGD_OSTR_OTSD_QTY, 0) + NVL(A1.USE_QTY, 0) + NVL(A1.REFR_OSTR_QTY, 0) + NVL(A1.SELL_OSTR_QTY, 0) + NVL(A1.DSU_OSTR_QTY, 0) + NVL(A1.ETC_OSTR_QTY, 0) + NVL(A1.OSTR_CTR_QTY, 0) + NVL(A1.CNFM_PITM_OSTR_GAP_QTY, 0)) - NVL(A1.MMT_STOC_QTY, 0) EOT_STOC_QTY
                 , A1.MMT_STOC_QTY
              FROM (
                    SELECT T1.YMD
                         , T2.BTD_STOC_A_GD_QTY + T2.BTD_STOC_B_GD_QTY + T2.BTD_STOC_E_GD_QTY + T2.BTD_STOC_R_GD_QTY + NVL(T3.STR_QTY, 0) + (NVL(T3.RTNGD_STR_INSD_QTY, 0) + NVL(T3.RTNGD_STR_OTSD_QTY, 0)) - NVL(T4.OSTR_QTY, 0) - (NVL(T4.RTNGD_OSTR_INSD_QTY, 0) + NVL(T4.RTNGD_OSTR_OTSD_QTY, 0)) AS BAS_STOC_QTY
                         /* 입고수량 */
                         , NVL(T3.PRCHS_STR_QTY, 0) AS PRCHS_STR_QTY
                         , NVL(T3.NOM_STR_QTY, 0) AS NOM_STR_QTY
                         , NVL(T3.QOM_ASN_STR_QTY, 0) AS QOM_ASN_STR_QTY
                         , NVL(T3.QOM_MMT_STR_QTY, 0) AS QOM_MMT_STR_QTY
                         , NVL(T3.RTNGD_STR_INSD_QTY, 0) AS RTNGD_STR_INSD_QTY
                         , NVL(T3.RTNGD_STR_OTSD_QTY, 0) AS RTNGD_STR_OTSD_QTY
                         , NVL(T3.ETC_STR_QTY, 0) AS ETC_STR_QTY
                         , NVL(T6.STR_CTR_QTY, 0) AS STR_CTR_QTY
                         , NVL(T7.CNFM_PITM_STR_GAP_QTY, 0) AS CNFM_PITM_STR_GAP_QTY
                         /* 출고수량 */
                         , NVL(T4.NOM_OSTR_QTY, 0) AS NOM_OSTR_QTY /* 정상출고 */
                         , NVL(T4.SVC_NOM_OSTR_QTY, 0) AS SVC_NOM_OSTR_QTY  /*서비스*/
                         , NVL(T4.SELL_NOM_OSTR_QTY, 0) AS SELL_NOM_OSTR_QTY /*영업*/
                         , NVL(T4.QOM_ASN_OSTR_QTY, 0) AS QOM_ASN_OSTR_QTY /* 배정출고 */
                         , NVL(T4.QOM_MMT_OSTR_QTY, 0) AS QOM_MMT_OSTR_QTY /* 물량출고 */
                         , NVL(T4.RTNGD_OSTR_INSD_QTY, 0) AS RTNGD_OSTR_INSD_QTY /* 반품내부출고 */
                         , NVL(T4.RTNGD_OSTR_OTSD_QTY, 0) AS RTNGD_OSTR_OTSD_QTY /* 반품외부출고 */
                         , NVL(T5.USE_QTY, 0) AS USE_QTY /* 작업출고 */
                         , NVL(T4.REFR_OSTR_QTY, 0) AS REFR_OSTR_QTY /* 리퍼출고 */
                         , NVL(T4.SELL_OSTR_QTY, 0) AS SELL_OSTR_QTY /* 판매출고 */
                         , NVL(T4.DSU_OSTR_QTY, 0) AS DSU_OSTR_QTY /* 폐기출고 */
                         , NVL(T4.ETC_OSTR_QTY, 0) AS ETC_OSTR_QTY /* 기타출고 */
                         , NVL(T6.OSTR_CTR_QTY, 0) AS OSTR_CTR_QTY /* 등급조정출고 */
                         , NVL(T7.CNFM_PITM_OSTR_GAP_QTY, 0) AS CNFM_PITM_OSTR_GAP_QTY /* 재고실사출고 */
                         , NVL(T4.MMT_STOC_QTY, 0) AS MMT_STOC_QTY /* 이동재고 */
                      FROM BASE_DATE T1
                INNER JOIN (
                                SELECT W1.ITM_PD_CD
                                     , SUM(W1.BTD_STOC_A_GD_QTY) BTD_STOC_A_GD_QTY
                                     , SUM(W1.BTD_STOC_B_GD_QTY) BTD_STOC_B_GD_QTY
                                     , SUM(W1.BTD_STOC_E_GD_QTY) BTD_STOC_E_GD_QTY
                                     , SUM(W1.BTD_STOC_R_GD_QTY) BTD_STOC_R_GD_QTY
                                  FROM TB_SVST_MCITM_STOC_IZ W1
                                 INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
                                    ON W1.WARE_NO = Z1.WARE_NO
                                   AND W1.BASE_YM = Z1.APY_YM
                                 WHERE 1 = 1
                                   AND (Z1.HGR_WARE_NO = #{wareNo} OR Z1.WARE_NO = #{wareNo})
                                   AND W1.ITM_PD_CD = #{itmPdCd}
                                   AND W1.BASE_YM BETWEEN SUBSTR(#{strRgstFrom}, 1, 6) AND SUBSTR(#{strRgstTo}, 1, 6)
                                   AND W1.DTA_DL_YN = 'N'
                                GROUP BY W1.ITM_PD_CD
                           ) T2
                        ON 1 = 1
                LEFT JOIN (
                               SELECT X1.ITM_PD_CD
                                     , X1.STR_RGST_DT
                                     , SUM(X1.STR_QTY) STR_QTY
                                     , SUM(CASE WHEN X1.STR_TP_CD = '110' THEN X1.STR_QTY END) AS PRCHS_STR_QTY
                                     , SUM(CASE WHEN X1.STR_TP_CD = '121' THEN X1.STR_QTY END) AS NOM_STR_QTY
                                     , SUM(CASE WHEN X1.STR_TP_CD = '122' THEN X1.STR_QTY END) AS QOM_ASN_STR_QTY
                                     , SUM(CASE WHEN X1.STR_TP_CD = '123' THEN X1.STR_QTY END) AS QOM_MMT_STR_QTY
                                     , SUM(CASE WHEN X1.STR_TP_CD = '161' THEN X1.STR_QTY END) AS RTNGD_STR_INSD_QTY
                                     , SUM(CASE WHEN X1.STR_TP_CD = '162' THEN X1.STR_QTY END) AS RTNGD_STR_OTSD_QTY
                                     , SUM(CASE WHEN X1.STR_TP_CD = '117' THEN X1.STR_QTY END) AS ETC_STR_QTY
                                  FROM TB_SVST_ITM_STR_IZ X1
                                 INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
                                    ON SUBSTR(STR_RGST_DT, 1,6) = Z1.APY_YM
                                   AND X1.STR_WARE_NO = Z1.WARE_NO
                                 WHERE 1 = 1
                                   AND Z1.WARE_NO = #{wareNo}
                                   AND X1.ITM_PD_CD = #{itmPdCd}
                                   AND X1.STR_RGST_DT BETWEEN #{strRgstFrom} AND #{strRgstTo}
                                   AND X1.DTA_DL_YN = 'N'
                                GROUP BY X1.ITM_PD_CD, X1.STR_RGST_DT
                           ) T3
                        ON T1.YMD = T3.STR_RGST_DT
                 LEFT JOIN (
                                SELECT X1.ITM_PD_CD
                                     , X1.OSTR_DT
                                     , SUM(X1.OSTR_QTY) AS OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '221' THEN X1.OSTR_QTY END) NOM_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '221' AND X1.OSTR_WARE_DV_CD = '2' THEN X1.OSTR_QTY END) SVC_NOM_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '221' AND X1.OSTR_WARE_DV_CD = '3' THEN X1.OSTR_QTY END) SELL_NOM_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '222' THEN X1.OSTR_QTY END) QOM_ASN_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '223' THEN X1.OSTR_QTY END) QOM_MMT_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '261' THEN X1.OSTR_QTY END) RTNGD_OSTR_INSD_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '262' THEN X1.OSTR_QTY END) RTNGD_OSTR_OTSD_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '218' THEN X1.OSTR_QTY END) REFR_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '211' THEN X1.OSTR_QTY END) SELL_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '212' THEN X1.OSTR_QTY END) DSU_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD = '217' THEN X1.OSTR_QTY END) ETC_OSTR_QTY
                                     , SUM(CASE WHEN X1.OSTR_TP_CD NOT IN ('211', '217') THEN X1.OSTR_QTY END) MMT_STOC_QTY
                                  FROM TB_SVST_ITM_OSTR_IZ X1
                                 INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
                                    ON SUBSTR(X1.OSTR_DT,1,6) = Z1.APY_YM
                                   AND X1.OSTR_WARE_NO = Z1.WARE_NO
                                 WHERE 1 = 1
                                   AND Z1.WARE_NO = #{wareNo}
                                   AND X1.ITM_PD_CD = #{itmPdCd}
                                   AND X1.OSTR_DT BETWEEN #{strRgstFrom} AND #{strRgstTo}
                                   AND X1.DTA_DL_YN = 'N'
                                GROUP BY X1.ITM_PD_CD, X1.OSTR_DT
                           ) T4
                        ON T1.YMD = T4.OSTR_DT
                LEFT JOIN (
                                SELECT X1.FNL_VST_FSH_DT
                                     , X1.ITM_PD_CD
                                     , SUM(X1.USE_QTY) USE_QTY
                                  FROM TB_SVST_SV_WK_OSTR_IZ X1
                            INNER JOIN TB_SVPD_CST_SV_EXCN_IZ X2
                                    ON X1.CNTR_NO = X2.CNTR_NO
                                   AND X1.CNTR_SN = X2.CNTR_SN
                            INNER JOIN TB_SVST_MCBY_WARE_IZ X3
                                    ON X1.WK_WARE_NO = X3.WARE_NO
                                   AND SUBSTR(X1.FNL_VST_FSH_DT,1,6) = X3.APY_YM
                                 WHERE 1 = 1
                                   AND X3.WARE_NO = #{wareNo}
                                   AND X1.ITM_PD_CD = #{itmPdCd}
                                   AND X1.FNL_VST_FSH_DT BETWEEN #{strRgstFrom} AND #{strRgstTo}
                                   AND X1.SV_BIZ_HCLSF_CD IN ('1', '2', '3', '4') /* (설치, B/S,A/S,홈케어) */
                                   AND X1.DTA_DL_YN = 'N'
                                GROUP BY X1.ITM_PD_CD, X1.FNL_VST_FSH_DT
                           ) T5
                        ON T1.YMD = T5.FNL_VST_FSH_DT
                 LEFT JOIN (
                                SELECT A.PD_CD
                                     , SUM(STR_CTR_QTY) STR_CTR_QTY
                                     , SUM(OSTR_CTR_QTY) OSTR_CTR_QTY
                                     , A.CTR_WK_DT
                                  FROM  (SELECT X1.PD_CD
                                              , CASE WHEN X1.AFCT_ITM_GD_CD = 'A' THEN SUM(X1.CTR_QTY) ELSE 0 END STR_CTR_QTY
                                              , CASE WHEN X1.BFCT_ITM_GD_CD = 'A' THEN SUM(X1.CTR_QTY) ELSE 0 END OSTR_CTR_QTY
                                              , X1.CTR_WK_DT
                                           FROM TB_SVST_ITM_GD_CTR_IZ X1
                                          INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
                                             ON X1.WARE_NO = Z1.WARE_NO
                                          WHERE 1 = 1
                                            AND X1.CTR_WK_DT BETWEEN #{strRgstFrom} AND #{strRgstTo}
                                            AND X1.WARE_NO = #{wareNo}
                                            AND X1.PD_CD = #{itmPdCd}
                                            AND X1.DTA_DL_YN = 'N'
                                            GROUP BY X1.PD_CD, X1.AFCT_ITM_GD_CD, X1.BFCT_ITM_GD_CD, X1.CTR_WK_DT) A
                                 GROUP BY A.PD_CD, A.CTR_WK_DT
                           ) T6
                        ON T1.YMD = T6.CTR_WK_DT
                 LEFT JOIN (
                                SELECT X1.PD_CD
                                     , X1.BASE_YM
                                     , SUM(X1.CNFM_PITM_STR_GAP_QTY) CNFM_PITM_STR_GAP_QTY
                                     , SUM(X1.CNFM_PITM_OSTR_GAP_QTY) CNFM_PITM_OSTR_GAP_QTY
                                  FROM TB_SVST_MCBY_STOC_ACINSP_IZ X1
                                 INNER JOIN TB_SVST_MCBY_WARE_IZ Z1
                                    ON X1.BASE_YM = Z1.APY_YM
                                   AND X1.WARE_NO = Z1.WARE_NO
                                 WHERE 1 = 1
                                   AND X1.WARE_NO = #{wareNo}
                                   AND X1.PD_CD = #{itmPdCd}
                                   AND X1.BASE_YM BETWEEN SUBSTR(#{strRgstFrom}, 1, 6) AND SUBSTR(#{strRgstTo}, 1, 6)
                                   AND X1.DTA_DL_YN = 'N'
                                GROUP BY X1.PD_CD, X1.BASE_YM
                           ) T7
                        ON 1 = 1
                    ) A1

    </select>





</mapper>
