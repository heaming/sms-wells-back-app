<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.service.stock.mapper.WsnaInstallationStockPsByDayMapper">

    <select id="selectInstallationStockPsByDayCenter"
            resultType="com.kyowon.sms.wells.web.service.stock.dvo.WsnaInstallationStockPsByDayCenterValueDvo">
        WITH PART_INF AS ( /* 품목정보 */
                SELECT P1.PD_CD
                     , P2.SAP_MAT_CD    /*SAP자재코드*/
                     , P2.PD_NM /*품목명*/
                     , P1.PD_PRP_VAL06 AS AS_LDTM /*리드타임, AS_LDTM*/
                     , P1.PD_PRP_VAL17 AS AS_MAT_MNG_TP_CD /*자재관리유형, AS_MAT_MNG_TP_CD, MAT_MNGT_DV_CD 1 기초1, 2 기초2, 3 기초3, 4 기초4, 5 기초5, 6 기초6, 7 기초7, 8 기초8*/
                     , P1.PD_PRP_VAL21 AS AS_MAT_CMN_CLSF_CD /*AS자재 공통분류, AS_MAT_CMN_CLSF_CD, CMN_PART_DV_CD*/
                     , P1.PD_PRP_VAL30 AS TRNOVR_RT_OJ_YN /*회전율 대상여부, TRNOVR_RT_OJ_YN*/
                     , P1.PD_PRP_VAL07 AS MIN_GO_QTY /*최소발주량, MIN_GO_QTY*/
                     , P1.PD_PRP_VAL32 AS UI_EXPSR_YN /*사용여부*/
                     , P1.PD_PRP_VAL36 AS SV_MAT_GRP_CD	/*서비스자재그룹 A 일반, B 설치, C 필터, D 피팅/폼, E 중수리, F 소모품, G 공구*/
                     , (CASE WHEN P1.PD_PRP_VAL20 IS NULL THEN SUBSTR(P1.PD_PRP_VAL01,2,1) ELSE P1.PD_PRP_VAL20 END) AS AS_MAT_ITM_GRP_CD /*PD_GRP_CD	AS자재 품목그룹*/
                     , P1.PD_PRP_VAL26 AS AS_SPL_UNIT_AMT /*물류의 공급단가(물류 매각시 사용단가)*/
                     , P1.PD_PRP_VAL01 || P1.PD_PRP_VAL31 AS KIWI_PD_CD
                  FROM WSMDBS.TB_PDBS_PD_ECOM_PRP_DTL P1  /*상품각사속성상세*/
            INNER JOIN TB_PDBS_PD_BAS P2
                    ON P1.PD_CD = P2.PD_CD
                   AND P2.PD_TP_CD = 'M'    /*상품유형코드 : C 복합상품, P 기준상품, S 서비스, M 교재제품, Y 융합상품*/
                   AND P2.DTA_DL_YN = 'N'
                 WHERE 1=1
                   AND P1.PD_EXTS_PRP_GRP_CD = 'PART'
                   AND P1.PD_PRP_VAL19 = '4'    /*AS자재 품목종류, AS_MAT_ITM_KND_CD, ITM_KND_CD*/
                   AND P1.PD_PRP_VAL32 = 'Y'
                   <if test="@MybatisUtils@isNotEmpty(pdCd)">
                   AND P1.PD_CD = #{pdCd}
                   </if>
                   AND P1.DTA_DL_YN = 'N'
                   /* AND P1.PD_PRP_VAL01 || P1.PD_PRP_VAL31= '42800000000' */
        )
        , OG_PRTNR_WARE_INF AS ( /* 조직 및 창고 */
            SELECT *
              FROM ( SELECT DISTINCT  O1.BASE_YM
                                    , O1.OG_ID
                                    , O1.OG_TP_CD
                                    , O1.OG_CD
                                    , O1.OG_NM
                                    , O1.SORT_ODR
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR1_LEVL_OG_ID WHEN O1.OG_TP_CD IN ('W06') THEN '71314' ELSE O1.OG_ID END) AS L1_HGR_OG_ID
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR2_LEVL_OG_ID ELSE O1.OG_ID END) AS L2_HGR_OG_ID
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR3_LEVL_OG_ID ELSE O1.OG_ID END) AS L3_HGR_OG_ID
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR1_LEVL_OG_CD WHEN O1.OG_TP_CD IN ('W06') THEN '71314' ELSE O1.OG_CD END) AS L1_HGR_OG_CD
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR2_LEVL_OG_CD ELSE O1.OG_CD END) AS L2_HGR_OG_CD
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR3_LEVL_OG_CD ELSE O1.OG_CD END) AS L3_HGR_OG_CD
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR1_LEVL_OG_NM WHEN O1.OG_TP_CD IN ('W06') THEN 'Wells CS운영팀' ELSE O1.OG_NM END) AS L1_HGR_OG_NM
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR2_LEVL_OG_NM ELSE O1.OG_NM END) AS L2_HGR_OG_NM
                                    , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR3_LEVL_OG_NM ELSE O1.OG_NM END) AS L3_HGR_OG_NM
                                    , O1.HGR_OG_ID
                                    , S1.WARE_NO
                                    , S1.WARE_NM
                                    , S1.WARE_USE_YN
                                    , S1.WARE_MNGT_PRTNR_NO
                                    , S1.WARE_DTL_DV_CD
                                    , S1.HGR_WARE_NO
                                    , S1.STD_WARE_USE_YN    --표준창고사용여부
                                    , O2.PRTNR_NO
                                    , O2.PRTNR_KNM
                                    , O2.FST_CNTR_DT           /*최초계약일자*/
                                    , O2.FNL_CLTN_DT           /*최종해약일자*/
                                    , O2.RCNTR_DT              /*재계약일자*/
                                    , O2.CLTN_DT               /*해약일자*/
                                    , O2.CNTR_DT               /*계약일자*/
                                    , O2.HIR_FOM_CD            /*고용형태코드,1 사업자, 2 계약직,3 정규직, 4 법인영업수수료대상	, 5 강사, 9 기타(위탁)*/
                                    , O2.BZ_STAT_CD            /*사업상태코드, 1 사업, 2 해약, 3 휴업*/
                                    , O2.PSTN_DV_CD            /*직급구분코드*/
                                    , O2.RSB_DV_CD             /*직책구분코드*/
                                    , O2.ROL_DV_CD             /*직무구분코드*/
                                    , O2.PRTNR_GD_CD           /*파트너등급코드*/
                                    , O2.QLF_DV_CD             /*자격구분코드*/
                                    , O2.PERF_EXCD_OJ_YN       /*실적제외대상여부*/
                                    , O2.RDS_DSB_EXCD_OJ_YN    /*RDS지급제외대상여부*/
                                    , O3.PRTNR_GD_CD AS ENG_PRTNR_GD_CD             /*파트너등급코드*/
                                    , COUNT(1) OVER (PARTITION BY HGR_OG_ID ORDER BY HGR_OG_ID) AS HTR_CNT
                                    , ROW_NUMBER() OVER(PARTITION BY S1.WARE_NO, O3.OG_TP_CD, O3.PRTNR_NO ORDER BY O3.APY_STRTDT DESC) AS PRTNR_GD_CD_RNK
                                 FROM WSMDBS.TB_OGBS_MM_OG_IZ O1  /*월조직내역*/
                      LEFT OUTER JOIN TB_SVST_MCBY_WARE_IZ S1 /*월별창고내역*/
                                   ON O1.BASE_YM = S1.APY_YM
                                  AND O1.OG_TP_CD = S1.OG_TP_CD
                                  AND O1.OG_ID = S1.OG_ID
                                --AND S1.WARE_DTL_DV_CD LIKE '2%'
                                --AND S1.WARE_USE_YN = 'Y'  /*미사용창고에서 반품 되는 경우도 있기 때문에*/
                                  AND S1.DTA_DL_YN = 'N'
                      LEFT OUTER JOIN WSMDBS.TB_OGBS_MM_PRTNR_IZ O2 /*월파트너내역*/
                                   ON S1.APY_YM = O2.BASE_YM
                                  AND S1.OG_TP_CD = O2.OG_TP_CD
                                  AND S1.OG_ID = O2.OG_ID
                                  AND S1.WARE_MNGT_PRTNR_NO = O2.PRTNR_NO
                                   --퇴사자제외 조건 선택 시
                                       --AND O2.CLTN_DT IS  NULL
                      LEFT OUTER JOIN WSMDBS.TB_OGPS_EGER_GD_RGST_IZ O3 /*엔지니어등급등록내역*/
                                   ON O3.OG_TP_CD = O2.OG_TP_CD
                                  AND O3.PRTNR_NO = O2.PRTNR_NO
                                  AND SUBSTR(#{baseDt},1,6) || '01' BETWEEN O3.APY_STRTDT AND O3.APY_ENDDT
                                       AND O3.DTA_DL_YN = 'N'
                                WHERE 1=1
                                  AND ((S1.WARE_DV_CD = '1' AND S1.WARE_NO = '100002') OR (S1.WARE_DV_CD = '2'))
                                  AND O1.BASE_YM = LEAST(SUBSTR(#{baseDt},1,6), TO_CHAR(SYSDATE, 'YYYYMM'))
                                  --AND (S1.WARE_NO = '201551' OR  S1.HGR_WARE_NO = '201551')
                                  --창고사용여부 Y, N 조건 값이 있을 경우, 전체면 조건 제거
                                  AND S1.WARE_USE_YN = 'Y'
                                 --엔지니어선택시
                                  AND O1.OG_TP_CD IN ('W03','W06')
                                 --매니저선택시
                                 --AND O1.OG_TP_CD IN ('W06')
                                 --조직선택시
                                 --AND O1.OG_ID = 'OG00087309'
                                 --개인선택시
                                 --AND O2.PRTNR_NO = '36649'
                                 AND O1.OG_CD != '71314'
                                 AND O1.DTA_DL_YN = 'N'
                            ORDER BY O1.BASE_YM, O1.OG_CD, S1.WARE_NO
                   )
             WHERE 1=1
               AND PRTNR_GD_CD_RNK  = '1'
         )
        , WARE_QTY_INF AS (
            SELECT V2.OG_CD
                 , V2.OG_NM
                 , V2.PD_CD
                 , V2.SAP_MAT_CD
                 , V2.PD_NM
                 , NVL(SUM(SUM_QTY_DV_CD_0),0) AS SUM_QTY_DV_CD_0
                 , NVL(SUM(SUM_QTY_DV_CD_1),0) AS SUM_QTY_DV_CD_1
                 , SUM(NVL(SUM_QTY_DV_CD_0, 0) + NVL(SUM_QTY_DV_CD_1,0)) AS SUM_QTY_DV_CD
              FROM (
                    SELECT V1.OG_CD
                         , V1.OG_NM
                         , V1.WARE_DTL_DV_CD
                         , V1.PD_CD
                         , V1.SAP_MAT_CD
                         , V1.PD_NM
                         , (CASE WHEN V1.WARE_DTL_DV_CD LIKE '%0' THEN SUM(PITM_STOC_QTY) END) AS SUM_QTY_DV_CD_0
                         , (CASE WHEN V1.WARE_DTL_DV_CD LIKE '%1' THEN SUM(PITM_STOC_QTY) END) AS SUM_QTY_DV_CD_1
                    --     , SUM(PITM_STOC_QTY) OVER(PARTITION BY V1.SUBSUM_GROUPKEY, SUBSTR(V1.WARE_DTL_DV_CD,1,1) ORDER BY V1.SUBSUM_GROUPKEY RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SUM_QTY_DV_CD_0
                    --     , SUM(PITM_STOC_QTY) OVER(PARTITION BY V1.SUBSUM_GROUPKEY, SUBSTR(V1.WARE_DTL_DV_CD,2,1) ORDER BY V1.SUBSUM_GROUPKEY RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SUM_QTY_DV_CD_1
                      FROM (
                            SELECT W1.WARE_NO
                                 , W1.WARE_NM
                                 , W1.OG_CD
                                 , W1.OG_NM
                                 , W1.WARE_DTL_DV_CD
                                 , P1.PD_CD
                                 , P1.SAP_MAT_CD
                                 , P1.PD_NM
                                   --등급에 따라 재고 수량 계산
                                 <if test="@MybatisUtils@isNotEmpty(pdGdCd)">
                                 , (CASE WHEN #{pdGdCd} = 'A' THEN PITM_STOC_A_GD_QTY
                                         WHEN #{pdGdCd} = 'B' THEN PITM_STOC_B_GD_QTY
                                         WHEN #{pdGdCd} = 'E' THEN PITM_STOC_E_GD_QTY
                                         WHEN #{pdGdCd} = 'R' THEN PITM_STOC_R_GD_QTY
                                         ELSE 0
                                    END) AS PITM_STOC_QTY
                                 </if>
                                <if test="@MybatisUtils@isEmpty(pdGdCd)">
                                , ( PITM_STOC_A_GD_QTY + PITM_STOC_B_GD_QTY + PITM_STOC_E_GD_QTY + PITM_STOC_R_GD_QTY ) AS PITM_STOC_QTY
                                </if>
                            FROM OG_PRTNR_WARE_INF W1
                      INNER JOIN WSMDBS.TB_SVST_MCITM_STOC_IZ SV1
                              ON W1.WARE_NO = SV1.WARE_NO
                             AND SV1.BASE_YM = SUBSTR(#{baseDt},1,6)
                             AND SV1.DTA_DL_YN = 'N'
                      INNER JOIN PART_INF P1
                              ON SV1.ITM_PD_CD = P1.PD_CD
                           WHERE 1=1
                        ORDER BY W1.OG_CD, W1.OG_NM, W1.WARE_NO, P1.PD_CD, P1.SAP_MAT_CD, P1.PD_NM
                      ) V1
                    WHERE 1=1
                 GROUP BY V1.OG_CD, V1.OG_NM, V1.WARE_DTL_DV_CD, V1.PD_CD, V1.SAP_MAT_CD, V1.PD_NM
                 ORDER BY V1.OG_CD, V1.OG_NM, V1.WARE_DTL_DV_CD, V1.PD_CD, V1.SAP_MAT_CD, V1.PD_NM
              ) V2
            WHERE 1=1
         GROUP BY V2.OG_CD, V2.OG_NM, V2.PD_CD, V2.SAP_MAT_CD, V2.PD_NM
         ORDER BY V2.OG_CD, V2.PD_CD, V2.SAP_MAT_CD, V2.PD_NM
        )
        , DATE_INF AS (
            SELECT TO_CHAR(TO_DATE(#{baseDt}) + LEVEL-1, 'YYYYMMDD') AS ASN_DATE
               , LEVEL AS RN
            FROM DUAL
            CONNECT BY LEVEL <![CDATA[<]]> 17
         )
        , ASN_INF AS (
            SELECT SV_CNR_OG_ID
                 , VST_CNFMDT
                 , PD_CD
                 , COUNT(1) AS CNT
              FROM (
                    SELECT REPLACE(SV2.SV_CNR_OG_ID, 'W06-', '') AS SV_CNR_OG_ID
                         , SV2.VST_CNFMDT
                         , SV1.PD_CD
                      FROM WSMDBS.TB_SVPD_CST_SVAS_IST_OJ_IZ SV1
                INNER JOIN WSMDBS.TB_SVPD_CST_SVAS_IST_ASN_IZ SV2
                        ON SV1.CST_SV_ASN_NO = SV2.CST_SV_ASN_NO
                      AND SV2.DTA_DL_YN = 'N'
               INNER JOIN PART_INF P1
                       ON SV1.PD_CD = P1.PD_CD
                     WHERE 1=1
                       AND SV2.SV_BIZ_DCLSF_CD LIKE '11%'
                       AND SV2.WK_PRGS_STAT_CD IN ('00', '10')
                       AND SV2.VST_CNFMDT BETWEEN #{baseDt} AND TO_CHAR(TO_DATE(#{baseDt}) + 14, 'YYYYMMDD')
                   )
            WHERE 1=1
         GROUP BY SV_CNR_OG_ID, VST_CNFMDT, PD_CD
        )

        SELECT V2.*
             , NVL(V2.SUM_QTY_TOT,0) - NVL(V2.AGG_ASN_CNT,0) AS DATE_QTY  /* 창고-설치수 = 수량 총합 */
          FROM (
                SELECT V1.OG_CD
                     , V1.OG_NM
                     , V1.PD_CD
                     , V1.SAP_MAT_CD
                     , V1.PD_NM
                     , V1.SUM_QTY_DV_CD_0 AS SUM_QTY_CENTER
                     , V1.SUM_QTY_DV_CD_1 AS SUM_QTY_ENG
                     , V1.SUM_QTY_DV_CD AS SUM_QTY_TOT
                     , ASN_DATE
                     , TO_CHAR(TO_DATE(ASN_DATE), 'dy') AS ASN_DOW
                     , NVL(A1.CNT,0) AS ASN_QTY  /* 설치수 */
                     , RN
                     , SUM(NVL(A1.CNT,0)) OVER(PARTITION BY V1.OG_CD, V1.PD_CD ORDER BY V1.ASN_DATE RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS AGG_ASN_CNT /* 설치 총합*/
                  FROM (
                        SELECT *
                          FROM WARE_QTY_INF W1
                             , DATE_INF
                       ) V1
       LEFT OUTER JOIN ASN_INF A1
                    ON V1.OG_CD = A1.SV_CNR_OG_ID
                   AND V1.ASN_DATE = A1.VST_CNFMDT
                   AND V1.PD_CD = A1.PD_CD
        ) V2
    </select>

    <select id="selectInstallationStockPsByDayPd"
            resultType="com.kyowon.sms.wells.web.service.stock.dvo.WsnaInstallationStockPsByDayPdValueDvo">

        WITH PART_INF AS ( --품목정보
            SELECT P1.PD_CD
                 , P2.SAP_MAT_CD    /*SAP자재코드*/
                 , P2.PD_NM /*품목명*/
                 , P1.PD_PRP_VAL06 AS AS_LDTM /*리드타임, AS_LDTM*/
                 , P1.PD_PRP_VAL17 AS AS_MAT_MNG_TP_CD /*자재관리유형, AS_MAT_MNG_TP_CD, MAT_MNGT_DV_CD 1 기초1, 2 기초2, 3 기초3, 4 기초4, 5 기초5, 6 기초6, 7 기초7, 8 기초8*/
                 , P1.PD_PRP_VAL21 AS AS_MAT_CMN_CLSF_CD /*AS자재 공통분류, AS_MAT_CMN_CLSF_CD, CMN_PART_DV_CD*/
                 , P1.PD_PRP_VAL30 AS TRNOVR_RT_OJ_YN /*회전율 대상여부, TRNOVR_RT_OJ_YN*/
                 , P1.PD_PRP_VAL07 AS MIN_GO_QTY /*최소발주량, MIN_GO_QTY*/
                 , P1.PD_PRP_VAL32 AS UI_EXPSR_YN /*사용여부*/
                 , P1.PD_PRP_VAL36 AS SV_MAT_GRP_CD	/*서비스자재그룹 A 일반, B 설치, C 필터, D 피팅/폼, E 중수리, F 소모품, G 공구*/
                 , (CASE WHEN P1.PD_PRP_VAL20 IS NULL THEN SUBSTR(P1.PD_PRP_VAL01,2,1) ELSE P1.PD_PRP_VAL20 END) AS AS_MAT_ITM_GRP_CD /*PD_GRP_CD	AS자재 품목그룹*/
                 , P1.PD_PRP_VAL26 AS AS_SPL_UNIT_AMT /*물류의 공급단가(물류 매각시 사용단가)*/
                 , P1.PD_PRP_VAL01 || P1.PD_PRP_VAL31 AS KIWI_PD_CD
              FROM WSMDBS.TB_PDBS_PD_ECOM_PRP_DTL P1  /*상품각사속성상세*/
                   INNER JOIN TB_PDBS_PD_BAS P2
                           ON P1.PD_CD = P2.PD_CD
                          AND P2.PD_TP_CD = 'M'    /*상품유형코드 : C 복합상품, P 기준상품, S 서비스, M 교재제품, Y 융합상품*/
                          AND P2.DTA_DL_YN = 'N'
             WHERE 1=1
               AND P1.PD_EXTS_PRP_GRP_CD = 'PART'
               --품목종류 구분값이 있을 경우, 전체면 조건 제거    +
               AND P1.PD_PRP_VAL19 = '4'    /*AS자재 품목종류, AS_MAT_ITM_KND_CD, ITM_KND_CD*/
               --사용여부 Y, N 조건 값이 있을 경우, 전체면 조건 제거
               AND P1.PD_PRP_VAL32 = 'Y'
               --품목코드 선택(무조건 선택해야 함)
               --AND P1.PD_CD = 'WM01100682'
               AND P1.DTA_DL_YN = 'N'
               --AND P1.PD_PRP_VAL01 || P1.PD_PRP_VAL31= '42800000000'
            --           AND P1.PD_CD = 'WM01100241'
        )
        , OG_PRTNR_WARE_INF AS (
            SELECT *
              FROM ( ----조직 및 창고
                SELECT DISTINCT  O1.BASE_YM
                               , O1.OG_ID
                               , O1.OG_TP_CD
                               , O1.OG_CD
                               , O1.OG_NM
                               , O1.SORT_ODR
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR1_LEVL_OG_ID WHEN O1.OG_TP_CD IN ('W06') THEN '71314' ELSE O1.OG_ID END) AS L1_HGR_OG_ID
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR2_LEVL_OG_ID ELSE O1.OG_ID END) AS L2_HGR_OG_ID
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR3_LEVL_OG_ID ELSE O1.OG_ID END) AS L3_HGR_OG_ID
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR1_LEVL_OG_CD WHEN O1.OG_TP_CD IN ('W06') THEN '71314' ELSE O1.OG_CD END) AS L1_HGR_OG_CD
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR2_LEVL_OG_CD ELSE O1.OG_CD END) AS L2_HGR_OG_CD
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR3_LEVL_OG_CD ELSE O1.OG_CD END) AS L3_HGR_OG_CD
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR1_LEVL_OG_NM WHEN O1.OG_TP_CD IN ('W06') THEN 'Wells CS운영팀' ELSE O1.OG_NM END) AS L1_HGR_OG_NM
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR2_LEVL_OG_NM ELSE O1.OG_NM END) AS L2_HGR_OG_NM
                               , (CASE WHEN O1.OG_TP_CD IN ('W02', 'W03') THEN DGR3_LEVL_OG_NM ELSE O1.OG_NM END) AS L3_HGR_OG_NM
                               , O1.HGR_OG_ID
                               , S1.WARE_NO
                               , S1.WARE_NM
                               , S1.WARE_USE_YN
                               , S1.WARE_MNGT_PRTNR_NO
                               , S1.WARE_DTL_DV_CD
                               , S1.HGR_WARE_NO
                               , S1.STD_WARE_USE_YN    --표준창고사용여부
                               , O2.PRTNR_NO
                               , O2.PRTNR_KNM
                               , O2.FST_CNTR_DT           /*최초계약일자*/
                               , O2.FNL_CLTN_DT           /*최종해약일자*/
                               , O2.RCNTR_DT              /*재계약일자*/
                               , O2.CLTN_DT               /*해약일자*/
                               , O2.CNTR_DT               /*계약일자*/
                               , O2.HIR_FOM_CD            /*고용형태코드,1 사업자, 2 계약직,3 정규직, 4 법인영업수수료대상	, 5 강사, 9 기타(위탁)*/
                               , O2.BZ_STAT_CD            /*사업상태코드, 1 사업, 2 해약, 3 휴업*/
                               , O2.PSTN_DV_CD            /*직급구분코드*/
                               , O2.RSB_DV_CD             /*직책구분코드*/
                               , O2.ROL_DV_CD             /*직무구분코드*/
                               , O2.PRTNR_GD_CD           /*파트너등급코드*/
                               , O2.QLF_DV_CD             /*자격구분코드*/
                               , O2.PERF_EXCD_OJ_YN       /*실적제외대상여부*/
                               , O2.RDS_DSB_EXCD_OJ_YN    /*RDS지급제외대상여부*/
                               , O3.PRTNR_GD_CD AS ENG_PRTNR_GD_CD             /*파트너등급코드*/
                               , COUNT(1) OVER (PARTITION BY HGR_OG_ID ORDER BY HGR_OG_ID) AS HTR_CNT
                               , ROW_NUMBER() OVER(PARTITION BY S1.WARE_NO, O3.OG_TP_CD, O3.PRTNR_NO ORDER BY O3.APY_STRTDT DESC) AS PRTNR_GD_CD_RNK
                            FROM WSMDBS.TB_OGBS_MM_OG_IZ O1  /*월조직내역*/
                 LEFT OUTER JOIN TB_SVST_MCBY_WARE_IZ S1 /*월별창고내역*/
                              ON O1.BASE_YM = S1.APY_YM
                             AND O1.OG_TP_CD = S1.OG_TP_CD
                             AND O1.OG_ID = S1.OG_ID
                           --AND S1.WARE_DTL_DV_CD LIKE '2%'
                           --AND S1.WARE_USE_YN = 'Y'  /*미사용창고에서 반품 되는 경우도 있기 때문에*/
                             AND S1.DTA_DL_YN = 'N'
                 LEFT OUTER JOIN WSMDBS.TB_OGBS_MM_PRTNR_IZ O2 /*월파트너내역*/
                              ON S1.APY_YM = O2.BASE_YM
                             AND S1.OG_TP_CD = O2.OG_TP_CD
                             AND S1.OG_ID = O2.OG_ID
                             AND S1.WARE_MNGT_PRTNR_NO = O2.PRTNR_NO
                             --퇴사자제외 조건 선택 시
                             --AND O2.CLTN_DT IS  NULL
                 LEFT OUTER JOIN WSMDBS.TB_OGPS_EGER_GD_RGST_IZ O3 /*엔지니어등급등록내역*/
                              ON O3.OG_TP_CD = O2.OG_TP_CD
                             AND O3.PRTNR_NO = O2.PRTNR_NO
                             AND SUBSTR(#{baseDt},1,6) || '01' BETWEEN O3.APY_STRTDT AND O3.APY_ENDDT
                             AND O3.DTA_DL_YN = 'N'
                           WHERE 1=1
                             AND ((S1.WARE_DV_CD = '1' AND S1.WARE_NO = '100002') OR (S1.WARE_DV_CD = '2'))
                             AND O1.BASE_YM = LEAST(SUBSTR(#{baseDt},1,6), TO_CHAR(SYSDATE, 'YYYYMM'))
                            --AND (S1.WARE_NO = '201551' OR  S1.HGR_WARE_NO = '201551')
                            --창고사용여부 Y, N 조건 값이 있을 경우, 전체면 조건 제거
                             AND S1.WARE_USE_YN = 'Y'
                            --엔지니어선택시
                            --AND O1.OG_TP_CD IN ('W03','W06')
                            --매니저선택시
                            --AND O1.OG_TP_CD IN ('W06')
                            --조직선택시
                            <if test="@MybatisUtils@isNotEmpty(svCnr)">
                                AND O1.OG_ID IN (#{svCnr}, 'W06-99992')
                            </if>
                            --개인선택시
                            --AND O2.PRTNR_NO = '36649'
                             AND O1.OG_CD != '71314'
                             AND O1.DTA_DL_YN = 'N'
                        ORDER BY O1.BASE_YM, O1.OG_CD, S1.WARE_NO
            )
        WHERE 1=1
          AND PRTNR_GD_CD_RNK  = '1'
        )
        , WARE_QTY_INF AS (
            SELECT V2.OG_CD
                 , V2.OG_NM
                 , V2.PD_CD
                 , V2.SAP_MAT_CD
                 , V2.PD_NM
                 , NVL(SUM(SUM_QTY_DV_CD_0),0) AS SUM_QTY_DV_CD_0
                 , NVL(SUM(SUM_QTY_DV_CD_1),0) AS SUM_QTY_DV_CD_1
                 , SUM(NVL(SUM_QTY_DV_CD_0, 0) + NVL(SUM_QTY_DV_CD_1,0)) AS SUM_QTY_DV_CD
             FROM (
                SELECT V1.OG_CD
                     , V1.OG_NM
                     , V1.WARE_DTL_DV_CD
                     , V1.PD_CD
                     , V1.SAP_MAT_CD
                     , V1.PD_NM
                     , (CASE WHEN V1.WARE_DTL_DV_CD LIKE '%0' THEN SUM(PITM_STOC_QTY) END) AS SUM_QTY_DV_CD_0
                     , (CASE WHEN V1.WARE_DTL_DV_CD LIKE '%1' THEN SUM(PITM_STOC_QTY) END) AS SUM_QTY_DV_CD_1
                --     , SUM(PITM_STOC_QTY) OVER(PARTITION BY V1.SUBSUM_GROUPKEY, SUBSTR(V1.WARE_DTL_DV_CD,1,1) ORDER BY V1.SUBSUM_GROUPKEY RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SUM_QTY_DV_CD_0
                --     , SUM(PITM_STOC_QTY) OVER(PARTITION BY V1.SUBSUM_GROUPKEY, SUBSTR(V1.WARE_DTL_DV_CD,2,1) ORDER BY V1.SUBSUM_GROUPKEY RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SUM_QTY_DV_CD_1
                  FROM (
                        SELECT W1.WARE_NO
                             , W1.WARE_NM
                             , W1.OG_CD
                             , W1.OG_NM
                             , W1.WARE_DTL_DV_CD
                             , P1.PD_CD
                             , P1.SAP_MAT_CD
                             , P1.PD_NM
                               --등급에 따라 재고 수량 계산
                            <if test="@MybatisUtils@isNotEmpty(pdGdCd)">
                             , (CASE WHEN #{pdGdCd} = 'A' THEN PITM_STOC_A_GD_QTY
                                     WHEN #{pdGdCd} = 'B' THEN PITM_STOC_B_GD_QTY
                                     WHEN #{pdGdCd} = 'E' THEN PITM_STOC_E_GD_QTY
                                     WHEN #{pdGdCd} = 'R' THEN PITM_STOC_R_GD_QTY
                                     ELSE 0
                             END) AS PITM_STOC_QTY
                            </if>
                            <if test="@MybatisUtils@isEmpty(pdGdCd)">
                            , ( PITM_STOC_A_GD_QTY + PITM_STOC_B_GD_QTY + PITM_STOC_E_GD_QTY + PITM_STOC_R_GD_QTY ) AS PITM_STOC_QTY
                            </if>
                          FROM OG_PRTNR_WARE_INF W1
                    INNER JOIN WSMDBS.TB_SVST_MCITM_STOC_IZ SV1
                            ON W1.WARE_NO = SV1.WARE_NO
                           AND SV1.BASE_YM = SUBSTR(#{baseDt},1,6)
                           AND SV1.DTA_DL_YN = 'N'
                    INNER JOIN PART_INF P1
                           ON SV1.ITM_PD_CD = P1.PD_CD
                         WHERE 1=1
                        <if test="@MybatisUtils@isNotEmpty(svCnr)">
                            AND W1.OG_ID = #{svCnr}
                        </if>
                      ORDER BY W1.OG_CD, W1.OG_NM, W1.WARE_NO, P1.PD_CD, P1.SAP_MAT_CD, P1.PD_NM
                  ) V1
                WHERE 1=1
             GROUP BY V1.OG_CD, V1.OG_NM, V1.WARE_DTL_DV_CD, V1.PD_CD, V1.SAP_MAT_CD, V1.PD_NM
             ORDER BY V1.OG_CD, V1.OG_NM, V1.WARE_DTL_DV_CD, V1.PD_CD, V1.SAP_MAT_CD, V1.PD_NM
             ) V2
             WHERE 1=1
         GROUP BY V2.OG_CD, V2.OG_NM, V2.PD_CD, V2.SAP_MAT_CD, V2.PD_NM
         ORDER BY V2.OG_CD, V2.PD_CD, V2.SAP_MAT_CD, V2.PD_NM
        )
        , WARE_QTY_99992 AS (
            SELECT V2.OG_CD
                 , V2.OG_NM
                 , V2.PD_CD
                 , V2.SAP_MAT_CD
                 , V2.PD_NM
                 , SUM(NVL(SUM_QTY_DV_CD_0, 0) + NVL(SUM_QTY_DV_CD_1,0)) AS SUM_QTY_DV_CD
              FROM (
                    SELECT V1.OG_CD
                         , V1.OG_NM
                         , V1.WARE_DTL_DV_CD
                         , V1.PD_CD
                         , V1.SAP_MAT_CD
                         , V1.PD_NM
                         , (CASE WHEN V1.WARE_DTL_DV_CD LIKE '%0' THEN SUM(PITM_STOC_QTY) END) AS SUM_QTY_DV_CD_0
                         , (CASE WHEN V1.WARE_DTL_DV_CD LIKE '%1' THEN SUM(PITM_STOC_QTY) END) AS SUM_QTY_DV_CD_1
                    --     , SUM(PITM_STOC_QTY) OVER(PARTITION BY V1.SUBSUM_GROUPKEY, SUBSTR(V1.WARE_DTL_DV_CD,1,1) ORDER BY V1.SUBSUM_GROUPKEY RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SUM_QTY_DV_CD_0
                    --     , SUM(PITM_STOC_QTY) OVER(PARTITION BY V1.SUBSUM_GROUPKEY, SUBSTR(V1.WARE_DTL_DV_CD,2,1) ORDER BY V1.SUBSUM_GROUPKEY RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SUM_QTY_DV_CD_1
                      FROM (
                            SELECT W1.WARE_NO
                                 , W1.WARE_NM
                                 , W1.OG_CD
                                 , W1.OG_NM
                                 , W1.WARE_DTL_DV_CD
                                 , P1.PD_CD
                                 , P1.SAP_MAT_CD
                                 , P1.PD_NM
                                   --등급에 따라 재고 수량 계산
                                <if test="@MybatisUtils@isNotEmpty(pdGdCd)">
                                 , (CASE WHEN #{pdGdCd} = 'A' THEN PITM_STOC_A_GD_QTY
                                         WHEN #{pdGdCd} = 'B' THEN PITM_STOC_B_GD_QTY
                                         WHEN #{pdGdCd} = 'E' THEN PITM_STOC_E_GD_QTY
                                         WHEN #{pdGdCd} = 'R' THEN PITM_STOC_R_GD_QTY
                                         ELSE 0
                                 END) AS PITM_STOC_QTY
                                </if>
                                <if test="@MybatisUtils@isEmpty(pdGdCd)">
                                , ( PITM_STOC_A_GD_QTY + PITM_STOC_B_GD_QTY + PITM_STOC_E_GD_QTY + PITM_STOC_R_GD_QTY ) AS PITM_STOC_QTY
                                </if>
                              FROM OG_PRTNR_WARE_INF W1
                                   INNER JOIN WSMDBS.TB_SVST_MCITM_STOC_IZ SV1
                                           ON W1.WARE_NO = SV1.WARE_NO
                                          AND SV1.BASE_YM = SUBSTR(#{baseDt},1,6)
                                          AND SV1.DTA_DL_YN = 'N'
                                   INNER JOIN PART_INF P1
                                           ON SV1.ITM_PD_CD = P1.PD_CD
                             WHERE 1=1
                             AND W1.OG_ID = 'W06-99992'
                             ORDER BY W1.OG_CD, W1.OG_NM, W1.WARE_NO, P1.PD_CD, P1.SAP_MAT_CD, P1.PD_NM
                           ) V1
                     WHERE 1=1
                     GROUP BY V1.OG_CD, V1.OG_NM, V1.WARE_DTL_DV_CD, V1.PD_CD, V1.SAP_MAT_CD, V1.PD_NM
                     ORDER BY V1.OG_CD, V1.OG_NM, V1.WARE_DTL_DV_CD, V1.PD_CD, V1.SAP_MAT_CD, V1.PD_NM
                   ) V2
             WHERE 1=1
             GROUP BY V2.OG_CD, V2.OG_NM, V2.PD_CD, V2.SAP_MAT_CD, V2.PD_NM
             ORDER BY V2.OG_CD, V2.PD_CD, V2.SAP_MAT_CD, V2.PD_NM
            )
        , DATE_INF AS (
            SELECT TO_CHAR(TO_DATE(#{baseDt}) + LEVEL-1, 'YYYYMMDD') AS ASN_DATE
                 , LEVEL AS RN
              FROM DUAL
  CONNECT BY LEVEL <![CDATA[<]]> 17
        )
        , ASN_INF AS (
            SELECT SV_CNR_OG_ID
                 , VST_CNFMDT
                 , PD_CD
                 , COUNT(1) AS CNT
              FROM (
                    SELECT REPLACE(SV2.SV_CNR_OG_ID, 'W06-', '') AS SV_CNR_OG_ID
                         , SV2.VST_CNFMDT
                         , SV1.PD_CD
                      FROM WSMDBS.TB_SVPD_CST_SVAS_IST_OJ_IZ SV1
                INNER JOIN WSMDBS.TB_SVPD_CST_SVAS_IST_ASN_IZ SV2
                        ON SV1.CST_SV_ASN_NO = SV2.CST_SV_ASN_NO
                       AND SV2.DTA_DL_YN = 'N'
                INNER JOIN PART_INF P1
                        ON SV1.PD_CD = P1.PD_CD
                     WHERE 1=1
                       AND SV2.SV_BIZ_DCLSF_CD LIKE '11%'
                       AND SV2.WK_PRGS_STAT_CD IN ('00', '10')
                       AND SV2.VST_CNFMDT BETWEEN #{baseDt} AND TO_CHAR(TO_DATE(#{baseDt}) + 14, 'YYYYMMDD')
                   )
             WHERE 1=1
             GROUP BY SV_CNR_OG_ID, VST_CNFMDT, PD_CD
        )
        , SUM_99992 AS (
             SELECT V1.OG_CD
                  , V1.OG_NM
                  , V1.PD_CD
                  , V1.SAP_MAT_CD
                  , V1.PD_NM
                  , V1.SUM_QTY_DV_CD
                  , ASN_DATE
                  , TO_CHAR(TO_DATE(ASN_DATE), 'dy') AS ASN_DOW
                  , NVL(A1.CNT,0) AS ASN_QTY
                  , SUM(NVL(A1.CNT,0)) OVER(PARTITION BY V1.OG_CD, V1.PD_CD ORDER BY V1.ASN_DATE RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS AGG_ASN_CNT
                  , RN
              FROM (
                    SELECT *
                      FROM WARE_QTY_99992 W1
                         , DATE_INF
                   ) V1
   LEFT OUTER JOIN ASN_INF A1
                ON V1.OG_CD = A1.SV_CNR_OG_ID
               AND V1.ASN_DATE = A1.VST_CNFMDT
               AND V1.PD_CD = A1.PD_CD
        )
        SELECT V3.*
             , SUM_99992.SUM_QTY_DV_CD AS LGST_QTY
          FROM (
            SELECT V2.*
                 , NVL(V2.SUM_QTY_TOT,0) - NVL(V2.AGG_ASN_CNT,0) AS DATE_QTY
              FROM (
                SELECT V1.OG_CD
                     , V1.OG_NM
                     , V1.PD_CD
                     , V1.SAP_MAT_CD
                     , V1.PD_NM
                     , V1.SUM_QTY_DV_CD_0 AS SUM_QTY_CENTER
                     , V1.SUM_QTY_DV_CD_1 AS SUM_QTY_ENG
                     , V1.SUM_QTY_DV_CD AS SUM_QTY_TOT
                     , ASN_DATE
                     , TO_CHAR(TO_DATE(ASN_DATE), 'dy') AS ASN_DOW
                     , NVL(A1.CNT,0) AS ASN_QTY
                     , SUM(NVL(A1.CNT,0)) OVER(PARTITION BY V1.OG_CD, V1.PD_CD ORDER BY V1.ASN_DATE RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS AGG_ASN_CNT
                     , RN
                FROM (
                        SELECT *
                          FROM WARE_QTY_INF W1
                             , DATE_INF
                ) V1
  LEFT OUTER JOIN ASN_INF A1
               ON V1.OG_CD = A1.SV_CNR_OG_ID
              AND V1.ASN_DATE = A1.VST_CNFMDT
              AND V1.PD_CD = A1.PD_CD
             ) v2
         ) V3
INNER JOIN SUM_99992
        ON V3.PD_CD = SUM_99992.PD_CD
       AND V3.RN = SUM_99992.RN
     WHERE 1=1
  ORDER BY V3.PD_CD, V3.RN
    </select>
</mapper>
