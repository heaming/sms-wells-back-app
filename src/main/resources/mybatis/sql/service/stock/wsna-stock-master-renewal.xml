<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.service.stock.mapper.WsnaStockMasterRenewalMapper">

    <update id="updateBaseTermDateStocks">
        UPDATE TB_SVST_MCITM_STOC_IZ
           SET BTD_STOC_A_GD_QTY = ${pitmQtyA}
             , BTD_STOC_E_GD_QTY = ${pitmQtyE}
             , BTD_STOC_R_GD_QTY = ${pitmQtyR}
             , BTD_STOC_B_GD_QTY = ${pitmQtyB}
             <include refid="COMMON.updateSystemField"/>
         WHERE BASE_YM = #{baseYm}
           AND WARE_NO = #{wareNo}
           AND PD_CD = #{pdCd}
    </update>

    <update id="updateMonthlyStocks">
        UPDATE TB_SVST_MCITM_STOC_IZ
           SET PITM_STOC_A_GD_QTY = ${chekQtyA}
             , PITM_STOC_E_GD_QTY = ${chekQtyE}
             , PITM_STOC_R_GD_QTY = ${chekQtyR}
             , PITM_STOC_B_GD_QTY = ${chekQtyB}
             , PRCHS_STR_QTY = ${buyA}
             , PRCHS_STR_B_GD_QTY = ${buyB}
             , NOM_STR_A_GD_QTY = ${normIA}
             , NOM_STR_E_GD_QTY = ${normIE}
             , NOM_STR_R_GD_QTY = ${normIR}
             , NOM_STR_B_GD_QTY = ${normIB}
             , QOM_ASN_STR_A_GD_QTY = ${alloIA}
             , QOM_ASN_STR_E_GD_QTY = ${alloIE}
             , QOM_ASN_STR_R_GD_QTY = ${alloIR}
             , QOM_ASN_STR_B_GD_QTY = ${alloIB}
             , QOM_MMT_STR_A_GD_QTY = ${transIA}
             , QOM_MMT_STR_E_GD_QTY = ${transIE}
             , QOM_MMT_STR_R_GD_QTY = ${transIR}
             , QOM_MMT_STR_B_GD_QTY = ${transIB}
             , RTNGD_STR_INSI_A_GD_QTY = ${retIiA}
             , RTNGD_STR_INSI_E_GD_QTY = ${retIiE}
             , RTNGD_STR_INSI_R_GD_QTY = ${retIiR}
             , RTNGD_STR_INSI_B_GD_QTY = ${retIiB}
             , RTNGD_STR_OTSD_A_GD_QTY = ${retEiA}
             , RTNGD_STR_OTSD_E_GD_QTY = ${retEiE}
             , RTNGD_STR_OTSD_R_GD_QTY = ${retEiR}
             , RTNGD_STR_OTSD_B_GD_QTY = ${retEiB}
             , ETC_STR_A_GD_QTY = ${etcIA}
             , ETC_STR_E_GD_QTY = ${etcIE}
             , ETC_STR_A_GD_QTY1 = ${etc1IA}
             , ETC_STR_E_GD_QTY1 = ${etc1IE}
             , ETC_STR_R_GD_QTY1 = ${etc1IR}
             , ETC_STR_B_GD_QTY1 = ${etc1IB}
             , NOM_OSTR_A_GD_QTY = ${normOA}
             , NOM_OSTR_E_GD_QTY = ${normOE}
             , NOM_OSTR_R_GD_QTY = ${normOR}
             , NOM_OSTR_B_GD_QTY = ${normOB}
             , QOM_ASN_OSTR_A_GD_QTY = ${alloOA}
             , QOM_ASN_OSTR_E_GD_QTY = ${alloOE}
             , QOM_ASN_OSTR_R_GD_QTY = ${alloOR}
             , QOM_ASN_OSTR_B_GD_QTY = ${alloOB}
             , QOM_MMT_OSTR_A_GD_QTY = ${transOA}
             , QOM_MMT_OSTR_E_GD_QTY = ${transOE}
             , QOM_MMT_OSTR_R_GD_QTY = ${transOR}
             , QOM_MMT_OSTR_B_GD_QTY = ${transOB}
             , RTNGD_OSTR_INSI_A_GD_QTY = ${retIoA}
             , RTNGD_OSTR_INSI_E_GD_QTY = ${retIoE}
             , RTNGD_OSTR_INSI_R_GD_QTY = ${retIoR}
             , RTNGD_OSTR_INSI_B_GD_QTY = ${retIoB}
             , RTNGD_OSTR_OTSD_A_GD_QTY = ${retEoA}
             , RTNGD_OSTR_OTSD_E_GD_QTY = ${retEoE}
             , RTNGD_OSTR_OTSD_R_GD_QTY = ${retEoR}
             , RTNGD_OSTR_OTSD_B_GD_QTY = ${retEoB}
             , SELL_OSTR_QTY   = ${saleOA}
             , SELL_OSTR_B_GD_QTY = ${saleOB}
             , DSU_OSTR_A_GD_QTY = ${disOA}
             , DSU_OSTR_E_GD_QTY = ${disOE}
             , DSU_OSTR_R_GD_QTY = ${disOR}
             , DSU_OSTR_B_GD_QTY = ${disOB}
             , ETC_OSTR_A_GD_QTY = ${etcOA}
             , ETC_OSTR_E_GD_QTY = ${etcOE}
             , ETC_OSTR_R_GD_QTY = ${etcOR}
             , ETC_OSTR_B_GD_QTY = ${etcOB}
             , REFR_OSTR_A_GD_QTY = ${refurOA}
             , REFR_OSTR_E_GD_QTY = ${refurOE}
             , REFR_OSTR_R_GD_QTY = ${refurOR}
             , REFR_OSTR_B_GD_QTY = ${refurOB}
             , ETC_OSTR_A_GD_QTY1 = ${etc1OA}
             , ETC_OSTR_E_GD_QTY1 = ${etc1OE}
             , ETC_OSTR_R_GD_QTY1 = ${etc1OR}
             , ETC_OSTR_B_GD_QTY1 = ${etc1OB}
             , WK_OSTR_A_GD_QTY = ${wrkOA}
             , WK_OSTR_E_GD_QTY = ${wrkOE}
             , WK_OSTR_R_GD_QTY = ${wrkOR}
             , WK_OSTR_B_GD_QTY = ${wrkOB}
             <include refid="COMMON.updateSystemField"/>
         WHERE BASE_YM = #{baseYm}
           AND WARE_NO = #{wareNo}
           AND PD_CD = #{pdCd}
    </update>

    <update id="updatePointInTimeStocks">
        UPDATE TB_SVST_CST_SV_ITM_STOC_IZ
           SET PITM_STOC_A_GD_QTY = ${pitmStocAGdQty}
             , PITM_STOC_E_GD_QTY = ${pitmStocEGdQty}
             , PITM_STOC_R_GD_QTY = ${pitmStocRGdQty}
             , PITM_STOC_B_GD_QTY = ${pitmStocBGdQty}
             <include refid="COMMON.updateSystemField"/>
         WHERE WARE_NO = #{wareNo}
           AND ITM_PD_CD = #{itmPdCd}
    </update>

    <update id="updateMovementStocks">
        UPDATE TB_SVST_CST_SV_ITM_STOC_IZ
           SET MMT_STOC_A_GD_QTY = ${buffQtyA}
             , MMT_STOC_E_GD_QTY = ${buffQtyE}
             , MMT_STOC_R_GD_QTY = ${buffQtyR}
             , MMT_STOC_B_GD_QTY = ${buffQtyB}
             <include refid="COMMON.updateSystemField"/>
         WHERE WARE_NO = #{wareNo}
           AND ITM_PD_CD = #{itmPdCd}
    </update>

    <select id="selectBaseTermDateDiff" resultType="com.kyowon.sms.wells.web.service.stock.dvo.WsnaStockMasterRenewalDvo">
    <![CDATA[
        SELECT T2.BASE_YM
             , T2.WARE_NO
             , T2.PD_CD
             , T1.PITM_STOC_A_GD_QTY AS PITM_QTY_A
             , T1.PITM_STOC_E_GD_QTY AS PITM_QTY_E
             , T1.PITM_STOC_R_GD_QTY AS PITM_QTY_R
             , T1.PITM_STOC_B_GD_QTY AS PITM_QTY_B
          FROM TB_SVST_MCITM_STOC_IZ T1 /* 월별품목재고내역 */
         INNER JOIN TB_SVST_MCITM_STOC_IZ T2 /* 월별품목재고내역 */
            ON T2.BASE_YM = T1.BASE_YM
           AND T2.WARE_NO = T1.WARE_NO
           AND T2.PD_CD = T1.PD_CD
         WHERE T1.BASE_YM = #{mngtYm}
           AND T1.DTA_DL_YN = 'N'
           AND T2.DTA_DL_YN = 'N'
           AND SUBSTR(T2.WARE_NO, 1 ,1) = #{wareDvCd}
           AND (T2.BTD_STOC_A_GD_QTY <> T1.PITM_STOC_A_GD_QTY
               OR T2.BTD_STOC_E_GD_QTY <> T1.PITM_STOC_E_GD_QTY
               OR T2.BTD_STOC_R_GD_QTY <> T1.PITM_STOC_R_GD_QTY
               OR T2.BTD_STOC_B_GD_QTY <> T1.PITM_STOC_B_GD_QTY)
    ]]>
    </select>

    <select id="selectMonthlyDiff" resultType="com.kyowon.sms.wells.web.service.stock.dvo.WsnaStockMasterRenewalDvo">
    <![CDATA[
        SELECT BASE_YM
             , WARE_NO
             , PD_CD
             , CHEK_QTY_A
             , CHEK_QTY_B
             , CHEK_QTY_E
             , CHEK_QTY_R
             , BUY_A
             , BUY_B
             , NORM_I_A
             , NORM_I_E
             , NORM_I_R
             , NORM_I_B
             , ALLO_I_A
             , ALLO_I_E
             , ALLO_I_R
             , ALLO_I_B
             , TRANS_I_A
             , TRANS_I_E
             , TRANS_I_R
             , TRANS_I_B
             , RET_II_A
             , RET_II_E
             , RET_II_R
             , RET_II_B
             , RET_EI_A
             , RET_EI_E
             , RET_EI_R
             , RET_EI_B
             , ETC_I_A
             , ETC1_I_A
             , ETC_I_E
             , ETC1_I_E
             , ETC1_I_R
             , ETC1_I_B
             , NORM_O_A
             , NORM_O_E
             , NORM_O_R
             , NORM_O_B
             , ALLO_O_A
             , ALLO_O_E
             , ALLO_O_R
             , ALLO_O_B
             , TRANS_O_A
             , TRANS_O_E
             , TRANS_O_R
             , TRANS_O_B
             , RET_IO_A
             , RET_IO_E
             , RET_IO_R
             , RET_IO_B
             , RET_EO_A
             , RET_EO_E
             , RET_EO_R
             , RET_EO_B
             , SALE_O_A
             , SALE_O_B
             , DIS_O_A
             , DIS_O_E
             , DIS_O_R
             , DIS_O_B
             , ETC_O_A
             , ETC_O_E
             , ETC_O_R
             , ETC_O_B
             , REFUR_O_A
             , REFUR_O_E
             , REFUR_O_R
             , REFUR_O_B
             , ETC1_O_A
             , ETC1_O_E
             , ETC1_O_R
             , ETC1_O_B
             , WRK_O_A
             , WRK_O_E
             , WRK_O_R
             , WRK_O_B
          FROM (SELECT T1.BASE_YM
                     , T1.WARE_NO
                     , T1.PD_CD
                     , T1.BTD_STOC_A_GD_QTY
                     , T1.BTD_STOC_B_GD_QTY
                     , T1.BTD_STOC_E_GD_QTY
                     , T1.BTD_STOC_R_GD_QTY
                     , T1.PITM_STOC_A_GD_QTY
                     , (NVL(T1.BTD_STOC_A_GD_QTY, 0) + NVL(BUY_A, 0) + NVL(NORM_I_A, 0) + NVL(ALLO_I_A, 0)
                        + NVL(TRANS_I_A, 0) + NVL(RET_II_A, 0) + NVL(RET_EI_A, 0) + NVL(WRK_I_A, 0)
                        + NVL(ETC1_I_A, 0) + NVL(T1.STOC_ACINSP_STR_A_GD_QTY, 0) + NVL(ETC_I_A, 0))
                        - (NVL(NORM_O_A, 0) + NVL(ALLO_O_A, 0) + NVL(TRANS_O_A, 0) + NVL(RET_IO_A, 0)
                        + NVL(RET_EO_A, 0) + NVL(SALE_O_A, 0) + NVL(DIS_O_A, 0) + NVL(ETC_O_A, 0)
                        + NVL(REFUR_O_A, 0) + NVL(WRK_O_A, 0) + NVL(ETC1_O_A, 0) + NVL(T1.STOC_ACINSP_OSTR_A_GD_QTY, 0)) CHEK_QTY_A
                     , T1.PITM_STOC_B_GD_QTY
                     , (NVL(T1.BTD_STOC_B_GD_QTY, 0) + NVL(BUY_B, 0) + NVL(NORM_I_B, 0) + NVL(ALLO_I_B, 0)
                        + NVL(TRANS_I_B, 0) + NVL(RET_II_B, 0) + NVL(RET_EI_B, 0) + NVL(WRK_I_B, 0)
                        + NVL(ETC1_I_B, 0) + NVL(T1.STOC_ACINSP_STR_B_GD_QTY, 0))
                        - (NVL(NORM_O_B, 0) + NVL(ALLO_O_B, 0) + NVL(TRANS_O_B, 0) + NVL(RET_IO_B, 0)
                        + NVL(RET_EO_B, 0) + NVL(SALE_O_B, 0) + NVL(DIS_O_B, 0) + NVL(ETC_O_B, 0)
                        + NVL(REFUR_O_B, 0) + NVL(WRK_O_B, 0) + NVL(ETC1_O_B, 0) + NVL(T1.STOC_ACINSP_OSTR_B_GD_QTY,0)) CHEK_QTY_B
                     , T1.PITM_STOC_E_GD_QTY
                     , (NVL(T1.BTD_STOC_E_GD_QTY, 0) + NVL(NORM_I_E, 0) + NVL(ALLO_I_E, 0) + NVL(TRANS_I_E, 0)
                        + NVL(RET_II_E, 0) + NVL(RET_EI_E, 0) + NVL(WRK_I_E, 0) + NVL(ETC1_I_E, 0)
                        + NVL(T1.STOC_ACINSP_STR_E_GD_QTY, 0) + NVL(ETC_I_E, 0))
                        - (NVL(NORM_O_E, 0) + NVL(ALLO_O_E, 0) + NVL(TRANS_O_E, 0) + NVL(RET_IO_E,0)
                        + NVL(RET_EO_E, 0) + NVL(DIS_O_E, 0) + NVL(ETC_O_E, 0) + NVL(REFUR_O_E, 0)
                        + NVL(WRK_O_E, 0) + NVL(ETC1_O_E, 0) + NVL(T1.STOC_ACINSP_OSTR_E_GD_QTY, 0)) CHEK_QTY_E
                     , T1.PITM_STOC_R_GD_QTY
                     , (NVL(T1.BTD_STOC_R_GD_QTY, 0) + NVL(NORM_I_R, 0) + NVL(ALLO_I_R, 0) + NVL(TRANS_I_R, 0)
                        + NVL(RET_II_R, 0) + NVL(RET_EI_R, 0) + NVL(WRK_I_R, 0)
                        + NVL(ETC1_I_R, 0) + NVL(T1.STOC_ACINSP_STR_R_GD_QTY, 0))
                        - (NVL(NORM_O_R, 0) + NVL(ALLO_O_R, 0) + NVL(TRANS_O_R, 0) + NVL(RET_IO_R, 0)
                        + NVL(RET_EO_R, 0) + NVL(DIS_O_R, 0) + NVL(ETC_O_R, 0) + NVL(REFUR_O_R, 0)
                        + NVL(WRK_O_R, 0) + NVL(ETC1_O_R, 0) + NVL(T1.STOC_ACINSP_OSTR_R_GD_QTY, 0)) CHEK_QTY_R
                     , T1.PRCHS_STR_QTY
                     , NVL(BUY_A, 0) BUY_A
                     , T1.PRCHS_STR_B_GD_QTY
                     , NVL(BUY_B, 0) BUY_B
                     , T1.NOM_STR_A_GD_QTY, NVL(NORM_I_A,0)  NORM_I_A
                     , T1.NOM_STR_E_GD_QTY,   NVL(NORM_I_E,0)  NORM_I_E
                     , T1.NOM_STR_R_GD_QTY,   NVL(NORM_I_R,0)  NORM_I_R
                     , T1.NOM_STR_B_GD_QTY,   NVL(NORM_I_B,0)  NORM_I_B
                     , T1.QOM_ASN_STR_A_GD_QTY,   NVL(ALLO_I_A,0)  ALLO_I_A
                     , T1.QOM_ASN_STR_E_GD_QTY,   NVL(ALLO_I_E,0)  ALLO_I_E
                     , T1.QOM_ASN_STR_R_GD_QTY,   NVL(ALLO_I_R,0)  ALLO_I_R
                     , T1.QOM_ASN_STR_B_GD_QTY,   NVL(ALLO_I_B,0)  ALLO_I_B
                     , T1.QOM_MMT_STR_A_GD_QTY,  NVL(TRANS_I_A,0) TRANS_I_A
                     , T1.QOM_MMT_STR_E_GD_QTY,  NVL(TRANS_I_E,0) TRANS_I_E
                     , T1.QOM_MMT_STR_R_GD_QTY,  NVL(TRANS_I_R,0) TRANS_I_R
                     , T1.QOM_MMT_STR_B_GD_QTY,  NVL(TRANS_I_B,0) TRANS_I_B
                     , T1.RTNGD_STR_INSI_A_GD_QTY,   NVL(RET_II_A,0)  RET_II_A
                     , T1.RTNGD_STR_INSI_E_GD_QTY,   NVL(RET_II_E,0)  RET_II_E
                     , T1.RTNGD_STR_INSI_R_GD_QTY,   NVL(RET_II_R,0)  RET_II_R
                     , T1.RTNGD_STR_INSI_B_GD_QTY,   NVL(RET_II_B,0)  RET_II_B
                     , T1.RTNGD_STR_OTSD_A_GD_QTY,   NVL(RET_EI_A,0)+NVL(WRK_I_A,0) RET_EI_A
                     , T1.RTNGD_STR_OTSD_E_GD_QTY,   NVL(RET_EI_E,0)+NVL(WRK_I_E,0) RET_EI_E
                     , T1.RTNGD_STR_OTSD_R_GD_QTY,   NVL(RET_EI_R,0)+NVL(WRK_I_R,0) RET_EI_R
                     , T1.RTNGD_STR_OTSD_B_GD_QTY,   NVL(RET_EI_B,0)+NVL(WRK_I_B,0) RET_EI_B
                     , T1.ETC_STR_A_GD_QTY, NVL(ETC_I_A,0) ETC_I_A
                     , T1.ETC_STR_A_GD_QTY1, NVL(ETC1_I_A,0) ETC1_I_A
                     , T1.ETC_STR_E_GD_QTY, NVL(ETC_I_E,0) ETC_I_E
                     , T1.ETC_STR_E_GD_QTY1, NVL(ETC1_I_E,0) ETC1_I_E
                     , T1.ETC_STR_R_GD_QTY1,   NVL(ETC1_I_R,0)  ETC1_I_R
                     , T1.ETC_STR_B_GD_QTY1,   NVL(ETC1_I_B,0)  ETC1_I_B
                     , T1.NOM_OSTR_A_GD_QTY,  NVL(NORM_O_A,0)  NORM_O_A
                     , T1.NOM_OSTR_E_GD_QTY,  NVL(NORM_O_E,0)  NORM_O_E
                     , T1.NOM_OSTR_R_GD_QTY,  NVL(NORM_O_R,0)  NORM_O_R
                     , T1.NOM_OSTR_B_GD_QTY,  NVL(NORM_O_B,0)  NORM_O_B
                     , T1.QOM_ASN_OSTR_A_GD_QTY,  NVL(ALLO_O_A,0)  ALLO_O_A
                     , T1.QOM_ASN_OSTR_E_GD_QTY,  NVL(ALLO_O_E,0)  ALLO_O_E
                     , T1.QOM_ASN_OSTR_R_GD_QTY,  NVL(ALLO_O_R,0)  ALLO_O_R
                     , T1.QOM_ASN_OSTR_B_GD_QTY,  NVL(ALLO_O_B,0)  ALLO_O_B
                     , T1.QOM_MMT_OSTR_A_GD_QTY, NVL(TRANS_O_A,0) TRANS_O_A
                     , T1.QOM_MMT_OSTR_E_GD_QTY, NVL(TRANS_O_E,0) TRANS_O_E
                     , T1.QOM_MMT_OSTR_R_GD_QTY, NVL(TRANS_O_R,0) TRANS_O_R
                     , T1.QOM_MMT_OSTR_B_GD_QTY, NVL(TRANS_O_B,0) TRANS_O_B
                     , T1.RTNGD_OSTR_INSI_A_GD_QTY,  NVL(RET_IO_A,0)  RET_IO_A
                     , T1.RTNGD_OSTR_INSI_E_GD_QTY,  NVL(RET_IO_E,0)  RET_IO_E
                     , T1.RTNGD_OSTR_INSI_R_GD_QTY,  NVL(RET_IO_R,0)  RET_IO_R
                     , T1.RTNGD_OSTR_INSI_B_GD_QTY,  NVL(RET_IO_B,0)  RET_IO_B
                     , T1.RTNGD_OSTR_OTSD_A_GD_QTY,  NVL(RET_EO_A,0)  RET_EO_A
                     , T1.RTNGD_OSTR_OTSD_E_GD_QTY,  NVL(RET_EO_E,0)  RET_EO_E
                     , T1.RTNGD_OSTR_OTSD_R_GD_QTY,  NVL(RET_EO_R,0)  RET_EO_R
                     , T1.RTNGD_OSTR_OTSD_B_GD_QTY,  NVL(RET_EO_B,0)  RET_EO_B
                     , T1.SELL_OSTR_QTY,       NVL(SALE_O_A,0)  SALE_O_A
                     , T1.SELL_OSTR_B_GD_QTY,  NVL(SALE_O_B,0)  SALE_O_B
                     , T1.DSU_OSTR_A_GD_QTY,   NVL(DIS_O_A,0)   DIS_O_A
                     , T1.DSU_OSTR_E_GD_QTY,   NVL(DIS_O_E,0)   DIS_O_E
                     , T1.DSU_OSTR_R_GD_QTY,   NVL(DIS_O_R,0)   DIS_O_R
                     , T1.DSU_OSTR_B_GD_QTY,   NVL(DIS_O_B,0)   DIS_O_B
                     , T1.ETC_OSTR_A_GD_QTY,   NVL(ETC_O_A,0)   ETC_O_A
                     , T1.ETC_OSTR_E_GD_QTY,   NVL(ETC_O_E,0)   ETC_O_E
                     , T1.ETC_OSTR_R_GD_QTY,   NVL(ETC_O_R,0)   ETC_O_R
                     , T1.ETC_OSTR_B_GD_QTY,   NVL(ETC_O_B,0)   ETC_O_B
                     , T1.REFR_OSTR_A_GD_QTY,   NVL(REFUR_O_A,0)   REFUR_O_A
                     , T1.REFR_OSTR_E_GD_QTY,   NVL(REFUR_O_E,0)   REFUR_O_E
                     , T1.REFR_OSTR_R_GD_QTY,   NVL(REFUR_O_R,0)   REFUR_O_R
                     , T1.REFR_OSTR_B_GD_QTY,   NVL(REFUR_O_B,0)   REFUR_O_B
                     , T1.ETC_OSTR_A_GD_QTY1,  NVL(ETC1_O_A,0)  ETC1_O_A
                     , T1.ETC_OSTR_E_GD_QTY1,  NVL(ETC1_O_E,0)  ETC1_O_E
                     , T1.ETC_OSTR_R_GD_QTY1,  NVL(ETC1_O_R,0)  ETC1_O_R
                     , T1.ETC_OSTR_B_GD_QTY1,  NVL(ETC1_O_B,0)  ETC1_O_B
                     , T1.WK_OSTR_A_GD_QTY,   NVL(WRK_O_A,0)   WRK_O_A
                     , T1.WK_OSTR_E_GD_QTY,   NVL(WRK_O_E,0)   WRK_O_E
                     , T1.WK_OSTR_R_GD_QTY,   NVL(WRK_O_R,0)   WRK_O_R
                     , T1.WK_OSTR_B_GD_QTY,   NVL(WRK_O_B,0)   WRK_O_B
                  FROM TB_SVST_MCITM_STOC_IZ T1 /* 월별품목재고내역 */
                  LEFT OUTER JOIN (SELECT STR_RGST_DT
                                         , WARE_NO
                                         , ITM_PD_CD
                                         , SUM(BUY_A)       BUY_A
                                         , SUM(BUY_B)       BUY_B
                                         , SUM(NORM_I_A)    NORM_I_A
                                         , SUM(NORM_I_E)    NORM_I_E
                                         , SUM(NORM_I_R)    NORM_I_R
                                         , SUM(NORM_I_B)    NORM_I_B
                                         , SUM(ALLO_I_A)    ALLO_I_A
                                         , SUM(ALLO_I_E)    ALLO_I_E
                                         , SUM(ALLO_I_R)    ALLO_I_R
                                         , SUM(ALLO_I_B)    ALLO_I_B
                                         , SUM(TRANS_I_A)   TRANS_I_A
                                         , SUM(TRANS_I_E)   TRANS_I_E
                                         , SUM(TRANS_I_R)   TRANS_I_R
                                         , SUM(TRANS_I_B)   TRANS_I_B
                                         , SUM(RET_II_A)    RET_II_A
                                         , SUM(RET_II_E)    RET_II_E
                                         , SUM(RET_II_R)    RET_II_R
                                         , SUM(RET_II_B)    RET_II_B
                                         , SUM(RET_EI_A)    RET_EI_A
                                         , SUM(RET_EI_E)    RET_EI_E
                                         , SUM(RET_EI_R)    RET_EI_R
                                         , SUM(RET_EI_B)    RET_EI_B
                                         , SUM(ETC_I_A)    ETC_I_A
                                         , SUM(ETC_I_E)    ETC_I_E
                                      FROM (SELECT SUBSTR(I1.STR_RGST_DT, 1, 6) AS STR_RGST_DT
                                                 , I1.STR_WARE_NO AS WARE_NO
                                                 , I1.ITM_PD_CD /* ITEM_CD + PART_CD */
                                                 , I1.STR_TP_CD
                                                 , I1.ITM_GD_CD
                                                 , CASE WHEN I1.STR_TP_CD = '110' AND I1.ITM_GD_CD = 'A' THEN I1.STR_QTY ELSE 0 END BUY_A
                                                 , CASE WHEN I1.STR_TP_CD = '110' AND I1.ITM_GD_CD = 'B' THEN I1.STR_QTY ELSE 0 END BUY_B
                                                 , CASE WHEN I1.STR_TP_CD = '117' AND I1.ITM_GD_CD = 'A' THEN I1.STR_QTY ELSE 0 END ETC_I_A
                                                 , CASE WHEN I1.STR_TP_CD = '117' AND I1.ITM_GD_CD = 'E' THEN I1.STR_QTY ELSE 0 END ETC_I_E
                                                 , CASE WHEN I1.STR_TP_CD = '121' AND I1.ITM_GD_CD = 'A' THEN I1.STR_QTY ELSE 0 END NORM_I_A
                                                 , CASE WHEN I1.STR_TP_CD = '121' AND I1.ITM_GD_CD = 'B' THEN I1.STR_QTY ELSE 0 END NORM_I_B
                                                 , CASE WHEN I1.STR_TP_CD = '121' AND I1.ITM_GD_CD = 'E' THEN I1.STR_QTY ELSE 0 END NORM_I_E
                                                 , CASE WHEN I1.STR_TP_CD = '121' AND I1.ITM_GD_CD = 'R' THEN I1.STR_QTY ELSE 0 END NORM_I_R
                                                 , CASE WHEN I1.STR_TP_CD = '122' AND I1.ITM_GD_CD = 'A' THEN I1.STR_QTY ELSE 0 END ALLO_I_A
                                                 , CASE WHEN I1.STR_TP_CD = '122' AND I1.ITM_GD_CD = 'B' THEN I1.STR_QTY ELSE 0 END ALLO_I_B
                                                 , CASE WHEN I1.STR_TP_CD = '122' AND I1.ITM_GD_CD = 'E' THEN I1.STR_QTY ELSE 0 END ALLO_I_E
                                                 , CASE WHEN I1.STR_TP_CD = '122' AND I1.ITM_GD_CD = 'R' THEN I1.STR_QTY ELSE 0 END ALLO_I_R
                                                 , CASE WHEN I1.STR_TP_CD = '123' AND I1.ITM_GD_CD = 'A' THEN I1.STR_QTY ELSE 0 END TRANS_I_A
                                                 , CASE WHEN I1.STR_TP_CD = '123' AND I1.ITM_GD_CD = 'B' THEN I1.STR_QTY ELSE 0 END TRANS_I_B
                                                 , CASE WHEN I1.STR_TP_CD = '123' AND I1.ITM_GD_CD = 'E' THEN I1.STR_QTY ELSE 0 END TRANS_I_E
                                                 , CASE WHEN I1.STR_TP_CD = '123' AND I1.ITM_GD_CD = 'R' THEN I1.STR_QTY ELSE 0 END TRANS_I_R
                                                 , CASE WHEN I1.STR_TP_CD = '161' AND I1.ITM_GD_CD = 'A' THEN I1.STR_QTY ELSE 0 END RET_II_A
                                                 , CASE WHEN I1.STR_TP_CD = '161' AND I1.ITM_GD_CD = 'B' THEN I1.STR_QTY ELSE 0 END RET_II_B
                                                 , CASE WHEN I1.STR_TP_CD = '161' AND I1.ITM_GD_CD = 'E' THEN I1.STR_QTY ELSE 0 END RET_II_E
                                                 , CASE WHEN I1.STR_TP_CD = '161' AND I1.ITM_GD_CD = 'R' THEN I1.STR_QTY ELSE 0 END RET_II_R
                                                 , CASE WHEN I1.STR_TP_CD = '162' AND I1.ITM_GD_CD = 'A' THEN I1.STR_QTY ELSE 0 END RET_EI_A
                                                 , CASE WHEN I1.STR_TP_CD = '162' AND I1.ITM_GD_CD = 'B' THEN I1.STR_QTY ELSE 0 END RET_EI_B
                                                 , CASE WHEN I1.STR_TP_CD = '162' AND I1.ITM_GD_CD = 'E' THEN I1.STR_QTY ELSE 0 END RET_EI_E
                                                 , CASE WHEN I1.STR_TP_CD = '162' AND I1.ITM_GD_CD = 'R' THEN I1.STR_QTY ELSE 0 END RET_EI_R
                                              FROM TB_SVST_ITM_STR_IZ I1 /* 품목입고내역 */
                                             WHERE I1.STR_RGST_DT BETWEEN #{mngtYm} || '01' AND #{mngtYm} || '31'
                                               AND SUBSTR(I1.STR_WARE_NO, 1, 1) = #{wareDvCd}
                                         )
                                     GROUP BY STR_RGST_DT, WARE_NO, ITM_PD_CD
                     ) IN_D1
                    ON IN_D1.STR_RGST_DT = T1.BASE_YM
                   AND IN_D1.WARE_NO = T1.WARE_NO
                   AND IN_D1.ITM_PD_CD = T1.PD_CD
                  LEFT OUTER JOIN (SELECT STR_RGST_DT
                                         , WARE_NO
                                         , ITM_PD_CD
                                         , SUM(WRK_O_A) WRK_I_A
                                         , SUM(WRK_O_B) WRK_I_B
                                         , SUM(WRK_O_E) WRK_I_E
                                         , SUM(WRK_O_R) WRK_I_R
                                      FROM (SELECT SUBSTR(I2.FNL_VST_FSH_DT, 1, 6) AS STR_RGST_DT
                                                 , I2.WK_WARE_NO AS WARE_NO
                                                 , I2.ITM_PD_CD
                                                 , CASE WHEN I2.FNL_ITM_GD_CD = 'A' THEN I2.USE_QTY ELSE 0 END WRK_O_A
                                                 , CASE WHEN I2.FNL_ITM_GD_CD = 'B' THEN I2.USE_QTY ELSE 0 END WRK_O_B
                                                 , CASE WHEN I2.FNL_ITM_GD_CD = 'E' THEN I2.USE_QTY ELSE 0 END WRK_O_E
                                                 , CASE WHEN I2.FNL_ITM_GD_CD = 'R' THEN I2.USE_QTY ELSE 0 END WRK_O_R
                                              FROM TB_SVST_SV_WK_OSTR_IZ I2 /* 서비스작업출고내역 */
                                             WHERE I2.SV_BIZ_HCLSF_CD = '6' /* 서비스업무대분류코드 = 6 (반품처리) */
                                               AND I2.FNL_VST_FSH_DT BETWEEN #{mngtYm} || '01' AND #{mngtYm} || '31'
                                               AND SUBSTR(I2.WK_WARE_NO, 1, 1) = #{wareDvCd}
                                         )
                                     GROUP BY STR_RGST_DT, WARE_NO, ITM_PD_CD
                     ) IN_D2
                    ON IN_D2.STR_RGST_DT = T1.BASE_YM
                   AND IN_D2.WARE_NO = T1.WARE_NO
                   AND IN_D2.ITM_PD_CD = T1.PD_CD
                  LEFT OUTER JOIN (SELECT STR_RGST_DT
                                         , WARE_NO
                                         , ITM_PD_CD
                                         , SUM(ETC1_I_A) ETC1_I_A
                                         , SUM(ETC1_I_E) ETC1_I_E
                                         , SUM(ETC1_I_R) ETC1_I_R
                                         , SUM(ETC1_I_B) ETC1_I_B
                                      FROM (SELECT SUBSTR(I3.STAT_CTR_APY_DT, 1, 6) AS STR_RGST_DT
                                                 , I3.WARE_NO
                                                 , I3.PD_CD AS ITM_PD_CD
                                                 , CASE WHEN I3.AFCT_ITM_GD_CD = 'A' THEN I3.CTR_QTY ELSE 0 END ETC1_I_A
                                                 , CASE WHEN I3.AFCT_ITM_GD_CD = 'B' THEN I3.CTR_QTY ELSE 0 END ETC1_I_B
                                                 , CASE WHEN I3.AFCT_ITM_GD_CD = 'E' THEN I3.CTR_QTY ELSE 0 END ETC1_I_E
                                                 , CASE WHEN I3.AFCT_ITM_GD_CD = 'R' THEN I3.CTR_QTY ELSE 0 END ETC1_I_R
                                              FROM TB_SVST_ITM_GD_CTR_IZ I3 /* 품목등급조정내역 */
                                             WHERE I3.STAT_CTR_APY_DT BETWEEN #{mngtYm} || '01' AND #{mngtYm} || '31'
                                               AND SUBSTR(I3.WARE_NO, 1, 1) = #{wareDvCd}
                                         )
                                     GROUP BY STR_RGST_DT, WARE_NO, ITM_PD_CD
                     ) IN_D3
                    ON IN_D3.WARE_NO = T1.WARE_NO
                   AND IN_D3.ITM_PD_CD = T1.PD_CD
                  LEFT OUTER JOIN (SELECT OSTR_DT
                                         , OSTR_WARE_NO
                                         , ITM_PD_CD
                                         , SUM(SALE_O_A)    SALE_O_A
                                         , SUM(SALE_O_B)    SALE_O_B
                                         , SUM(DIS_O_A)     DIS_O_A
                                         , SUM(DIS_O_B)     DIS_O_B
                                         , SUM(DIS_O_E)     DIS_O_E
                                         , SUM(DIS_O_R)     DIS_O_R
                                         , SUM(NORM_O_A)    NORM_O_A
                                         , SUM(NORM_O_B)    NORM_O_B
                                         , SUM(NORM_O_E)    NORM_O_E
                                         , SUM(NORM_O_R)    NORM_O_R
                                         , SUM(ALLO_O_A)    ALLO_O_A
                                         , SUM(ALLO_O_B)    ALLO_O_B
                                         , SUM(ALLO_O_E)    ALLO_O_E
                                         , SUM(ALLO_O_R)    ALLO_O_R
                                         , SUM(TRANS_O_A)   TRANS_O_A
                                         , SUM(TRANS_O_B)   TRANS_O_B
                                         , SUM(TRANS_O_E)   TRANS_O_E
                                         , SUM(TRANS_O_R)   TRANS_O_R
                                         , SUM(RET_IO_A)    RET_IO_A
                                         , SUM(RET_IO_B)    RET_IO_B
                                         , SUM(RET_IO_E)    RET_IO_E
                                         , SUM(RET_IO_R)    RET_IO_R
                                         , SUM(RET_EO_A)    RET_EO_A
                                         , SUM(RET_EO_B)    RET_EO_B
                                         , SUM(RET_EO_E)    RET_EO_E
                                         , SUM(RET_EO_R)    RET_EO_R
                                         , SUM(ETC_O_A)     ETC_O_A
                                         , SUM(ETC_O_B)     ETC_O_B
                                         , SUM(ETC_O_E)     ETC_O_E
                                         , SUM(ETC_O_R)     ETC_O_R
                                         , SUM(REFUR_O_A)   REFUR_O_A
                                         , SUM(REFUR_O_B)   REFUR_O_B
                                         , SUM(REFUR_O_E)   REFUR_O_E
                                         , SUM(REFUR_O_R)   REFUR_O_R
                                      FROM (SELECT SUBSTR(O1.OSTR_DT, 1, 6) AS OSTR_DT
                                                 , O1.OSTR_WARE_NO
                                                 , O1.ITM_PD_CD
                                                 , O1.OSTR_TP_CD
                                                 , O1.ITM_GD_CD
                                                 , CASE WHEN O1.OSTR_TP_CD = '211' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END SALE_O_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '211' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END SALE_O_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '212' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END DIS_O_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '212' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END DIS_O_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '212' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END DIS_O_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '212' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END DIS_O_R
                                                 , CASE WHEN O1.OSTR_TP_CD = '221' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END NORM_O_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '221' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END NORM_O_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '221' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END NORM_O_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '221' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END NORM_O_R
                                                 , CASE WHEN O1.OSTR_TP_CD = '222' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END ALLO_O_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '222' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END ALLO_O_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '222' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END ALLO_O_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '222' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END ALLO_O_R
                                                 , CASE WHEN O1.OSTR_TP_CD = '223' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END TRANS_O_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '223' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END TRANS_O_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '223' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END TRANS_O_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '223' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END TRANS_O_R
                                                 , CASE WHEN O1.OSTR_TP_CD = '261' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END RET_IO_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '261' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END RET_IO_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '261' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END RET_IO_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '261' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END RET_IO_R
                                                 , CASE WHEN O1.OSTR_TP_CD = '262' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END RET_EO_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '262' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END RET_EO_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '262' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END RET_EO_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '262' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END RET_EO_R
                                                 , CASE WHEN O1.OSTR_TP_CD = '217' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END ETC_O_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '217' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END ETC_O_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '217' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END ETC_O_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '217' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END ETC_O_R
                                                 , CASE WHEN O1.OSTR_TP_CD = '218' AND O1.ITM_GD_CD = 'A' THEN O1.OSTR_QTY ELSE 0 END REFUR_O_A
                                                 , CASE WHEN O1.OSTR_TP_CD = '218' AND O1.ITM_GD_CD = 'B' THEN O1.OSTR_QTY ELSE 0 END REFUR_O_B
                                                 , CASE WHEN O1.OSTR_TP_CD = '218' AND O1.ITM_GD_CD = 'E' THEN O1.OSTR_QTY ELSE 0 END REFUR_O_E
                                                 , CASE WHEN O1.OSTR_TP_CD = '218' AND O1.ITM_GD_CD = 'R' THEN O1.OSTR_QTY ELSE 0 END REFUR_O_R
                                              FROM TB_SVST_ITM_OSTR_IZ O1 /* 품목출고내역 */
                                             WHERE O1.OSTR_DT BETWEEN #{mngtYm} || '01' AND #{mngtYm} || '31'
                                               AND SUBSTR(O1.OSTR_WARE_NO, 1, 1) = #{wareDvCd}
                                         )
                                     GROUP BY OSTR_DT, OSTR_WARE_NO, ITM_PD_CD
                     ) OUT_DT1
                    ON OUT_DT1.OSTR_DT = T1.BASE_YM
                   AND OUT_DT1.OSTR_WARE_NO = T1.WARE_NO
                   AND OUT_DT1.ITM_PD_CD = T1.PD_CD
                  LEFT OUTER JOIN (SELECT OSTR_DT
                                         , OSTR_WARE_NO
                                         , ITM_PD_CD
                                         , SUM(WRK_O_A) WRK_O_A
                                         , SUM(WRK_O_E) WRK_O_E
                                         , SUM(WRK_O_R) WRK_O_R
                                         , SUM(WRK_O_B) WRK_O_B
                                      FROM (SELECT SUBSTR(O2.FNL_VST_FSH_DT, 1, 6) AS OSTR_DT
                                                 , O2.WK_WARE_NO AS OSTR_WARE_NO
                                                 , O2.ITM_PD_CD
                                                 , CASE WHEN O2.FNL_ITM_GD_CD = 'A' THEN O2.USE_QTY ELSE 0 END WRK_O_A
                                                 , CASE WHEN O2.FNL_ITM_GD_CD = 'B' THEN O2.USE_QTY ELSE 0 END WRK_O_B
                                                 , CASE WHEN O2.FNL_ITM_GD_CD = 'E' THEN O2.USE_QTY ELSE 0 END WRK_O_E
                                                 , CASE WHEN O2.FNL_ITM_GD_CD = 'R' THEN O2.USE_QTY ELSE 0 END WRK_O_R
                                              FROM TB_SVST_SV_WK_OSTR_IZ O2 /* 서비스작업출고내역 */
                                             WHERE O2.SV_BIZ_HCLSF_CD IN ('1', '2', '3', '4') /* 서비스업무대분류코드 */
                                               AND O2.FNL_VST_FSH_DT BETWEEN #{mngtYm} || '01' AND #{mngtYm} || '31'
                                               AND SUBSTR(O2.WK_WARE_NO, 1, 1) = #{wareDvCd}
                                         )
                                     GROUP BY OSTR_DT, OSTR_WARE_NO, ITM_PD_CD
                     ) OUT_DT2
                    ON OUT_DT2.OSTR_DT = T1.BASE_YM
                   AND OUT_DT2.OSTR_WARE_NO = T1.WARE_NO
                   AND OUT_DT2.ITM_PD_CD = T1.PD_CD
                  LEFT OUTER JOIN (SELECT OSTR_DT
                                         , OSTR_WARE_NO
                                         , ITM_PD_CD
                                         , SUM(ETC1_O_A) ETC1_O_A
                                         , SUM(ETC1_O_B) ETC1_O_B
                                         , SUM(ETC1_O_E) ETC1_O_E
                                         , SUM(ETC1_O_R) ETC1_O_R
                                      FROM (SELECT SUBSTR(O3.STAT_CTR_APY_DT, 1, 6) AS OSTR_DT
                                                 , O3.WARE_NO AS OSTR_WARE_NO
                                                 , O3.PD_CD AS ITM_PD_CD
                                                 , CASE WHEN O3.BFCT_ITM_GD_CD = 'A' THEN O3.CTR_QTY ELSE 0 END ETC1_O_A
                                                 , CASE WHEN O3.BFCT_ITM_GD_CD = 'B' THEN O3.CTR_QTY ELSE 0 END ETC1_O_B
                                                 , CASE WHEN O3.BFCT_ITM_GD_CD = 'E' THEN O3.CTR_QTY ELSE 0 END ETC1_O_E
                                                 , CASE WHEN O3.BFCT_ITM_GD_CD = 'R' THEN O3.CTR_QTY ELSE 0 END ETC1_O_R
                                              FROM TB_SVST_ITM_GD_CTR_IZ O3 /* 품목등급조정내역 */
                                             WHERE O3.STAT_CTR_APY_DT BETWEEN #{mngtYm} || '01' AND #{mngtYm} || '31'
                                               AND SUBSTR(O3.WARE_NO, 1, 1) = #{wareDvCd}
                                         )
                                     GROUP BY OSTR_DT, OSTR_WARE_NO, ITM_PD_CD
                     ) OUT_DT3
                    ON OUT_DT3.OSTR_WARE_NO = T1.WARE_NO
                   AND OUT_DT3.ITM_PD_CD = T1.PD_CD
                 WHERE T1.BASE_YM = #{mngtYm}
                   AND SUBSTR(T1.WARE_NO, 1, 1) = #{wareDvCd}
             ) M
         WHERE 1 = 1
           AND (PITM_STOC_A_GD_QTY <> CHEK_QTY_A
            OR PITM_STOC_E_GD_QTY <> CHEK_QTY_E
            OR PITM_STOC_R_GD_QTY <> CHEK_QTY_R
            OR PITM_STOC_B_GD_QTY <> CHEK_QTY_B
            OR PRCHS_STR_QTY <> BUY_A
            OR PRCHS_STR_B_GD_QTY <> BUY_B
            OR NOM_STR_A_GD_QTY <> NORM_I_A
            OR NOM_STR_E_GD_QTY <> NORM_I_E
            OR NOM_STR_R_GD_QTY <> NORM_I_R
            OR NOM_STR_B_GD_QTY <> NORM_I_B
            OR QOM_ASN_STR_A_GD_QTY <> ALLO_I_A
            OR QOM_ASN_STR_E_GD_QTY <> ALLO_I_E
            OR QOM_ASN_STR_R_GD_QTY <> ALLO_I_R
            OR QOM_ASN_STR_B_GD_QTY <> ALLO_I_B
            OR QOM_MMT_STR_A_GD_QTY <> TRANS_I_A
            OR QOM_MMT_STR_E_GD_QTY <> TRANS_I_E
            OR QOM_MMT_STR_R_GD_QTY <> TRANS_I_R
            OR QOM_MMT_STR_B_GD_QTY <> TRANS_I_B
            OR RTNGD_STR_INSI_A_GD_QTY <> RET_II_A
            OR RTNGD_STR_INSI_E_GD_QTY <> RET_II_E
            OR RTNGD_STR_INSI_R_GD_QTY <> RET_II_R
            OR RTNGD_STR_INSI_B_GD_QTY <> RET_II_B
            OR RTNGD_STR_OTSD_A_GD_QTY <> RET_EI_A
            OR RTNGD_STR_OTSD_E_GD_QTY <> RET_EI_E
            OR RTNGD_STR_OTSD_R_GD_QTY <> RET_EI_R
            OR RTNGD_STR_OTSD_B_GD_QTY <> RET_EI_B
            OR ETC_STR_A_GD_QTY <> ETC_I_A
            OR ETC_STR_E_GD_QTY <> ETC_I_E
            OR ETC_STR_A_GD_QTY1 <> ETC1_I_A
            OR ETC_STR_E_GD_QTY1 <> ETC1_I_E
            OR ETC_STR_R_GD_QTY1 <> ETC1_I_R
            OR ETC_STR_B_GD_QTY1 <> ETC1_I_B
            OR NOM_OSTR_A_GD_QTY <> NORM_O_A
            OR NOM_OSTR_E_GD_QTY <> NORM_O_E
            OR NOM_OSTR_R_GD_QTY <> NORM_O_R
            OR NOM_OSTR_B_GD_QTY <> NORM_O_B
            OR QOM_ASN_OSTR_A_GD_QTY <> ALLO_O_A
            OR QOM_ASN_OSTR_E_GD_QTY <> ALLO_O_E
            OR QOM_ASN_OSTR_R_GD_QTY <> ALLO_O_R
            OR QOM_ASN_OSTR_B_GD_QTY <> ALLO_O_B
            OR QOM_MMT_OSTR_A_GD_QTY <> TRANS_O_A
            OR QOM_MMT_OSTR_E_GD_QTY <> TRANS_O_E
            OR QOM_MMT_OSTR_R_GD_QTY <> TRANS_O_R
            OR QOM_MMT_OSTR_B_GD_QTY <> TRANS_O_B
            OR RTNGD_OSTR_INSI_A_GD_QTY <> RET_IO_A
            OR RTNGD_OSTR_INSI_E_GD_QTY <> RET_IO_E
            OR RTNGD_OSTR_INSI_R_GD_QTY <> RET_IO_R
            OR RTNGD_OSTR_INSI_B_GD_QTY <> RET_IO_B
            OR RTNGD_OSTR_OTSD_A_GD_QTY <> RET_EO_A
            OR RTNGD_OSTR_OTSD_E_GD_QTY <> RET_EO_E
            OR RTNGD_OSTR_OTSD_R_GD_QTY <> RET_EO_R
            OR RTNGD_OSTR_OTSD_B_GD_QTY <> RET_EO_B
            OR SELL_OSTR_QTY    <> SALE_O_A
            OR SELL_OSTR_B_GD_QTY  <> SALE_O_B
            OR DSU_OSTR_A_GD_QTY <> DIS_O_A
            OR DSU_OSTR_E_GD_QTY <> DIS_O_E
            OR DSU_OSTR_R_GD_QTY <> DIS_O_R
            OR DSU_OSTR_B_GD_QTY <> DIS_O_B
            OR ETC_OSTR_A_GD_QTY <> ETC_O_A
            OR ETC_OSTR_E_GD_QTY <> ETC_O_E
            OR ETC_OSTR_R_GD_QTY <> ETC_O_R
            OR ETC_OSTR_B_GD_QTY <> ETC_O_B
            OR REFR_OSTR_A_GD_QTY <> REFUR_O_A
            OR REFR_OSTR_E_GD_QTY <> REFUR_O_E
            OR REFR_OSTR_R_GD_QTY <> REFUR_O_R
            OR REFR_OSTR_B_GD_QTY <> REFUR_O_B
            OR ETC_OSTR_A_GD_QTY1 <> ETC1_O_A
            OR ETC_OSTR_E_GD_QTY1 <> ETC1_O_E
            OR ETC_OSTR_R_GD_QTY1 <> ETC1_O_R
            OR ETC_OSTR_B_GD_QTY1 <> ETC1_O_B
            OR WK_OSTR_A_GD_QTY <> WRK_O_A
            OR WK_OSTR_E_GD_QTY <> WRK_O_E
            OR WK_OSTR_R_GD_QTY <> WRK_O_R
            OR WK_OSTR_B_GD_QTY <> WRK_O_B)
    ]]>
    </select>

    <select id="selectPointInTimeDiff" resultType="com.kyowon.sms.wells.web.service.stock.dvo.WsnaStockMasterRenewalDvo">
    <![CDATA[
        SELECT T1.WARE_NO
             , T1.ITM_PD_CD
             , T2.PITM_STOC_A_GD_QTY
             , T2.PITM_STOC_E_GD_QTY
             , T2.PITM_STOC_R_GD_QTY
             , T2.PITM_STOC_B_GD_QTY
          FROM TB_SVST_CST_SV_ITM_STOC_IZ T1 /* 고객서비스품목재고내역 */
         INNER JOIN TB_SVST_MCITM_STOC_IZ T2 /* 월별품목재고내역 */
            ON T2.WARE_NO = T1.WARE_NO
           AND T2.PD_CD = T1.ITM_PD_CD
         WHERE T2.BASE_YM = #{mngtYm}
           AND SUBSTR(T2.WARE_NO, 1, 1) = #{wareDvCd}
           AND (T1.PITM_STOC_A_GD_QTY <> T2.PITM_STOC_A_GD_QTY
            OR T1.PITM_STOC_E_GD_QTY <> T2.PITM_STOC_E_GD_QTY
            OR T1.PITM_STOC_R_GD_QTY <> T2.PITM_STOC_R_GD_QTY
            OR T1.PITM_STOC_B_GD_QTY <> T2.PITM_STOC_B_GD_QTY)
    ]]>
    </select>

    <select id="selectMovementDiff" resultType="com.kyowon.sms.wells.web.service.stock.dvo.WsnaStockMasterRenewalDvo">
    <![CDATA[
        SELECT S1.WARE_NO
             , S1.ITM_PD_CD
             , NVL(S2.BUFF_QTY_A, 0) AS BUFF_QTY_A
             , NVL(S2.BUFF_QTY_E, 0) AS BUFF_QTY_E
             , NVL(S2.BUFF_QTY_R, 0) AS BUFF_QTY_R
             , NVL(S2.BUFF_QTY_B, 0) AS BUFF_QTY_B
          FROM TB_SVST_CST_SV_ITM_STOC_IZ S1 /* 고객서비스품목재고내역 */
          LEFT OUTER JOIN (SELECT I2.STR_WARE_NO
                                 , I2.ITM_PD_CD
                                 , SUM(I2.BUFF_QTY_A) AS BUFF_QTY_A
                                 , SUM(I2.BUFF_QTY_E) AS BUFF_QTY_E
                                 , SUM(I2.BUFF_QTY_R) AS BUFF_QTY_R
                                 , SUM(I2.BUFF_QTY_B) AS BUFF_QTY_B
                              FROM (SELECT I1.STR_WARE_NO
                                         , I1.ITM_PD_CD
                                         , I1.ITM_GD_CD
                                         , CASE WHEN I1.ITM_GD_CD = 'A' THEN SUM(I1.STR_QTY) ELSE 0 END AS BUFF_QTY_A
                                         , CASE WHEN I1.ITM_GD_CD = 'E' THEN SUM(I1.STR_QTY) ELSE 0 END AS BUFF_QTY_E
                                         , CASE WHEN I1.ITM_GD_CD = 'R' THEN SUM(I1.STR_QTY) ELSE 0 END AS BUFF_QTY_R
                                         , CASE WHEN I1.ITM_GD_CD = 'B' THEN SUM(I1.STR_QTY) ELSE 0 END AS BUFF_QTY_B
                                      FROM TB_SVST_ITM_STR_IZ I1 /* 품목입고내역 */
                                     WHERE TO_NUMBER(I1.STR_WARE_NO) > 100000
                                       AND I1.STR_CONF_DT IS NULL
                                     GROUP BY STR_WARE_NO, ITM_PD_CD, ITM_GD_CD
                                 ) I2
                             GROUP BY STR_WARE_NO, ITM_PD_CD
             ) S2
            ON S2.STR_WARE_NO = S1.WARE_NO
           AND S2.ITM_PD_CD = S1.ITM_PD_CD
         WHERE S1.MMT_STOC_A_GD_QTY <> S2.BUFF_QTY_A
            OR S1.MMT_STOC_E_GD_QTY <> S2.BUFF_QTY_E
            OR S1.MMT_STOC_R_GD_QTY <> S2.BUFF_QTY_R
            OR S1.MMT_STOC_B_GD_QTY <> S2.BUFF_QTY_B
    ]]>
    </select>

</mapper>
