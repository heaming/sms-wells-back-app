<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.service.stock.mapper.WsnaIndividualWareOstrMapper">

    <select id="selectProducts" resultType="com.kyowon.sms.wells.web.service.stock.dto.WsnaIndividualWareOstrDto$SearchPdRes">
        SELECT D1.PD_CD
             , D1.PD_NM
             , D2.PD_PRP_VAL19 AS ITM_KND_CD
          FROM TB_PDBS_PD_BAS D1                 /* 상품기본 */
         INNER JOIN TB_PDBS_PD_ECOM_PRP_DTL D2   /* 상품각사속성상세 */
            ON D2.PD_CD = D1.PD_CD
         WHERE D1.DTA_DL_YN          = 'N'
           AND D1.PD_TP_CD           = 'M'
           AND D2.DTA_DL_YN          = 'N'
           AND D2.PD_EXTS_PRP_GRP_CD = 'PART'
           AND D2.PD_PRP_VAL19      IN ('4', '5', '6')   /* 상품, 필터, A/S자재 */
    </select>

    <select id="selectIndividualStrWares" resultType="com.kyowon.sms.wells.web.service.common.dvo.WsnzWellsCodeWareHouseDvo">
    <choose>
        <when test='@MybatisUtils@equals(hgrDvCd, "30")'>
        SELECT DISTINCT D1.HGR_WARE_NO             AS WARE_NO
             , ( SELECT WARE_NM
                   FROM TB_SVST_MCBY_WARE_IZ
                  WHERE APY_YM  = D1.APY_YM
                    AND WARE_NO = D1.HGR_WARE_NO ) AS WARE_NM
        </when>
        <otherwise>
        SELECT D1.WARE_NO
             , D1.WARE_NM
        </otherwise>
    </choose>
          FROM TB_SVST_MCBY_WARE_IZ D1   /* 월별창고내역 */
         INNER JOIN
             (
               SELECT DISTINCT STR_WARE_NO   /* 입고창고번호 */
                 FROM TB_SVST_ITM_QOM_ASN_IZ   /* 품목물량배정내역 */
                WHERE DTA_DL_YN      = 'N'
                  AND ASN_OJ_YM      = #{asnOjYm}
                  AND ASN_TN_N       = #{cnt}
                  AND OSTR_WARE_NO   = #{ostrWareNo}
                  AND WARE_DV_CD     = #{wareDvCd}
                  AND WARE_DTL_DV_CD = #{wareDtlDvCd}
             ) D2
            ON D2.STR_WARE_NO = D1.WARE_NO
         WHERE D1.DTA_DL_YN   = 'N'
           AND D1.APY_YM      = #{apyYm}
        <if test='@MybatisUtils@isNotEmpty(hgrStrWareNo) and !@MybatisUtils@equals(hgrDvCd, "30")'>
           AND D1.HGR_WARE_NO = #{hgrStrWareNo}
        </if>
         ORDER BY WARE_NM
    </select>

    <select id="selectIndividualWareOstrs" resultType="com.kyowon.sms.wells.web.service.stock.dvo.WsnaIndividualWareOstrDvo">
        SELECT CASE WHEN T.ITM_PD_CD IN ('WM07104866', 'WM07100391', 'WM07100392', 'WM07100279', 'WM07100287', 'WM07100289', 'WM07100403', 'WM07100466', 'WM07100469')
                    THEN 'N'
                    WHEN T.OUT_QTY <![CDATA[>]]> 0 AND (T.HGR_CRTL_STOC_QTY - T.TOT_OUT_QTY) <![CDATA[<]]> 5
                    THEN 'Y'
                    WHEN T.OSTR_AK_NO IS NOT NULL
                    THEN 'Y'
                    ELSE 'N'
               END                                 AS CHK           /* Row 체크여부 */
             , T.WARE_NM                                            /* 입고창고 */
             , T.SAP_MAT_CD                                         /* SAP코드 */
             , T.ITM_PD_CD                                          /* 품목코드 */
             , T.PD_ABBR_NM                                         /* 품목명 */
             , T.PART_USE_QTY                                       /* 필터소요량 */
             , T.UNDER_20PER                                        /* 배정수량 대비 재고수량 부족 */
             , T.HGR_CRTL_STOC_QTY                                  /* 센터재고 */
             , T.HGR_CRTL_STOC_QTY - T.TOT_OUT_QTY AS TOT_OUT_QTY   /* 총출고 */
             , T.MNGT_UNIT                                          /* 관리단위 */
             , T.MNGT_UNIT_NM                                       /* 관리단위명 */
             , T.MAT_GD_CD                                          /* 등급 */
             , T.BOX_UNIT_QTY                                       /* 박스단위수량 */
             , T.CRTL_STOC_QTY                                      /* 재고수량 */
             , T.USE_QTY                                            /* 소요수량 */
             , T.CNFM_QTY                                           /* 물량배정확정 수량 */
             , T.CNFM_BOX_QTY                                       /* 물량배정확정 BOX */
             , T.ACL_OSTR_QTY                                       /* 물량배정출고 누계 */
             , T.ACL_OSTR_BOX_QTY                                   /* 물량배정출고 BOX */
             , T.FILTER_BOX_QTY                                     /* 필터박스수량 */
             , T.OUT_QTY                                            /* 출고수량 */
             , T.ITM_QOM_ASN_NO                                     /* 품목물량배정번호 */
             , T.ASN_OJ_YM                                          /* 배정대상년월 */
             , T.OSTR_WARE_NO                                       /* 출고창고번호 */
             , T.STR_WARE_NO                                        /* 입고창고번호 */
             , T.WARE_MNGT_PRTNR_NO                                 /* 창고관리파트너번호 */
             , T.OG_TP_CD                                           /* 조직유형코드 */
             , T.ITM_KND_CD                                         /* 품목종류코드 */
             , T.ASN_TN_N                                           /* 배정회차수 */
             , T.WARE_DV_CD                                         /* 창고구분코드 */
             , T.OSTR_AK_NO                                         /* 출고요청번호 */
             , T.OSTR_AK_SN                                         /* 출고요청일련번호 */
             , T.OSTR_DT                                            /* 출고일자 */
             , T.RMK_CN                                             /* 비고 */
          FROM
             (
               SELECT D1.ITM_PD_CD
                    , D4.PD_ABBR_NM
                    , D5.PD_PRP_VAL05                                                              AS MNGT_UNIT
                    , F_CMZ_CD_NM('TNT_WELLS', 'MNGT_UNIT_CD', D5.PD_PRP_VAL05, #{session.langId}) AS MNGT_UNIT_NM
                    , D1.MAT_GD_CD
                    , NVL(D1.BOX_UNIT_QTY, 0)                                                      AS BOX_UNIT_QTY
                    , D1.CNFM_QTY
                    , CASE WHEN NVL(TO_NUMBER(D5.PD_PRP_VAL12), 0) > 0
                            AND NVL(D1.CNFM_QTY, 0) > 0
                           THEN ROUND( D1.CNFM_QTY / TO_NUMBER(D5.PD_PRP_VAL12), 2 )
                           ELSE 0
                      END                                                                          AS CNFM_BOX_QTY
                    , NVL(D6.OSTR_AK_QTY, NVL(D1.CNFM_QTY, 0) - NVL(D1.ACL_OSTR_QTY, 0))           AS OUT_QTY
                    , NVL(D1.ACL_OSTR_QTY, 0)                                                      AS ACL_OSTR_QTY
                    , CASE WHEN NVL(TO_NUMBER(D5.PD_PRP_VAL12), 0) > 0
                            AND NVL(D1.ACL_OSTR_QTY, 0) > 0
                           THEN ROUND( D1.ACL_OSTR_QTY / TO_NUMBER(D5.PD_PRP_VAL12), 2 )
                           ELSE 0
                      END                                                                          AS ACL_OSTR_BOX_QTY
                    , D1.ASN_OJ_YM
                    , D1.OSTR_WARE_NO
                    , D1.STR_WARE_NO
                    , D1.ITM_QOM_ASN_NO
                    , D1.ASN_TN_N
                    , D2.WARE_MNGT_PRTNR_NO
                    , D2.OG_TP_CD
                    , D5.PD_PRP_VAL19                                                              AS ITM_KND_CD
                    , D4.SAP_MAT_CD
                    , D1.CRTL_STOC_QTY
                    , NVL(D1.WO_ASN_QOM_CT, 0) - NVL(D1.CRTL_STOC_QTY, 0)                          AS USE_QTY
                    , NVL(TO_NUMBER(D5.PD_PRP_VAL12), 0)                                           AS FILTER_BOX_QTY
                    , D2.WARE_NM
                    , D2.WARE_DV_CD
                    , D3.PART_USE_QTY
                    , D6.OSTR_AK_NO
                    , D6.OSTR_AK_SN
                    , D6.OSTR_AK_RGST_DT                                                           AS OSTR_DT
                    , D6.RMK_CN
                    , CASE WHEN D6.ITM_QOM_ASN_NO IS NULL
                           THEN ( SELECT NVL(PITM_STOC_A_GD_QTY, 0) - NVL(MMT_STOC_A_GD_QTY, 0)
                                    FROM TB_SVST_CST_SV_ITM_STOC_IZ
                                   WHERE ITM_PD_CD = D1.ITM_PD_CD
                                     AND WARE_NO   = D2.HGR_WARE_NO
                                     AND DTA_DL_YN = 'N' )
                           ELSE 0
                      END                                                                          AS HGR_CRTL_STOC_QTY
                    , CASE WHEN D6.ITM_QOM_ASN_NO IS NULL
                           THEN ( SELECT NVL(SUM(S1.CNFM_QTY), 0) - NVL(SUM(S1.ACL_OSTR_QTY), 0)
                                    FROM TB_SVST_ITM_QOM_ASN_IZ S1
                                   INNER JOIN TB_SVST_MCBY_WARE_IZ S2
                                      ON S2.WARE_NO = S1.STR_WARE_NO
                                   WHERE S1.ITM_PD_CD    = D1.ITM_PD_CD
                                     AND S1.DTA_DL_YN    = 'N'
                                     AND S2.DTA_DL_YN    = 'N'
                                     AND S1.ASN_OJ_YM    = #{asnOjYm}
                                     AND S1.ASN_TN_N     = #{cnt}
                                     AND S1.OSTR_WARE_NO = #{ostrWareNo}
                                     AND S2.APY_YM       = #{apyYm}
                                     AND S2.HGR_WARE_NO  = #{hgrStrWareNo} )
                           ELSE 0
                      END                                                                          AS TOT_OUT_QTY
                    , CASE WHEN D6.ITM_QOM_ASN_NO IS NULL
                           THEN GREATEST( ( SELECT NVL(SUM(S1.WO_ASN_QOM_CT), 0) * 0.2
                                              FROM TB_SVST_ITM_QOM_ASN_IZ S1
                                             INNER JOIN TB_SVST_MCBY_WARE_IZ S2
                                                ON S2.WARE_NO = S1.STR_WARE_NO
                                             WHERE S1.ITM_PD_CD    = D1.ITM_PD_CD
                                               AND S1.DTA_DL_YN    = 'N'
                                               AND S2.DTA_DL_YN    = 'N'
                                               AND S1.ASN_OJ_YM    = #{asnOjYm}
                                               AND S1.ASN_TN_N     = #{cnt}
                                               AND S1.OSTR_WARE_NO = #{ostrWareNo}
                                               AND S2.APY_YM       = #{apyYm}
                                               AND S2.HGR_WARE_NO  = #{hgrStrWareNo} )
                                          - (  SELECT NVL(S1.PITM_STOC_A_GD_QTY, 0)
                                                 FROM TB_SVST_CST_SV_ITM_STOC_IZ S1
                                                INNER JOIN TB_SVST_MCBY_WARE_IZ S2
                                                   ON S2.HGR_WARE_NO = S1.WARE_NO
                                                WHERE S1.ITM_PD_CD = D1.ITM_PD_CD
                                                  AND S2.WARE_NO   = D1.STR_WARE_NO
                                                  AND S2.APY_YM    = TO_CHAR(SYSDATE, 'YYYYMM')
                                                  AND S1.DTA_DL_YN = 'N'
                                                  AND S2.DTA_DL_YN = 'N' ), 0)
                           ELSE 0
                      END                                                                          AS UNDER_20PER
                 FROM TB_SVST_ITM_QOM_ASN_IZ D1              /* 품목물량배정내역 */
                INNER JOIN TB_SVST_MCBY_WARE_IZ D2           /* 월별창고내역 */
                   ON D2.WARE_NO = D1.STR_WARE_NO
                 LEFT OUTER JOIN
                    (
                      SELECT PART_PD_CD
                           , SUM(PART_USE_QTY) AS PART_USE_QTY
                        FROM TB_SVPD_CST_SV_RGBSPR_IZ   /* 고객서비스정기BS주기내역 */
                       WHERE DTA_DL_YN  = 'N'
                         AND ITM_KND_CD = '5'
                         AND VST_DUEDT LIKE #{asnOjYm} || '%'
                       GROUP BY PART_PD_CD
                    ) D3
                   ON D3.PART_PD_CD = D1.ITM_PD_CD
                INNER JOIN TB_PDBS_PD_BAS D4                 /* 상품기본 */
                   ON D4.PD_CD = D1.ITM_PD_CD
                INNER JOIN TB_PDBS_PD_ECOM_PRP_DTL D5        /* 상품각사속성상세 */
                   ON D5.PD_CD = D4.PD_CD
                 LEFT OUTER JOIN TB_SVST_ITM_OSTR_AK_IZ D6   /* 품목출고요청내역 */
                   ON D6.ITM_QOM_ASN_NO = D1.ITM_QOM_ASN_NO
                  AND D6.DTA_DL_YN      = 'N'
                WHERE D1.DTA_DL_YN          = 'N'
                  AND D2.DTA_DL_YN          = 'N'
                  AND D2.WARE_USE_YN        = 'Y'
                  AND D4.DTA_DL_YN          = 'N'
                  AND D4.PD_TP_CD           = 'M'
                  AND D5.DTA_DL_YN          = 'N'
                  AND D5.PD_EXTS_PRP_GRP_CD = 'PART'
                  AND D5.PD_PRP_VAL19      IN ('4', '5', '6')
                  AND D1.ASN_OJ_YM          = #{asnOjYm}
                  AND D1.ASN_TN_N           = #{cnt}
                  AND D1.OSTR_WARE_NO       = #{ostrWareNo}
                  AND D1.STR_WARE_NO        = #{strWareNo}
                  AND D2.APY_YM             = #{apyYm}
                  AND D2.HGR_WARE_NO        = #{hgrStrWareNo}
            <if test="@MybatisUtils@isNotEmpty(itmKndCd)">
                  AND D5.PD_PRP_VAL19       = #{itmKndCd}
            </if>
            <if test="@MybatisUtils@isNotEmpty(itmPdCd)">
                  AND D1.ITM_PD_CD          = #{itmPdCd}
            </if>
            <if test='@MybatisUtils@isNotEmpty(itmPdCds)'>
                  AND D1.ITM_PD_CD IN
                                <foreach collection="itmPdCds" item="itmPdCd" separator=", " open="(" close=")">
                                       #{itmPdCd}
                                </foreach>
            </if>
            <if test="@MybatisUtils@isNotEmpty(strtSapCd)">
                  AND D4.SAP_MAT_CD <![CDATA[>=]]> LPAD(#{strtSapCd}, 18, '0')
            </if>
            <if test="@MybatisUtils@isNotEmpty(endSapCd)">
                  AND D4.SAP_MAT_CD <![CDATA[<]]>  LPAD(#{endSapCd}, 18, '0')
            </if>
            <if test="@MybatisUtils@isNotEmpty(strtSapCd) or @MybatisUtils@isNotEmpty(endSapCd)">
                  AND D4.SAP_MAT_CD IS NOT NULL
            </if>
             ) T
        <where>
        <if test="@MybatisUtils@isNotEmpty(totOutQty)">
           AND T.HGR_CRTL_STOC_QTY - T.TOT_OUT_QTY = #{totOutQty}
        </if>
        </where>
         ORDER BY T.WARE_NM, T.ITM_PD_CD
    </select>

    <select id="selectNewOstrAkNo" resultType="java.lang.String">
        SELECT #{ostrAkTpCd} || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SQ_SVST_ITM_OSTR_AK_IZ$OSTR_AK_NO.NEXTVAL, 7, '0') AS OSTR_AK_NO
          FROM DUAL
    </select>

    <insert id="mergeItmOstrAkIz">
         MERGE INTO TB_SVST_ITM_OSTR_AK_IZ TB_TGT   /* 품목출고요청내역 */
         USING
             (
               SELECT #{ostrAkNo}                                            AS OSTR_AK_NO           /* 출고요청번호 */
                    , NVL(#{ostrAkSn}, ( SELECT NVL(MAX(OSTR_AK_SN), 0) + 1
                                           FROM TB_SVST_ITM_OSTR_AK_IZ
                                          WHERE OSTR_AK_NO = #{ostrAkNo} ) ) AS OSTR_AK_SN           /* 출고요청일련번호 */
                    , #{strWareNo}                                           AS STR_WRAE_NO          /* 입고창고번호 */
                    , #{ostrWareNo}                                          AS OSTR_WARE_NO         /* 출고대상창고번호 */
                    , #{ostrDt}                                              AS OSTR_DT              /* 출고요청등록일자 */
                    , #{wareDvCd}                                            AS WARE_DV_CD           /* 출고요청창고구분코드 */
                    , #{wareMngtPrtnrNo}                                     AS WARE_MNGT_PRTNR_NO   /* 창고관리파트너번호 */
                    , #{ogTpCd}                                              AS OG_TP_CD             /* 창고관리파트너조직유형코드 */
                    , #{itmPdCd}                                             AS ITM_PD_CD            /* 품목상품코드 */
                    , #{mngtUnit}                                            AS MNGT_UNIT            /* 관리단위코드 */
                    , #{boxUnitQty}                                          AS BOX_UNIT_QTY         /* 박스단위수량 */
                    , #{matGdCd}                                             AS MAT_GD_CD            /* 품목등급코드 */
                    , #{outQty}                                              AS OSTR_AK_QTY          /* 출고요청수량 */
                    , #{outQty}                                              AS OSTR_CNFM_QTY        /* 출고확정수량 */
                    , #{rmkCn}                                               AS RMK_CN               /* 비고내용 */
                    , #{itmQomAsnNo}                                         AS ITM_QOM_ASN_NO       /* 품목물량배정번호 */
                 FROM DUAL
             ) TB_SRC
            ON
             (
                   TB_TGT.OSTR_AK_NO = TB_SRC.OSTR_AK_NO
               AND TB_TGT.OSTR_AK_SN = TB_SRC.OSTR_AK_SN
               AND TB_TGT.DTA_DL_YN  = 'N'
             )
          WHEN MATCHED THEN
        UPDATE
           SET TB_TGT.OSTR_AK_QTY     = TB_SRC.OSTR_AK_QTY
             , TB_TGT.OSTR_CNFM_QTY   = TB_SRC.OSTR_CNFM_QTY
             , TB_TGT.OSTR_AK_RGST_DT = TB_SRC.OSTR_DT
             , TB_TGT.RMK_CN          = TB_SRC.RMK_CN
        <include refid="COMMON.updateSystemField"/>
          WHEN NOT MATCHED THEN
        INSERT
             (
               TB_TGT.OSTR_AK_NO                 /* 출고요청번호 */
             , TB_TGT.OSTR_AK_SN                 /* 출고요청일련번호 */
             , TB_TGT.OSTR_AK_TP_CD              /* 출고요청유형코드 */
             , TB_TGT.STR_OJ_WARE_NO             /* 입고창고번호 */
             , TB_TGT.OSTR_OJ_WARE_NO            /* 출고대상창고번호 */
             , TB_TGT.OSTR_AK_RGST_DT            /* 출고요청등록일자 */
             , TB_TGT.OSTR_AK_WARE_DV_CD         /* 출고요청창고구분코드 */
             , TB_TGT.WARE_MNGT_PRTNR_NO         /* 창고관리파트너번호 */
             , TB_TGT.WARE_MNGT_PRTNR_OG_TP_CD   /* 창고관리파트너조직유형코드 */
             , TB_TGT.OSTR_OJ_WARE_DV_CD         /* 출고대상창고구분코드 */
             , TB_TGT.ITM_PD_CD                  /* 품목상품코드 */
             , TB_TGT.MNGT_UNIT_CD               /* 관리단위코드 */
             , TB_TGT.BOX_UNIT_QTY               /* 박스단위수량 */
             , TB_TGT.ITM_GD_CD                  /* 품목등급코드 */
             , TB_TGT.OSTR_AK_QTY                /* 출고요청수량 */
             , TB_TGT.OSTR_CNFM_QTY              /* 출고확정수량 */
             , TB_TGT.ITM_QOM_ASN_NO             /* 품목물량배정번호 */
             , TB_TGT.RMK_CN                     /* 비고내용 */
             , TB_TGT.DTA_DL_YN                  /* 데이터삭제여부 */
        <include refid="COMMON.insertSystemField"/>
             )
        VALUES
             (
               TB_SRC.OSTR_AK_NO                 /* 출고요청번호 */
             , TB_SRC.OSTR_AK_SN                 /* 출고요청일련번호 */
             , '360'                             /* 출고요청유형코드 */
             , TB_SRC.STR_WRAE_NO                /* 입고창고번호 */
             , TB_SRC.OSTR_WARE_NO               /* 출고대상창고번호 */
             , TB_SRC.OSTR_DT                    /* 출고요청등록일자 */
             , TB_SRC.WARE_DV_CD                 /* 출고요청창고구분코드 */
             , TB_SRC.WARE_MNGT_PRTNR_NO         /* 창고관리파트너번호 */
             , TB_SRC.OG_TP_CD                   /* 창고관리파트너조직유형코드 */
             , '1'                               /* 출고대상창고구분코드 */
             , TB_SRC.ITM_PD_CD                  /* 품목상품코드 */
             , TB_SRC.MNGT_UNIT                  /* 관리단위코드 */
             , TB_SRC.BOX_UNIT_QTY               /* 박스단위수량 */
             , TB_SRC.MAT_GD_CD                  /* 품목등급코드 */
             , TB_SRC.OSTR_AK_QTY                /* 출고요청수량 */
             , TB_SRC.OSTR_CNFM_QTY              /* 출고확정수량 */
             , TB_SRC.ITM_QOM_ASN_NO             /* 품목물량배정번호 */
             , TB_SRC.RMK_CN                     /* 비고내용 */
             , 'N'                               /* 데이터삭제여부 */
        <include refid="COMMON.insertSystemFieldValue"/>
             )
    </insert>


    <update id="updateItmQomAsnIz">
        UPDATE TB_SVST_ITM_QOM_ASN_IZ   /* 품목물량배정내역 */
           SET RECT_OSTR_DUEDT = #{ostrDt}                          /* 최근출고예정일자 */
             , ACL_OSTR_QTY    = NVL(ACL_OSTR_QTY, 0) + #{outQty}   /* 실제출고수량 */
             , RECT_OSTR_TP_CD = '222'                              /* 최근출고유형코드 - 물량배정 */
             , RECT_OSTR_DT    = TO_CHAR(SYSDATE, 'YYYYMMDD')       /* 최근출고일자 */
             , RECT_OSTR_QTY   = #{outQty}                          /* 최근출고수량 */
        <include refid="COMMON.updateSystemField"/>
         WHERE DTA_DL_YN      = 'N'
           AND ITM_QOM_ASN_NO = #{itmQomAsnNo}
    </update>

</mapper>
