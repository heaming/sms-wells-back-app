<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyowon.sms.wells.web.service.stock.mapper.WsnaAssignExcludeItemMapper">

    <select id="selectAssignExcludeItems"
        resultType="com.kyowon.sms.wells.web.service.stock.dto.WsnaAssignExcludeItemDto$SearchRes">
        SELECT CASE WHEN T2.ITM_PD_CD IS NOT NULL THEN '1' ELSE '0' END CHK
             , #{asnExcdDvCd} AS ASN_EXCD_DV_CD
             , CASE #{asnExcdDvCd} WHEN '0' THEN '300000'
                                   WHEN '3' THEN #{wareNo}
                END AS STR_WARE_NO
             , T1.SVPD_PD_CD AS ITM_PD_CD
             , T1.SVPD_NM_KOR AS ITM_PD_NM
             , T1.SVPD_ITEM_KND AS ITM_KND_CD
             , '' AS FLAG
             , T1.SVPD_SAP_CD AS SAP_MAPT_CD
             , '' AS KND
             , T3.WARE_NM AS STR_WARE_NM
          FROM (<include refid="com.kyowon.sms.wells.web.service.common.BASE.selectPartMaster"/>) T1
          LEFT OUTER JOIN TB_SVST_QOM_ASN_EXCD_IZ T2
            ON T1.SVPD_PD_CD = T2.ITM_PD_CD
          LEFT OUTER JOIN TB_SVST_MCBY_WARE_IZ T3
            ON T3.APY_YM = TO_CHAR(SYSDATE,'YYYYMM')
           AND T3.WARE_NO = CASE #{asnExcdDvCd} WHEN '0' THEN '300000'
                                                WHEN '3' THEN #{wareNo}
                             END
       <where>
         <if test="@MybatisUtils@isEmpty(itmKndCd)">
           AND T1.SVPD_ITEM_KND IN ('4','5','6')
         </if>
         <if test="@MybatisUtils@isNotEmpty(itmKndCd)">
           AND T1.SVPD_ITEM_KND = #{itmKndCd}
         </if>
      </where>
         ORDER BY T1.SVPD_PD_CD
    </select>
    <select id="selectWarehouse"
        resultType="com.kyowon.sms.wells.web.service.stock.dto.WsnaAssignExcludeItemDto$WareRes">
        SELECT WARE_NO AS CODE_ID
             , WARE_NM AS CODE_NAME
          FROM TB_SVST_MCBY_WARE_IZ T1
         <where>
           AND APY_YM = #{baseYm}
           AND WARE_DV_CD = '3'
           AND WARE_DTL_DV_CD = '30'
         </where>
    </select>
    <insert id="insertQomAsnExcdIz" parameterType="com.kyowon.sms.wells.web.service.stock.dto.WsnaAssignExcludeItemDto$SaveReq">
        INSERT INTO TB_SVST_QOM_ASN_EXCD_IZ(
               ASN_EXCD_DV_CD
             , STR_WARE_NO
             , ITM_PD_CD
             , ITM_KND_CD
             , DTA_DL_YN
             <include refid="COMMON.insertSystemField"/>
        )
        <foreach collection="list" item="item" separator=" UNION ALL" >
        SELECT #{item.asnExcdDvCd}
             , #{item.strWareNo}
            , #{item.itmPdCd}
            , #{item.itmKndCd}
            , 'N'
            <include refid="COMMON.insertSystemFieldValue"/>
            FROM DAUL
        </foreach>
    </insert>
    <insert id="saveAssignExcludeItems">
        MERGE INTO TB_SVST_QOM_ASN_EXCD_IZ T1
        USING DUAL
           ON (    T1.STR_WARE_NO = #{strWareNo}
               AND T1.ITM_PD_CD = #{itmPdCd}
               AND T1.DTA_DL_YN = 'N'
              )
         WHEN MATCHED THEN
              UPDATE SET T1.ASN_EXCD_DV_CD = #{asnExcdDvCd}
                       , T1.STR_WARE_NO = #{strWareNo}
                       , T1.ITM_PD_CD = #{itmPdCd}
                       , T1.ITM_KND_CD = #{itmKndCd}
                       , T1.DTA_DL_YN = 'N'
                       <include refid="COMMON.updateSystemField"/>
         WHEN NOT MATCHED THEN
              INSERT (   T1.ASN_EXCD_DV_CD
                       , T1.STR_WARE_NO
                       , T1.ITM_PD_CD
                       , T1.ITM_KND_CD
                       , T1.DTA_DL_YN
                       <include refid="COMMON.insertSystemField"/>
                     )VALUES(
                         #{asnExcdDvCd}
                       , #{strWareNo}
                       , #{itmPdCd}
                       , #{itmKndCd}
                       <include refid="COMMON.insertSystemFieldValue"/>
                     )
    </insert>

</mapper>
